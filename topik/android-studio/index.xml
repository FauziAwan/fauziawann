<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Android Studio on Petani Kode — Programmer Pengguna Linux</title>
    <link>https://www.petanikode.com/topik/android-studio/</link>
    <description>Recent content in Android Studio on Petani Kode — Programmer Pengguna Linux</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>id-ID</language>
    <copyright>Copyright (c) 2017, Petani Kode; all rights reserved.</copyright>
    <lastBuildDate>Sat, 16 Apr 2016 00:51:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.petanikode.com/topik/android-studio/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Pemrograman Android: Cara Periksa Konektivitas Internet Pengguna</title>
      <link>https://www.petanikode.com/android-konektivitas-internet/</link>
      <pubDate>Sat, 16 Apr 2016 00:51:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/android-konektivitas-internet/</guid>
      <description>Pengembangan aplikasi yang membutuhkan koneksi internet untuk operasinya, perlu melakukan pengecekan terlebih dahulu.
Contoh sebuah aplikasi yang menreapkan API Google Maps, membutuhkan koneksi internet untuk menampilkan peta.
Akan tetapi, tidak dilakukan pengecekan koneksi internet. Aplikasi pun gagal menampilkan peta dan tampa pesan umpan balik.
Pengecekan koneksi internet akan membantu kita membuat umpan balik ke pengguna aplikasi.
Misalkan, ketika user ingin menampilkan peta Google Map, periksa terlebih dahulu koneksi internetnya. Kalau ada koneksi, izinkan untuk membuka activity Google Map.</description>
    </item>
    
    <item>
      <title>Persiapan Pemrograman Android di Linux Menggunakan Android Studio</title>
      <link>https://www.petanikode.com/android-linux/</link>
      <pubDate>Thu, 14 Apr 2016 14:23:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/android-linux/</guid>
      <description>Pemrograman Android begitu populer saat ini. Banyak programer yang tertarik mempelajari pemrograman Android. Pemrograman Android dapat dilakukan di berbagai platform, salah satunya di sistem operasi Linux. Linux merupakan sistem operasi bebas terbuka dan gratis.
Pada kesempatan ini, saya akan membahas persiapan yang dilakukan sebelum memulai pemrograman Android dengan Android Studio.
1. Instal JDK JDK (Java Development Kit) merupakan bahan dasar yang kita butuhkan untuk pemrograman java. JDK menyediakan kompilator, mesin virtual, dan pustaka (library).</description>
    </item>
    
    <item>
      <title>Cara Mengatasi JDK yang Lebih dari Satu di Linux agar tidak Bentrok</title>
      <link>https://www.petanikode.com/java-jdk-lebih-dari-satu/</link>
      <pubDate>Tue, 05 Apr 2016 22:49:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-jdk-lebih-dari-satu/</guid>
      <description>Saya menginstal lebih dari satu JDK di Linux (Xubuntu). Ada Open JDK 8, Open JDK 7, dan Oracle JDK 8. A
walnya saya hanya punya Open JDK 8. Kemudian setelah mengintal Gradle, Open JDK 7 juga ikut tersintal.
Selain itu, saya juga menginstal Oracle JDK 8 Secara manual di direktori /opt.
Saat ini JDK yang sedang aktif digunakan adalah Open JDK 7.
Beberapa IDE tidak mendukung bila menggunakan Open JDK 7.</description>
    </item>
    
    <item>
      <title>Cara Perbaiki Android Studio yang SDK-nya Tidak Ditemukan</title>
      <link>https://www.petanikode.com/android-studio-sdk-missing/</link>
      <pubDate>Thu, 03 Mar 2016 16:15:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/android-studio-sdk-missing/</guid>
      <description>Setelah saya menginstal Andoid Studio di Ubuntu, ternyata saya menemukan masalah dengan pesan kesalahan &amp;ldquo;Your Android SDK is missing , out of date,or is missing templates&amp;rdquo;. Pesan error itu menandakan, Android Studio tidak menemukan SDK. Jadi, si Android Studio belum mampu membuat proyek baru karena belum ada teman untuk bekerja sama, yaitu si SDK.
Berikut ini langkah-langkah yang saya lakukan untuk memperbaikinya.
1. Buka Android Studio, Klik Configure

2. Masuk ke pengaturan Project Default, klik Project Default.</description>
    </item>
    
    <item>
      <title>Solusi error `KVM is missing` Android Studio</title>
      <link>https://www.petanikode.com/error-android-kvm-is-missing/</link>
      <pubDate>Wed, 13 Jan 2016 10:28:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/error-android-kvm-is-missing/</guid>
      <description>Emulator Android Studio yang saya instal di Linux (Xubuntu 15.10) 32bit, tidak bisa dijalankan. Meskipun saya sudah memberikan argumen -force-32bit dan menginstal KVM.
emulator: ERROR: x86 emulation currently requires hardware acceleration!
Please ensure KVM is properly installed and usable.
CPU acceleration status: KVM is not installed on this machine (/dev/kvm is missing).Itulah pesan error yang saya dapatkan saat mencoba menjalankan sebuah proyek.

Sepertinya masalah ini cukup sulit untuk diatasi. Tetapi, setelah membaca jawaban dari sebuah pertanyaan di askubuntu, masalah ini dapat saya atasi.</description>
    </item>
    
    <item>
      <title>Emulator alternatif untuk Android Studio</title>
      <link>https://www.petanikode.com/android-emulator-alternatif/</link>
      <pubDate>Fri, 13 Nov 2015 21:05:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/android-emulator-alternatif/</guid>
      <description>Bila kamu tidak ingin menggunakan emulator bawaan Android SDK atau terasa berat, mungkin bisa coba emulator alternatif.
Ada dua alternatif emulator untuk debug dan deploy aplikasi android:
 Menggunakan Genymotion Menggunakan Hp sendiri  Geanymotion adalah emulator android pihak ketiga yang berbasis virtualbox. Ada yang mengklaim emulator ini lebih cepat dibandingkan emulator bawaan android studio.
Cara Instal Geanymotion untuk Emulator Android Studio 1. Pastikan virtualbox sudah terinstal Genymotion memanfaatkan virtualbox untuk melakuan virtualisasi.</description>
    </item>
    
  </channel>
</rss>