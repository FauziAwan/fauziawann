<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lab.Java on Petani Kode — Programmer Pengguna Linux</title>
    <link>http://petanikode.com/topik/lab.java/index.xml</link>
    <description>Recent content in Lab.Java on Petani Kode — Programmer Pengguna Linux</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>id-id</language>
    <copyright>Copyright (c) 2017, Petani Kode; all rights reserved.</copyright>
    <atom:link href="http://petanikode.com/topik/lab.java/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Pemrograman Java di Lab (16): Fungsi dan Method</title>
      <link>http://petanikode.com/pemrograman-java-di-lab-16-fungsi-dan-method/</link>
      <pubDate>Fri, 22 Apr 2016 20:31:00 +0000</pubDate>
      
      <guid>http://petanikode.com/pemrograman-java-di-lab-16-fungsi-dan-method/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Pemrograman Java di Lab Petani Kode&#34; src=&#34;https://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; /&gt;&lt;br /&gt;Fungsi dan &lt;i&gt;Method&lt;/i&gt; merupakan bagian dari program yang bertugas melakukan operasi tertentu. Pada teknik pemrograman prosedural seperti pemrograman Pascal, C, C++, PHP, dsb. Program dibentuk dari kumpulan fungsi atau prosedur yang saling bekerja sama. Fungsi-fungsi tersebut akan dipanggil pada fungsi &lt;code&gt;main&lt;/code&gt;. Fungsi &lt;code&gt;main&lt;/code&gt; merupakan fungsi utama dalam sebuah program.&lt;br /&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-LMvdR9YOW-U/VxnanA7PSJI/AAAAAAAACwE/rw65mXoukjoYuJ9yaeo8ershV1L82ixggCK4B/s1600/Program%2BKalkulator%2Bdibuat%2Bdari%2Bsekumpulan%2Bfungsi.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img alt=&#34;Ilustrasi komponen program yang dibangun dari fungsi-fungsi&#34; border=&#34;0&#34; src=&#34;https://3.bp.blogspot.com/-LMvdR9YOW-U/VxnanA7PSJI/AAAAAAAACwE/rw65mXoukjoYuJ9yaeo8ershV1L82ixggCK4B/s1600/Program%2BKalkulator%2Bdibuat%2Bdari%2Bsekumpulan%2Bfungsi.png&#34; title=&#34;&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Pada pemrograman Java, Fungsi atau prosedur dikenal dengan method (metode). Java sepenuhnya menerapkan paradigma pemrograman berorientasi objek (PBO), dalam bahasa inggris disebut OOP &lt;i&gt;(Object Oriented Programming)&lt;/i&gt;.&lt;br /&gt;&lt;br /&gt;Pada pertemuan pertama praktikum ini, kita memandang &lt;i&gt;class&lt;/i&gt; Java sebagai sebuah program. Di dalam kelas java tedapat atribut dan &lt;i&gt;method&lt;/i&gt;. Atribut merupakan sebuah variabel dan &lt;i&gt;method&lt;/i&gt; merupakan sebuah fungsi untuk melakukan operasi tertentu terhadap atribut.&lt;br /&gt;&lt;h2 id=&#34;membuat-fungsi-atau-method&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#membuat-fungsi-atau-method&#34; name=&#34;membuat-fungsi-atau-method&#34;&gt;&lt;/a&gt;Membuat Fungsi atau Method&lt;/h2&gt;Fungsi atau method, harus dibuat di dalam &lt;i&gt;class&lt;/i&gt;, format dasarnya:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;static TypeDataKembalian namaMethod(){&lt;br /&gt;    // statemen atau kode fungsi&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Contoh:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;static void ucapSalam(){&lt;br /&gt;    System.out.println(&amp;ldquo;Assalamualaykum&amp;rdquo;);&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Kita menggunakan kata kunci &lt;code&gt;static&lt;/code&gt; agar fungsi dapat dipanggil di dalam fungsi &lt;i&gt;main&lt;/i&gt;. Tipe data &lt;code&gt;void&lt;/code&gt; artinya kosong, fungsi tersebut tidak mengebalikan nilai apa-apa.&lt;br /&gt;&lt;h2 id=&#34;memanggil-fungsi&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#memanggil-fungsi&#34; name=&#34;memanggil-fungsi&#34;&gt;&lt;/a&gt;Memanggil Fungsi&lt;/h2&gt;Fungsi dapat dipanggil dari fungsi &lt;code&gt;main&lt;/code&gt; atau dari fungsi yang lain. Contoh pemanggilan fungsi dalam dalam funsgi &lt;code&gt;main&lt;/code&gt;.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;public static void main(String[] args){&lt;br /&gt;    ucapSalam();&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Akan menghasilkan output:&lt;br /&gt;&lt;pre&gt;&lt;code&gt;Assalamualaykum&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;fungsi-dengan-parameter&#34;&gt;Fungsi dengan Parameter&lt;/h2&gt;Parameter merupakan variabel yang akan diolah atau diproses di dalam fungsi. Contoh fungsi yang memiliki parameter:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;static void ucapin(String ucapan){&lt;br /&gt;    System.out.println(ucapan);&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Pemanggilannya:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;ucapin(&amp;ldquo;Hallo!&amp;rdquo;);&lt;br /&gt;ucapin(&amp;ldquo;Selamat datang di pemrograman Java&amp;rdquo;);&lt;br /&gt;ucapin(&amp;ldquo;Saya kira ini bagian terakhir&amp;rdquo;);&lt;br /&gt;ucapin(&amp;ldquo;Sampai jumpa lagi, ya!&amp;rdquo;);&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Hasil outputnya:&lt;br /&gt;&lt;pre&gt;&lt;code&gt;Hallo!&lt;br /&gt;Selamat datang di pemrograman Java&lt;br /&gt;Saya kira ini bagian terakhir&lt;br /&gt;Sampai jumpa lagi, ya!&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Tipe data dari parameter harus dituliskan. Untuk parameter yang lebih dari satu, dipisah dengan tanda koma (&lt;code&gt;,&lt;/code&gt;). Contoh:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;static void ucapin(String ucapan, String kepada){&lt;br /&gt;    //&amp;hellip;&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div id=&#34;fungsi-yang-mengembalikan-nilai&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#fungsi-yang-mengembalikan-nilai&#34; name=&#34;fungsi-yang-mengembalikan-nilai&#34;&gt;&lt;/a&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-3LilJsKfgRM/VxnbVspOUDI/AAAAAAAACwQ/t6RCz2U4PJg8lvvkBmexayJWHOnsaEbwQCK4B/s1600/Contoh%2BFungsi%2Bdi%2BJava.png&#34;&gt;&lt;img alt=&#34;Contoh Fungsi pada Java&#34; border=&#34;0&#34; src=&#34;https://4.bp.blogspot.com/-3LilJsKfgRM/VxnbVspOUDI/AAAAAAAACwQ/t6RCz2U4PJg8lvvkBmexayJWHOnsaEbwQCK4B/s1600/Contoh%2BFungsi%2Bdi%2BJava.png&#34; title=&#34;&#34; /&gt;&lt;/a&gt; &lt;/div&gt;&lt;h2 id=&#34;fungsi-yang-mengembalikan-nilai&#34;&gt;Fungsi yang Mengembalikan Nilai&lt;/h2&gt;Setelah data yang diinputkan melalui parameter diproses, fungsi harus mengembalikan nilai agar dapat diolah di proses selanjutnya. Pengembalian nilai pada fungsi menggunakan kata kunci &lt;code&gt;return&lt;/code&gt;. Jangan lupa juga untuk menuliskan tipe data kembaliannya. Contoh fungsi yang mengembalikan nilai:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;static int luasPersegi(int sisi){&lt;br /&gt;    int luas = sisi * sisi;&lt;br /&gt;    return luas;&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Fungsi &lt;code&gt;luasPersegi()&lt;/code&gt; akan mengembalikan nilai berupa &lt;i&gt;integer&lt;/i&gt; (&lt;code&gt;int&lt;/code&gt;) dari hasil rumus &lt;code&gt;luas&lt;/code&gt; (persegi). Contoh pemanggilanya:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;System.out.println(&amp;ldquo;Luas Persegi dengan panjang sisi 5 adalah &amp;rdquo; + luasPersegi(5));&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Hasil Output:&lt;br /&gt;&lt;pre&gt;&lt;code&gt;Luas Persegi dengan panjang sisi 5 adalah 25&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;pemanggilan-fungsi-di-fungsi-lain&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#pemanggilan-fungsi-di-fungsi-lain&#34; name=&#34;pemanggilan-fungsi-di-fungsi-lain&#34;&gt;&lt;/a&gt;Pemanggilan Fungsi di Fungsi Lain&lt;/h2&gt;Fungsi-fungsi dapat saling memanggil untuk memproses data. Contoh, sebuah program Kalkulator Bangun Ruang memiliki fungsi-fungsi: &lt;code&gt;luasPersegi()&lt;/code&gt;, &lt;code&gt;luasPersegiPanjang()&lt;/code&gt;, &lt;code&gt;luasSegitiga()&lt;/code&gt;, &lt;code&gt;luasBalok()&lt;/code&gt;, &lt;code&gt;luasKubus()&lt;/code&gt; dsb. Fungsi-fungsi tersebut dapat saling membantu, contoh fungsi &lt;code&gt;luasKubus()&lt;/code&gt; membutuhkan fungsi &lt;code&gt;luasPersegi()&lt;/code&gt;.&lt;br /&gt;Rumus&lt;br /&gt;&lt;pre&gt;&lt;code&gt;Luas Kubus = 6 * luasPersegi;&lt;br /&gt;Luas Persegi = sisi * sisi;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Maka Bentuk programnya bisa seperti ini:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;public class BangunRuang {&lt;br /&gt;&lt;br /&gt;    public static void main(String[] args) {&lt;br /&gt;&lt;br /&gt;        int s = 12;&lt;br /&gt;        int luas = luasKubus(s);&lt;br /&gt;&lt;br /&gt;        System.out.println(luas);&lt;br /&gt;&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    static int luasPersegi(int sisi){&lt;br /&gt;        return sisi * sisi;&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    static int luasKubus(int sisi){&lt;br /&gt;        return 6 * luasPersegi(sisi);&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Hasil output&lt;br /&gt;&lt;pre&gt;&lt;code&gt;864&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Itulah beberapa hal seputar fungsi atau method di Java. Jika anda membaca dan mengikuti serial artikel ini dari &lt;a href=&#34;http://www.petanikode.com/2015/10/pemrograman-java-di-lab-1-berkenalan.html&#34; target=&#34;_blank&#34;&gt;awal&lt;/a&gt;, saya kira anda sudah menguasai teknik dasar pemrograman java. Sekian dulu, mungkin artikel ini masih punya lanjutan. Ditunggu saja, ya!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pemrograman Java di Lab (15): Mengenal Array</title>
      <link>http://petanikode.com/pemrograman-java-di-lab-15-mengenal-array/</link>
      <pubDate>Thu, 21 Apr 2016 22:34:00 +0000</pubDate>
      
      <guid>http://petanikode.com/pemrograman-java-di-lab-15-mengenal-array/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; /&gt;&lt;/a&gt;Array memungkinkan kita menyimpan banyak data dalam satu variabel. Array memiliki indeks sebagai nomor yang digunakan untuk mengakses isinya. Indeks array dihitung mulai dari nol (&lt;code&gt;0&lt;/code&gt;).&lt;br /&gt;&lt;h2 id=&#34;cara-membuat-array-dan-mengisinya&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#cara-membuat-array-dan-mengisinya&#34; name=&#34;cara-membuat-array-dan-mengisinya&#34;&gt;&lt;/a&gt;Cara Membuat Array dan Mengisinya&lt;/h2&gt;Cara membuat sebuah array di java:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;String[] nama;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;atau bisa juga&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;String[] nama = new String[5];&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;* angka &lt;code&gt;5&lt;/code&gt; adalah batas atau ukuran array&lt;br /&gt;Kemudian untuk mengisi datanya, lakukan dengan operator pengisian untuk masing-masing indeks.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;nama[0] = &amp;ldquo;Linda&amp;rdquo;;&lt;br /&gt;nama[1] = &amp;ldquo;Santi&amp;rdquo;;&lt;br /&gt;nama[2] = &amp;ldquo;Susan&amp;rdquo;;&lt;br /&gt;nama[3] = &amp;ldquo;Mila&amp;rdquo;;&lt;br /&gt;nama[4] = &amp;ldquo;Ayu&amp;rdquo;;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Atau, untuk menghemat energi, bisa juga langsung mengisinya saat pembuatan. Contoh:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;String[] nama = {&amp;ldquo;Linda&amp;rdquo;, &amp;ldquo;Santi&amp;rdquo;, &amp;ldquo;Susan&amp;rdquo;, &amp;ldquo;Mila&amp;rdquo;, &amp;ldquo;Ayu&amp;rdquo;};&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;perbedaan-array-dengan-variabel-biasa&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#perbedaan-array-dengan-variabel-biasa&#34; name=&#34;perbedaan-array-dengan-variabel-biasa&#34;&gt;&lt;/a&gt;Perbedaan Array dengan Variabel Biasa&lt;/h2&gt;Kita ingin menyimpan nama-nama teman dalam variabel. Hal yang munkin kita lakukan, tampa menggunakan array adalah sebagai berikut.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;String teman1 = &amp;ldquo;Deni&amp;rdquo;;&lt;br /&gt;String teman2 = &amp;ldquo;Dodi&amp;rdquo;;&lt;br /&gt;String teman3 = &amp;ldquo;Dewi&amp;rdquo;;&lt;br /&gt;String teman4 = &amp;ldquo;Desi&amp;rdquo;;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Kita baru saja membuat empat variabel untuk menyimpan masing-masing nama teman. Hal ini sepertinya kurang efektif, karena harus membuat banyak variabel. Sedangkan, kalau menggunakan array, kita dapat membuatnya seperti berikut ini.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;String[] teman = {&amp;ldquo;Deni&amp;rdquo;, &amp;ldquo;Dodi&amp;rdquo;, &amp;ldquo;Dewi&amp;rdquo;, &amp;ldquo;Desi&amp;rdquo;};&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Cukup satu variabel untuk menyimpan nama-nama teman.&lt;br /&gt;&lt;h2 id=&#34;mengambil-data-dari-array&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#mengambil-data-dari-array&#34; name=&#34;mengambil-data-dari-array&#34;&gt;&lt;/a&gt;Mengambil Data dari Array&lt;/h2&gt;Pengambilan data dari variabel array, dilakukan dengan indeks sebagai kunci. Contoh, saya ingin mengambil nama &lt;code&gt;Dewi&lt;/code&gt; dari array &lt;code&gt;teman&lt;/code&gt;:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;System.out.println(teman[2]);&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Nama &lt;code&gt;Dewi&lt;/code&gt; berada di indeks ke-2, karena indeks array dihitung dari &lt;code&gt;0&lt;/code&gt;.&lt;br /&gt;&lt;h2 id=&#34;menggunakan-perulangan&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#menggunakan-perulangan&#34; name=&#34;menggunakan-perulangan&#34;&gt;&lt;/a&gt;Menggunakan Perulangan&lt;/h2&gt;Mengambil data satu per satu dari array mungkin cukup melelahkan, karena kita harus mengtik ulang nama arraynya dengan indeks yang berbeda. Contoh:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;System.out.println(teman[0]);&lt;br /&gt;System.out.println(teman[1]);&lt;br /&gt;System.out.println(teman[2]);&lt;br /&gt;System.out.println(teman[3]);&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Bagaimana kalau data array-nya memiliki data sampai 1000, maka kita haru mengetik kode di atas ebanyak seribu kali. Kita dapat menggunakan perulangan untuk mengakses semua isi array. Contoh:&lt;br /&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-pXqVRCPTKn0/Vxjjx7C66lI/AAAAAAAACvo/jwQlQIf84SoJLlK-PwdAfjFi-Gwqa5F3ACK4B/s1600/Contoh%2BArray%2Bdi%2BJava%2B-%2BPetani%2BKode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img alt=&#34;Contoh Array yang diakses dengan perulangan&#34; border=&#34;0&#34; src=&#34;https://4.bp.blogspot.com/-pXqVRCPTKn0/Vxjjx7C66lI/AAAAAAAACvo/jwQlQIf84SoJLlK-PwdAfjFi-Gwqa5F3ACK4B/s1600/Contoh%2BArray%2Bdi%2BJava%2B-%2BPetani%2BKode.png&#34; title=&#34;&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Atribut &lt;code&gt;length&lt;/code&gt; untuk mengabil panjang array. Perulangan akan dilakukan sampai panjang array.&lt;br /&gt;&lt;h2 id=&#34;array-dua-dimensi&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#array-dua-dimensi&#34; name=&#34;array-dua-dimensi&#34;&gt;&lt;/a&gt;Array Dua Dimensi&lt;/h2&gt;Array dua dimensi adalah array yang berada di dalam array. Array dapat juga memiliki banyak dimensi (lebih dari dua). Contoh array dua dimensi:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;String[][] kontak = {{&amp;ldquo;Lili&amp;rdquo;,&amp;ldquo;08111&amp;rdquo;}, {&amp;ldquo;Lala&amp;rdquo;,&amp;ldquo;08122&amp;rdquo;}, {&amp;ldquo;Maya&amp;rdquo;,&amp;ldquo;08133&amp;rdquo;}};&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Indek ke-0 pada array &lt;code&gt;kontak&lt;/code&gt; berisi array &lt;code&gt;{&amp;ldquo;lili&amp;rdquo;,&amp;ldquo;08111&amp;rdquo;}&lt;/code&gt;. Untuk mengakses semua elemen dalam array dua dimensi, kita membutuhkan perulangan bersarang. Contoh:&lt;br /&gt;&lt;a href=&#34;http://4.bp.blogspot.com/--B8JIXhQjjU/Vxjj-XAAERI/AAAAAAAACvw/h3zXImrKeBg0pjgjAE5df7fi9iXETaQ5wCK4B/s1600/Array%2Bdua%2Bdimensi.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img alt=&#34;Contoh Array 2 Dimensi di Java&#34; border=&#34;0&#34; src=&#34;https://4.bp.blogspot.com/--B8JIXhQjjU/Vxjj-XAAERI/AAAAAAAACvw/h3zXImrKeBg0pjgjAE5df7fi9iXETaQ5wCK4B/s1600/Array%2Bdua%2Bdimensi.png&#34; title=&#34;Contoh Array 2 Dimensi di Java&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pemrograman Java di Lab (14): Perulangan While dan Do/While</title>
      <link>http://petanikode.com/pemrograman-java-di-lab-14-perulangan-while-dan-do/while/</link>
      <pubDate>Fri, 18 Mar 2016 16:52:00 +0000</pubDate>
      
      <guid>http://petanikode.com/pemrograman-java-di-lab-14-perulangan-while-dan-do/while/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;h2&gt;1. Perulangan While&lt;/h2&gt;Perulangan &lt;i&gt;while&lt;/i&gt; adalah salah satu bentuk perulangan yang tak tentu jumlah kali perulangannya. Perulangan &lt;i&gt;while&lt;/i&gt; memiliki sebuah persayarat kondisi untuk melakukan perulangan. Apabila kondisi tidak terpenuhi, perulangan tidak akan dikerjakan. Contoh bentuk perulanagan while pada java:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;while(keluar == false){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; mainProgram();&lt;br /&gt;}&lt;/code&gt;&lt;/pre&gt;Pada contoh di atas, fungsi &lt;code&gt;mainProgram()&lt;/code&gt; akan dieksekusi terus menerus sampai variabel keluar bernilai true. Untuk lebih jelasnya, silahkan coba contoh berikut ini.&lt;br /&gt;&lt;br /&gt;&lt;script src=&#34;https://gist.github.com/ardianta/4c603073712590683b60.js&#34;&gt;&lt;/script&gt;&lt;br /&gt;Pada contoh di atas, kita memubuat sebuah kalkulator sederhana. Perulangan &lt;i&gt;while&lt;/i&gt; akan mengecek kondisi nilai variabel &lt;i&gt;keluar&lt;/i&gt;. Karena pada awal, variabel &lt;i&gt;keluar&lt;/i&gt; bernilai &lt;i&gt;false&lt;/i&gt;, maka perulangan dilakukan.&lt;br /&gt;&lt;h2&gt;2. Perulangan Do/While&lt;/h2&gt;Perulangan &lt;i&gt;Do/While&lt;/i&gt; adalah perulangan yang tak tentu jumlah kali perulangannya. Perulangan ini memiliki satu kali perulangan yang harus dikerjakan pada awal perulangan. Contoh bentuk perulangan &lt;i&gt;Do/While&lt;/i&gt; dalam java:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;do {&lt;br /&gt;     belajar();&lt;br /&gt;} while (bisa == false);&lt;/code&gt;&lt;/pre&gt;Fungsi &lt;code&gt;belajar()&lt;/code&gt; akan terus dikerjakan atau diulangi selama belum bisa &lt;i&gt;(bisa == false)&lt;/i&gt;. Fungsi belajar akan berhenti dikerjakan sampai bisa &lt;i&gt;(bisa == true)&lt;/i&gt;. Perulangan &lt;i&gt;do/while&lt;/i&gt; akan mengerjakan fungsi belajar satu kali dulu, kemudian mengecek kondisinya, bila bisa maka berhenti. Tetapi, kalau masih belum bisa, lanjutkan ke perulangan selanjutnya.&lt;br /&gt;&lt;br /&gt;Contoh perulangan do/while dalam program kalkulator:&lt;br /&gt;&lt;br /&gt;&lt;script src=&#34;https://gist.github.com/ardianta/d64f5318480d3740f586.js&#34;&gt;&lt;/script&gt;&lt;br /&gt;&lt;h2&gt;Kesimpulan&lt;/h2&gt;Perualangan &lt;i&gt;While&lt;/i&gt; dan &lt;i&gt;Do/While&lt;/i&gt; adalah perulangan yang tak tentu jumlah kali perulangannya &lt;i&gt;(uncounted loop)&lt;/i&gt;. Perbedaan perulangan &lt;i&gt;While&lt;/i&gt; dengan &lt;i&gt;Do/While&lt;/i&gt; terletak pada awal perulangannya. Perulangan &lt;i&gt;Do/While&lt;/i&gt; memilki satu kali perulangan yang harus dikerjakan pada awal perulangan, sedangkan perulangan &lt;i&gt;while&lt;/i&gt; tidak.&lt;br /&gt;&lt;br /&gt;Baca juga: &lt;a href=&#34;http://www.petanikode.com/2015/09/perbedaan-perulangan-while-do-dan-do.html&#34; target=&#34;_blank&#34;&gt;Perbedaan Perulangan While dan Do/While&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pemrograman java di lab (13): Perulangan FOR</title>
      <link>http://petanikode.com/pemrograman-java-di-lab-13-perulangan-for/</link>
      <pubDate>Sun, 03 Jan 2016 18:28:00 +0000</pubDate>
      
      <guid>http://petanikode.com/pemrograman-java-di-lab-13-perulangan-for/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Perulangan merupakan intruksi yang dikerjakan berulang-ulang. Perulangan di pemrograman java ada dua jenis, perulangan terhitung dan perulangan tak terhitung (tidak tentu). Pada pertemuan ini, saya akan membahas perulangan for saja dulu. Nanti di pertemuan berikutinya, kita akan banyak bermain dengan perulangan &lt;i&gt;while (uncounted loop)&lt;/i&gt;.&lt;br /&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-Pab1ngEX31Y/VlToeaw3YnI/AAAAAAAACQM/te0QBK1U-VY/s1600/Flowchart%2Bperulangan%2B-%2Bpetani%2Bkode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://1.bp.blogspot.com/-Pab1ngEX31Y/VlToeaw3YnI/AAAAAAAACQM/te0QBK1U-VY/s1600/Flowchart%2Bperulangan%2B-%2Bpetani%2Bkode.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;h2&gt;Mengapa kita butuh perulangan?&lt;/h2&gt;Cobalah melakukan pencetakan teks sebanyak lima kali seperti beirkut ini:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;/code&gt;&lt;/pre&gt;Kemudian coba tambahkan 5 lagi, sehingga sekarang totalnya ada 10 perulangan dengan intruksi yang sama.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;/code&gt;&lt;/pre&gt;Lalu, bagaimana kalau mengulang sebanyak 1000 kali? Apakah kita akan menuliskan berulang-ualang sebanyak 1000 kali seperti di atas? Nah!, di siniliah kita perlu perulangan agar tidak menulis kode berulang-ulang. Kode di atas dapat ditulis dalam perulangan menjadi seperti berikut ini.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;for (int hitungan = 0; hitungan &amp;lt;= 1000; hitungan++) {&lt;br /&gt;&amp;nbsp; &amp;nbsp; System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;); &lt;br /&gt;}&lt;/code&gt;&lt;/pre&gt;Maka, teks &amp;ldquo;Petani Kode&amp;rdquo; akan dicetak berulang-ulang sebanyak 1000 kali.&lt;br /&gt;&lt;h2&gt;Perulangan FOR&amp;nbsp;&lt;/h2&gt;Perulangan FOR merupakan perulangan yang terhitung jelas, bearpa banyak dia akan mengulang atau dalam bahasa inggris disebut &lt;i&gt;counted loop&lt;/i&gt;. Format penulisan perulangan for di java adalah sebagai berikut:&lt;br /&gt;&lt;pre&gt;for( int hitungan = 0; hitungan &amp;lt;= 10; hitungan++ ){&lt;br /&gt;&amp;nbsp; &amp;nbsp; // blok kode yang akan diulang &lt;br /&gt;}&lt;/pre&gt;variabel &lt;code&gt;hitungan&lt;/code&gt; berfungsi untuk menampung nilai hitungan perulangan. Pada awalnya di isi &lt;code&gt;0&lt;/code&gt; (nol). Kemudian, akan selalu bertambah satu karena ada penambahan (&lt;i&gt;increment)&lt;/i&gt; &lt;code&gt;hitungan++&lt;/code&gt;. Perulangan akan berhenti sampai hitungan mencapai 10.&lt;br /&gt;&lt;h2&gt;Contoh Program&lt;/h2&gt;Silahkan anda coba ketik sendiri program-program berikut ini:&lt;br /&gt;&lt;br /&gt;1. Program mencetak bintang&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;class Bintang{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; public static void main(String[] args){&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; for(int i=0; i &amp;lt;= 5; i++){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; System.out.println(&amp;rdquo;**&lt;strong&gt;&lt;em&gt;&amp;rdquo;);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;}&lt;/code&gt;&lt;/pre&gt;Hasil output:&lt;br /&gt;&lt;pre&gt;&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;&lt;br /&gt;&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;&lt;br /&gt;&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;*&lt;strong&gt;&lt;/pre&gt;&lt;br /&gt;2. Program cetak angak 1—10&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;class CetakAngka{&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; public static void main(String[] argumen){&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; for(int i=0; i &amp;lt;= 10; i++){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; System.out.print( i + &amp;ldquo; &amp;rdquo; );&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; } &lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&lt;br /&gt;}&lt;/code&gt;&lt;/pre&gt;Hasil output:&lt;br /&gt;&lt;pre&gt;0 1 2 3 4 5 6 7 8 9 10 &lt;/pre&gt;&lt;br /&gt;3. Cetak bilangan ganjil saja&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;class CetakBilanganGanjil{&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; public static void main(String[] argumen){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; for(int i = 1; i &amp;lt;= 20; i += 2){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; System.out.print( i + &amp;ldquo; &amp;ldquo;);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&lt;br /&gt;}&lt;/code&gt;&lt;/pre&gt;Hasil output:&lt;br /&gt;&lt;pre&gt;1 3 5 7 9 11 13 15 17 19 &lt;/pre&gt;&lt;h2&gt;Tantangan&lt;/h2&gt;Kalau sudah paham dengan struktur perulangan FOR, mari mencoba sebuah tantangan. Buatlah kode dengan perulangan FOR. Anda juga bisa memanfaatkan &lt;a href=&#34;http://www.petanikode.com/2015/11/percabangan-if-esle-if-dan-switch-case-di-java.html&#34; target=&#34;_blank&#34;&gt;struktur IF&lt;/a&gt;. Silahkan dipikirkan, agar menghasilkan output seperti di bawah ini:&lt;br /&gt;&lt;br /&gt;1. Cetak bintang dengan pola bertambah&lt;br /&gt;&lt;pre&gt;*&lt;br /&gt;&lt;/strong&gt;&lt;br /&gt;&lt;strong&gt;&lt;em&gt;&lt;br /&gt;&lt;/em&gt;&lt;/strong&gt;*&lt;br /&gt;**&lt;strong&gt;&lt;em&gt;&lt;/pre&gt;2. Cetak bintagn dengan pola berkurang&lt;br /&gt;&lt;pre&gt;&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;*&lt;br /&gt;&lt;strong&gt;&lt;br /&gt;&lt;em&gt;&lt;/pre&gt;3. Cetak bintang dengan pola bertambah lalu berkurang&lt;br /&gt;&lt;pre&gt;&lt;/em&gt;&lt;br /&gt;&lt;/strong&gt;&lt;br /&gt;&lt;strong&gt;&lt;em&gt;&lt;br /&gt;&lt;/em&gt;&lt;/strong&gt;*&lt;br /&gt;**&lt;strong&gt;&lt;em&gt;&lt;br /&gt;&lt;/em&gt;&lt;/strong&gt;*&lt;br /&gt;*&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;br /&gt;*&lt;/pre&gt;4. Cetak bilangan kelipatan dari 2&lt;br /&gt;&lt;pre&gt;2, 4, 8, 16, 32, &amp;hellip; 255&lt;/pre&gt;5. Cetak pola bilangan berikut&lt;br /&gt;&lt;pre&gt;1&lt;br /&gt;12&lt;br /&gt;123&lt;br /&gt;1234&lt;br /&gt;12345&lt;/pre&gt;Selamat mencoba, jangan lupa kirimkan tangkapan layar hasil output-nya di komentar.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Belajar Pemrograman Java: Inilah 3 Bentuk Percabangan yang Harus Dipahami</title>
      <link>http://petanikode.com/pemrograman-java-percabangan/</link>
      <pubDate>Sun, 25 Oct 2015 18:33:00 +0000</pubDate>
      
      <guid>http://petanikode.com/pemrograman-java-percabangan/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://2.bp.blogspot.com/-RvCLtSJKtig/WOhpIb2ZUuI/AAAAAAAAEoE/ucr44ME4UwYCNIP5HhieepL_KexR9tifwCPcB/s1600/percabangan%2Brel%2Bkereta%2Bapi.jpg&#34; alt=&#34;Perbangan Java&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Kalau kita perhatikan, alur pengeksekusian sebuah kode program dikerjakan satu per satu dari atas
sampai ke bawah.&lt;/p&gt;

&lt;p&gt;Baris demi baris dibaca, kemudian komputer mengerjakan apa yang diperintahkan.&lt;/p&gt;

&lt;p&gt;Misalnya seperti ini:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://2.bp.blogspot.com/-K9oL9zetghQ/WOhpISQO-4I/AAAAAAAAEoE/anwCWCtzMPwFxM7wAH7k46Rj4Ri7xjEhwCPcB/s1600/alur%2Beksekusi%2Bprogram%2Btanpa%2Bflowchart.png&#34; alt=&#34;Alur porgram tanpa percabangan&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Alur programnya satu, tidak ada belokan atau percabangan.&lt;/p&gt;

&lt;p&gt;Ngomong-ngomong apa itu percabangan?&lt;/p&gt;

&lt;p&gt;Percabangan hanyalah sebuah istilah yang digunakan untuk menyebut
alur program yang bercabang.&lt;/p&gt;

&lt;p&gt;Percabangan juga dikenal dengan &amp;ldquo;Control Flow&amp;rdquo;, &amp;ldquo;Struktur Kondisi&amp;rdquo;,
&amp;ldquo;Struktur IF&amp;rdquo;, &amp;ldquo;Decision&amp;rdquo;, dsb. Semuanya itu sama.&lt;/p&gt;

&lt;p&gt;Pada diagram alur &lt;em&gt;(Flow Chart)&lt;/em&gt; seperti di atas, alurnya memang satu.&lt;/p&gt;

&lt;p&gt;Tapi setelah kita menggunakan percabangan, alurnya akan bertambah menjadi seperti ini.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://4.bp.blogspot.com/-VdWpqvZZHFk/WOhuYZN8lxI/AAAAAAAAEos/Rston6k1KwMGagHld2CZoJE38SvZtXC-wCPcB/s1600/contoh-percabangan.png&#34; alt=&#34;Flowchart Percabangan&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Lalu bagaimana cara menulis kode percabangan dalam Java?&lt;/p&gt;

&lt;p&gt;Caranya: menggunakan kata kunci &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;, &lt;code&gt;switch&lt;/code&gt;, dan &lt;code&gt;case&lt;/code&gt;, dan operator ternary.&lt;/p&gt;

&lt;p&gt;Contoh format stuktur IF seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;if( suatu_kondisi ) {
    // lakukan sesuatu kalau kondisi benar
    // Lakukan ini juga
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;suatu_kondisi&lt;/code&gt; hanya bernilai &lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt; saja. Kita bisa gunakan operator
relasi dan logika di sini.&lt;/p&gt;

&lt;p&gt;Untuk lebih jelasnya, nanti akan kita bahas.&lt;/p&gt;

&lt;p&gt;Sebelumnya, kamu perlu tahu dulu tiga bentuk percabangan pada Java:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Percabangan IF&lt;/li&gt;
&lt;li&gt;Percabangan IF/ELSE&lt;/li&gt;
&lt;li&gt;Percabangan IF/ELSE/IF atau SWITCH/CASE&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Mari kita bahas satu per satu&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;1-percabangan-if&#34;&gt;1. Percabangan IF&lt;/h2&gt;

&lt;p&gt;Percabangan ini hanya memiliki satu pilihan. Artinya, pilihan di dalam IF
hanya akan dikerjakan kalau kondisinya benar.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://2.bp.blogspot.com/-U8SqJhBeFoc/WOh7pR4aSNI/AAAAAAAAEpM/_i52DJOZIm80Ux6fdnVWfmEHx8WdvQfHACPcB/s1600/percabangan-if-dalam-pemrograman.png&#34; alt=&#34;Percabangan IF&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Tapi kalau salah&amp;hellip; tidak akan melakukan apa-apa. Alias lanjut eksekusi ke
perintah berikutnya.&lt;/p&gt;

&lt;p&gt;Contoh:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Pernahkah kalian belanja di toko, kemudian kalau belanja di atas sekian ribu
dapat hadiah atau diskon.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Nah! Contoh kasus seperti itu, dapat kita selesaikan dengan menggunakan percabangan
ini.&lt;/p&gt;

&lt;p&gt;untuk lebih jelasnya&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;mari-kita-membuat-program-hadiah&#34;&gt;Mari Kita Membuat Program Hadiah&lt;/h3&gt;

&lt;p&gt;Misalkan ada sebuah toko buku. Mereka memberikan hadiah berupa
perlengkapan sekolah kepada pembeli yang belanja di atas Rp 100.000.&lt;/p&gt;

&lt;p&gt;Maka programnya bisa kita buat seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.util.Scanner;

public class Hadiah {

    public static void main(String[] args) {

        // membuat variabel belanja dan scanner
        int belanja = 0;
        Scanner scan = new Scanner(System.in);

        // mengambil input
        System.out.print(&amp;quot;Total Belanjaan: Rp &amp;quot;);
        belanja = scan.nextInt();

        // cek apakah dia belanja di atas 100000
        if ( belanja &amp;gt; 100000 ) {
            System.out.println(&amp;quot;Selamat, anda mendapatkan hadiah!&amp;quot;);
        }

        System.out.println(&amp;quot;Terima kasih...&amp;quot;);

    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Jalankan programnya dan perhatikanlah hasilnya.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-LGq9_8wC3I8/WOiZIi2nshI/AAAAAAAAEpw/gZtN9le-bfo-Thi4Ct8HWaDM1Dj4d5XsgCPcB/s1600/program%2Bdiskon%2Bdan%2Bhadiah%2Bdengan%2BJava.png&#34; alt=&#34;Program diskon dengan Java&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Cobalah untuk memberikan nilai di bawah &lt;code&gt;100000&lt;/code&gt; dan perhatikan apa akan yang terjadi.&lt;/p&gt;

&lt;h2 id=&#34;2-percabangan-if-else&#34;&gt;2. Percabangan IF/ELSE&lt;/h2&gt;

&lt;p&gt;Sedangkan percabangan IF/ELSE memiliki pilihan alternatif kalau kondisinya salah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;IF&lt;/strong&gt;: &amp;ldquo;Jika kondisi benar maka kerjakan ini, kalau tidak silahkan lanjut&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;IF/ESLE&lt;/strong&gt;: &amp;ldquo;Jika kondisi benar maka kerjakan ini, kalau salah maka kerjakan yang itu,
setelah itu lanjut&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://1.bp.blogspot.com/-EBFXR8YanHg/ViyfSNX80-I/AAAAAAAACEI/BVBV3EX_r3Q/s1600/Percabangan%2Bdi%2Bpemrograman%2Bjava.png&#34; alt=&#34;Perbedaan percabangan IF dengan IF/ELSE&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Begitulah perbedaan IF dengan IF/ELSE.&lt;/p&gt;

&lt;p&gt;Sekarang mari kita coba dalam kode program&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;program-cek-kelulusan&#34;&gt;Program Cek Kelulusan&lt;/h3&gt;

&lt;p&gt;Misalkan, kalau nilai siswa lebih besar dari 70, maka ia dinyatakan lulus.
Kalau tidak, maka dia gagal.&lt;/p&gt;

&lt;p&gt;Programnya bisa kita buat seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.util.Scanner;

public class CekKelulusan {

    public static void main(String[] args) {

        // membuat variabel dan Scanner
        int nilai;
        String nama;
        Scanner scan = new Scanner(System.in);

        // mengambil input
        System.out.print(&amp;quot;Nama: &amp;quot;);
        nama = scan.nextLine();
        System.out.print(&amp;quot;Nilai: &amp;quot;);
        nilai = scan.nextInt();

        // cek apakah dia lulus atau tidak
        if( nilai &amp;gt;= 70 ) {
            System.out.println(&amp;quot;Selemat &amp;quot; + nama + &amp;quot;, anda lulus!&amp;quot;);
        } else {
            System.out.println(&amp;quot;Maaf &amp;quot; + nama + &amp;quot;, anda gagal&amp;quot;);
        }

    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil outputnya:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-rLwFoNL9qKk/WO79-OlRsUI/AAAAAAAAEqc/8r_1s5gF0MkIFz3NhZqOs0ocTZeeUT_jgCPcB/s1600/Hasil%2Boutput%2Bprogram%2Bcekkelulusan%2Bjava.png&#34; alt=&#34;Hasil output program tes kelulusan&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Cobalah untuk merubah nilai yang dimasukkan dan perhatikan apa yang
akan terjadi.&lt;/p&gt;

&lt;h3 id=&#34;percabangan-if-else-dengan-operator-ternary&#34;&gt;Percabangan IF/ELSE dengan Operator Ternary&lt;/h3&gt;

&lt;p&gt;Selain menggunakan struktur seperti di atas, percahangan ini juga dapat menggunakan
operator ternary.&lt;/p&gt;

&lt;p&gt;Seperti yang sudah kita pelajari pada &lt;a href=&#34;http://petanikode.com/pemrograman-java-operator/&#34;&gt;pembahasan tentang operator&lt;/a&gt;. Operator ternary memiliki konsep yang sama seperti percabganan IF/ELSE.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-OKB4MDtGjE4/WObxiPfq-wI/AAAAAAAAEmQ/kR9Ldcc1hr88u90060rCff0Gvs4lDRfQgCPcB/s1600/operator%2Bternary%2Bdi%2Bjava.png&#34; alt=&#34;Ilustraisi operator ternary&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Contoh programnya:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class OperatorTernary {
    public static void main(String[] args) {

        boolean suka = true;
        String jawaban;

        // menggunakan operator ternary
        jawaban = suka ? &amp;quot;iya&amp;quot; : &amp;quot;tidak&amp;quot;;

        // menampilkan jawaban
        System.out.println(jawaban);

    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;3-percabangan-if-else-if-dan-switch-case&#34;&gt;3. Percabangan IF/ELSE/IF dan SWITCH/CASE&lt;/h2&gt;

&lt;p&gt;Jika percabangan IF/ESLE hanya memiliki dua pilihan saja. Maka percahangan
IF/ELSE/IF memiliki lebih dari dua pilihan.&lt;/p&gt;

&lt;p&gt;Formatnya seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;if (suatu kondisi) {
    // maka kerjakan ini
    // kerjakan perintah ini juga
    // …
} else if (kondisi lain) {
    // kerjakan ini
    // kerjakan ini juga
    // …
} else if (kondisi yang lain lagi) {
    // kerjakan perintah ini
    // kerjakan ini juga
    // …
} esle {
    // kerjakan ini kalau
    // semua kondisi di atas
    // tidak ada yang benar
    // …
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Coba perhatikan contohnya:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://3.bp.blogspot.com/-9uS-c73seec/VkBISDA0AXI/AAAAAAAACLU/AsWtctwfCN0/s1600/flowchart%2Bpercabangan%2Byang%2Bmemiliki%2Bbanyak%2Bpilihan%2Bkeputusan.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Jika nilainya lebih besar dari &lt;code&gt;90&lt;/code&gt;, maka grade-nya &amp;ldquo;A&amp;rdquo;.
Sedangkan kalau lebih besar dari &lt;code&gt;80&lt;/code&gt;, maka &amp;ldquo;B+&amp;rdquo;. Lebih besar
dari &lt;code&gt;70&lt;/code&gt;, maka &amp;ldquo;B&amp;rdquo;, dan seterusnya.&lt;/p&gt;

&lt;p&gt;Lebih jelasnya, mari kita buat program.&lt;/p&gt;

&lt;h3 id=&#34;program-hitunggrade&#34;&gt;Program HitungGrade&lt;/h3&gt;

&lt;p&gt;Silahkan buat sebuah class baru bernama &lt;code&gt;HitungGrade&lt;/code&gt;, kemudian ikuti kode
program berikut.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.util.Scanner;

public class HitungGrade {
    public static void main(String[] args) {

        // membuat variabel dan scanner
        int nilai;
        String grade;
        Scanner scan = new Scanner(System.in);

        // mengambil input
        System.out.print(&amp;quot;Inputkan nilai: &amp;quot;);
        nilai = scan.nextInt();

        // higung gradenya
        if ( nilai &amp;gt;= 90 ) {
            grade = &amp;quot;A&amp;quot;;
        } else if ( nilai &amp;gt;= 80 ){
            grade = &amp;quot;B+&amp;quot;;
        } else if ( nilai &amp;gt;= 70 ){
            grade = &amp;quot;B&amp;quot;;
        } else if ( nilai &amp;gt;= 60 ){
            grade = &amp;quot;C+&amp;quot;;
        } else if ( nilai &amp;gt;= 50 ){
            grade = &amp;quot;C&amp;quot;;
        } else if ( nilai &amp;gt;= 40 ){
            grade = &amp;quot;D&amp;quot;;
        } else {
            grade = &amp;quot;E&amp;quot;;
        }

        // cetak hasilnya
        System.out.println(&amp;quot;Grade: &amp;quot; + grade);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil outputnya:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-fBW1OCJ8L_o/WO7_E4iXKTI/AAAAAAAAEqs/FsV0dkLWW_UL0P9GWTazQq2HTvEcx4YqQCPcB/s1600/Hasil%2Boutput%2Bprogram%2Bhitung%2Bgrader%2Bnilai.png&#34; alt=&#34;Hasil output program hitung grade&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;percabangan-switch-case&#34;&gt;Percabangan SWITCH/CASE&lt;/h3&gt;

&lt;p&gt;Percabangan SWITCH/CASE sebenarnya adalah bentuk lain dari IF/ELSE/IF.&lt;/p&gt;

&lt;p&gt;Bedanya, percabangan ini menggunakan kata kunci &lt;code&gt;switch&lt;/code&gt; dan &lt;code&gt;case&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Formatnya juga berbeda, tapi cara kerjanya sama.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;switch(variabel){
    case 1:
        // kerjakan kode ini
        // kode ini juga
        break;
    case 2:
        // kerjakan kode ini
        // kode ini juga
        break;
    case 3:
        // kerjakan kode ini
        // kode ini juga
        break;
    default:
        // kerjakan kode ini
        // kode ini juga
        break;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Perhatikan: &lt;code&gt;case 1&lt;/code&gt; artinya nilai &lt;code&gt;variabel&lt;/code&gt; yang akan dibandingkan, apakah nilainya
sama dengan &lt;code&gt;1&lt;/code&gt; atau tidak.&lt;/p&gt;

&lt;p&gt;Kalau iya, maka kerjakan kode yang ada di dalam &lt;code&gt;case 1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Bisa juga betuknya berbeda, misalnya seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;switch (variabel) {
    case &#39;A&#39;:
        // lakukan sesuatu
        break;
    case &#39;B&#39;:
        // lakukan ini
        break;
    default:
        // lakukan ini
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Perlu diperhatikan juga: di sana ada kata kunci &lt;code&gt;break&lt;/code&gt; dan &lt;code&gt;default&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;break&lt;/code&gt; artinya berhenti. Ini untuk memerintahkan komputer untuk berhenti
mengecek &lt;code&gt;case&lt;/code&gt; yang lainnya.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;default&lt;/code&gt; artinya jika nilai variabel tidak ada yang sama dengan pilihan case di atas,
maka kerjakan kode yang ada di dalam &lt;code&gt;default&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pilihan &lt;code&gt;default&lt;/code&gt; bisa juga tidak memiliki &lt;code&gt;break&lt;/code&gt;, karena dia adalah pilihan terakhir.
Artinya pengecekan akan berakhir di situ.&lt;/p&gt;

&lt;p&gt;Contoh program dengan percabangan SWITCH/CASE&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.util.Scanner;

public class LampuLalulintas {
    public static void main(String[] args) {

        // membuat variabel dan Scanner
        String lampu;
        Scanner scan = new Scanner(System.in);

        // mengambil input
        System.out.print(&amp;quot;Inputkan nama warna: &amp;quot;);
        lampu = scan.nextLine();

        switch(lampu){
            case &amp;quot;merah&amp;quot;:
                System.out.println(&amp;quot;Lampu merah, berhenti!&amp;quot;);
                break;
            case &amp;quot;kuning&amp;quot;:
                System.out.println(&amp;quot;Lampu kuning, harap hati-hati!&amp;quot;);
                break;
            case &amp;quot;hijau&amp;quot;:
                System.out.println(&amp;quot;Lampu hijau, silahkan jalan!&amp;quot;);
                break;
            default:
                System.out.println(&amp;quot;Warna lampu salah!&amp;quot;);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil outputnya:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-ojFmHVyblYk/WO7_wHizYNI/AAAAAAAAEq8/huTDmNUAHfM5m-nJ2l50ieGZelChGKJ5wCPcB/s1600/hasil%2Boutput%2Bprogram%2Blampu%2Blalu%2Blintas%2Bswitch%2Bcase.png&#34; alt=&#34;Hasil output program lampu lalu lintas dengan percabangan switch case&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Eksperimen&lt;/strong&gt;: Cobalah untuk menghilangkan &lt;code&gt;break&lt;/code&gt; di salah satu &lt;code&gt;case&lt;/code&gt; dan
perhatikanlah hasilnya.&lt;/p&gt;

&lt;h2 id=&#34;percabangan-dalam-percabangan-nested&#34;&gt;Percabangan dalam Percabangan &lt;em&gt;(Nested)&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;Kita sudah tahu tiga bentuk dasar percabganan di Java. Selanjutnya, kita
coba bahas percabangan yang ada di dalam perbangan (perabangan bersarang).&lt;/p&gt;

&lt;p&gt;Sebenarnya pembahasan ini saya ingin pisahkan. Namun, baiknya digabungkan
di sini aja.&lt;/p&gt;

&lt;p&gt;Anggap saja pembahasan bonus :smile:.&lt;/p&gt;

&lt;p&gt;Baiklah&amp;hellip;&lt;/p&gt;

&lt;p&gt;Jadi, percabangan itu bisa dibuat di dalam percabangan. Kadang teknik ini
disebut juga &lt;em&gt;nested if&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Contoh kasus:&lt;/p&gt;

&lt;p&gt;Misalnya ada model bisinis seperti ini di sebuah toko. Ketika orang membayar di
kasir, biasanya ditanya ada kartu member untuk mendapatkan diskon dan sebagainya.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Apakah anda punya kartu member?
   - ya
       * Apakah belanjaan anda lebih dari 500rb?
           # ya : mendapatkan diskon 50rb
           # tidak : tidak mendapatkan diskon
       * Apakah belanjaan anda lebih dari 100rb?
           # ya : mendapatkan diskon 15rb
           # tidak: tidak mendapatkan diskon
   - tidak
       * Apakah belanjaan anda lebih dari 100rb?
           # ya : mendapatkan diskon 10rb
           # tidak: tidak mendapatkan diskon
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Paham?&lt;/p&gt;

&lt;p&gt;Kalau tidak, coba perhatikan flow chart-nya:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://2.bp.blogspot.com/-6ZrqC9I8Nxs/VkBWekgFwUI/AAAAAAAACLk/tdhCo5np2lk/s1600/flowchart%2Bpercabangan%2Bbersarang%2Bjava.png&#34; alt=&#34;Flowchart percabangan bersarang&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Masih belum paham?&lt;/p&gt;

&lt;p&gt;Kalau begitu mari kita coba dalam program.&lt;/p&gt;

&lt;p&gt;Silahkan buat class baru bernama &lt;code&gt;Kasir&lt;/code&gt; dan ikuti kode program berikut ini.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.util.Scanner;

public class Kasir {
    public static void main(String[] args) {
        // deklarasi variabel dan Scanner
        int belanjaan, diskon, bayar;
        String kartu;
        Scanner scan = new Scanner(System.in);

        // mengambil input
        System.out.print(&amp;quot;Apakah ada kartu member: &amp;quot;);
        kartu = scan.nextLine();
        System.out.print(&amp;quot;Total belanjaan: &amp;quot;);
        belanjaan = scan.nextInt();

        // proses
        if (kartu.equalsIgnoreCase(&amp;quot;ya&amp;quot;)) {
            if (belanjaan &amp;gt; 500000) {
                diskon = 50000;
            } else if (belanjaan &amp;gt; 100000) {
                diskon = 15000;
            } else {
                diskon = 0;
            }

        } else {
            if (belanjaan &amp;gt; 100000) {
                diskon = 5000;
            } else {
                diskon = 0;
            }
        }

        // total yang harus dibayar
        bayar = belanjaan - diskon;

        // output
        System.out.println(&amp;quot;Total Bayar: Rp &amp;quot; + bayar);
    }  
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil outputnya:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-1H-uAWXBmxs/WO8GZByoXbI/AAAAAAAAErc/MDBuvrhyE9U670LjowqU6o8uAMlm30mlACPcB/s1600/Hasil%2Boutput%2Bprogram%2Bif%2Bbersarang.png&#34; alt=&#34;Hasil output program dengan percabangan bersarang&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Cobalah untuk mengubah nilai yang dimasukkan dan perhatikan hasilnya.&lt;/p&gt;

&lt;p&gt;Mungkin di sana ada yang perlu diperhatikan:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fungsi &lt;code&gt;equalsIgnoreCase(&amp;quot;ya&amp;quot;)&lt;/code&gt; digunakan untuk membandingkan String dengan
tidak memperdulikan huruf besar dan kecilnya.&lt;/li&gt;
&lt;li&gt;Ada juga Fungsi &lt;code&gt;equals()&lt;/code&gt;, fungsinya sama. Tapi &lt;code&gt;equals()&lt;/code&gt; akan memperhatikan
&lt;em&gt;case&lt;/em&gt; hurufnya.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Kenapa tidak menggunakan operator &lt;code&gt;==&lt;/code&gt; atau &lt;code&gt;!=&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;Di Java memang seperti itu.&lt;/p&gt;

&lt;p&gt;Kalau kita ingin membandingkan nilai String, ya&amp;hellip; menggunakan fungsi yang
dua tadi.&lt;/p&gt;

&lt;p&gt;Tapi, kalau membandingkan selain String, maka bisa pakai operator &lt;code&gt;==&lt;/code&gt; atau
&lt;code&gt;!=&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;menggunakan-operator-logika-dalam-percabangan&#34;&gt;Menggunakan Operator Logika dalam Percabangan&lt;/h2&gt;

&lt;p&gt;Operator logika dalam percabangan sebenarnya bisa membuat percabangan menjadi
lebih singkat.&lt;/p&gt;

&lt;p&gt;Misal ada program &lt;em&gt;Tilang&lt;/em&gt; dengan logika seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class Tilang {
    public static void main(String[] args) {
        boolean SIM = false;
        boolean STNK = true;

        // cek apakah dia akan ditilang atau tidak
        if(SIM == true){
            if( STNK == true ) {
                System.out.println(&amp;quot;Tidak ditilang!&amp;quot;);
            }
        } else {
            System.out.println(&amp;quot;Anda ditilang!&amp;quot;);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Perhatikan: di sana kita menggunakan percabangan bersarang untuk mengecek,
apakah dia ditilang atau tidak.&lt;/p&gt;

&lt;p&gt;Hal ini sebenarnya bisa disingkat dengan operator logika, sehingga
menjadi seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class Tilang {
    public static void main(String[] args) {
        boolean SIM = false;
        boolean STNK = true;

        // cek apakah dia akan ditilang atau tidak
        if(SIM == true &amp;amp;&amp;amp; STNK == true){
            System.out.println(&amp;quot;Tidak ditilang!&amp;quot;);
        } else {
            System.out.println(&amp;quot;Anda ditilang!&amp;quot;);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pada kode di atas, kita menggunakan operator AND (&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Karena logikanya: Si pengendara tidak akan ditilang kalau punya SIM dan STNK.&lt;/p&gt;

&lt;h2 id=&#34;apa-selanjutnya&#34;&gt;Apa Selanjutnya?&lt;/h2&gt;

&lt;p&gt;Kita sudah peljari beberapa macam bentuk percabagan dan pernak-perniknya,
ringkasananya seperti ini:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Percabangan IF, hanya memiliki satu pilihan;&lt;/li&gt;
&lt;li&gt;Percabangan IF/ELSE memiliki dua pilihan;&lt;/li&gt;
&lt;li&gt;Percabangan dengan operator ternary adalah bentuk lain dari IF/ELSE;&lt;/li&gt;
&lt;li&gt;Percabangan IF/ELSE/IF memiliki lebih dari dua pilihan;&lt;/li&gt;
&lt;li&gt;Percabangan SWITCH/CASE adalah bentuk lain dari IF/ELSE/IF;&lt;/li&gt;
&lt;li&gt;Percabangan bersarang adalah percabangan dalam Percabangan;&lt;/li&gt;
&lt;li&gt;Penggunaan operator logika dalam percabangan bisa membuat percabangan menjadi
lebih singkat.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Wah, ternyata banyak juga ya.&lt;/p&gt;

&lt;p&gt;Intinya pahami yang tiga bentuk itu. Kemudian
cobalah cari contoh kasus yang berbeda.&lt;/p&gt;

&lt;p&gt;Semakin banyak latihan semakin mantap.&lt;/p&gt;

&lt;p&gt;Selanjutnya, silahkan pelajari tentang Perulangan dalam Java.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pemrograman java di lab (8): Menggunakan pangkat</title>
      <link>http://petanikode.com/pemrograman-java-di-lab-8-menggunakan-pangkat/</link>
      <pubDate>Sun, 18 Oct 2015 08:00:00 +0000</pubDate>
      
      <guid>http://petanikode.com/pemrograman-java-di-lab-8-menggunakan-pangkat/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Pada contoh kasus &lt;a href=&#34;http://petanikode.blogspot.com/2015/10/pemrograman-java-di-lab-2-algoritma.html&#34; target=&#34;_blank&#34;&gt;program luas lingkaran&lt;/a&gt; kemarin, kita menggunakan pangkat dua untuk menghitung luas lingkaran. Pangkat dua dapat ditulis dengan membuat perkalian dengan variabel atau bilangan yang akan dipangkatkan dua. Contoh, &lt;code&gt;r&lt;sup&gt;2&lt;/sup&gt;&lt;/code&gt; dapat ditulis &lt;code&gt;r*r&lt;/code&gt;. Tapi, bagaiamana kalau pangkatnya banyak? misal &lt;code&gt;4&lt;sup&gt;112&lt;/sup&gt;&lt;/code&gt;. Tidak mungkin kita akan melakukan perkalian sebanyak itu dalam kode. Oleh karena itu, kita membutuhkan fungsi pangkat untuk menghitungnya.&lt;br /&gt;&lt;br /&gt;Java sudah menyediakan fungsi pangkat yang dapat digunakan kapan saja. Fungsi ini memiliki dua parameter, yaitu bilangan yang akan dipangkatkan dan pangkatnya.&lt;br /&gt;&lt;pre&gt;Math.pow(bilangan, pangkat);&lt;/pre&gt;Contoh program, silahkan buat kelas baru bernama &lt;i&gt;Pangkat&lt;/i&gt; di paket &lt;i&gt;pertemuan3&lt;/i&gt;. Kemudian ikuti kode berikut:&lt;br /&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-Xh3_ALdPrug/ViJaw7ln3CI/AAAAAAAACDg/J4YeXknsEyc/s1600/program%2Bpemangkatan%2Bbilangan%2Bdi%2Bjava.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-Xh3_ALdPrug/ViJaw7ln3CI/AAAAAAAACDg/J4YeXknsEyc/s1600/program%2Bpemangkatan%2Bbilangan%2Bdi%2Bjava.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Kode program di atas, akan menghasilkan output: 32, karena 2&lt;sup&gt;5&lt;/sup&gt; akan menghasilkan 32.&lt;br /&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-LliT4M85udU/ViJbVl3k9CI/AAAAAAAACDo/5EEkMlk4bLk/s1600/output%2Bprogram%2Bpemangkatan%2Bdi%2Bjava.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://4.bp.blogspot.com/-LliT4M85udU/ViJbVl3k9CI/AAAAAAAACDo/5EEkMlk4bLk/s1600/output%2Bprogram%2Bpemangkatan%2Bdi%2Bjava.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pemrograman java di lab (7): Mengenal JOptionPane dan operator kondisi</title>
      <link>http://petanikode.com/pemrograman-java-di-lab-7-mengenal-joptionpane-dan-operator-kondisi/</link>
      <pubDate>Sat, 17 Oct 2015 21:34:00 +0000</pubDate>
      
      <guid>http://petanikode.com/pemrograman-java-di-lab-7-mengenal-joptionpane-dan-operator-kondisi/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Sebelumnya, kita telah &lt;a href=&#34;http://petanikode.blogspot.com/2015/10/pemrograman-java-di-lab-6-mengenal.html&#34; target=&#34;_blank&#34;&gt;berkenalan dengan operator&lt;/a&gt;. Sekarang kita akan coba mengenal &lt;i&gt;JOptionPane&lt;/i&gt; dan operator kondisi. Pembahasan sengaja dibuat terpisah, agar pembahasan operator tidak terlalu panjang.&lt;br /&gt;&lt;h2&gt;JOptionPane&lt;/h2&gt;&lt;i&gt;JOptionPane&lt;/i&gt; merupakan sebuah kelas yang menyediakan jendela dialog sebagai antarmuka. &lt;i&gt;JOptionPane&lt;/i&gt; bisa digunakan untuk mendapatkan input, menampilkan informasi, menampilkan pesan error, menampilkan dialog konfirmasi, dan sebagainya.&lt;br /&gt;&lt;br /&gt;Sebelum menggunakan &lt;i&gt;JOptionPane&lt;/i&gt;, kita perlu mengimpornya ke dalam program:&lt;br /&gt;&lt;pre&gt;import javax.swing.JOptionPane;&lt;/pre&gt;Terdapat empat fungsi atau metode yang sering dipakai:&lt;br /&gt;&lt;ol&gt;&lt;li&gt;&lt;code&gt;showConfirmDialog()&lt;/code&gt; : untuk menampilkan dialog konfirmasi&lt;/li&gt;&lt;li&gt;&lt;code&gt;showInputDialog()&lt;/code&gt; : untuk menampilkan dialog input&lt;/li&gt;&lt;li&gt;&lt;code&gt;showMessageDialog()&lt;/code&gt; : untuk menampilkan pesan/informasi&lt;/li&gt;&lt;li&gt;&lt;code&gt;showOptionDialog()&lt;/code&gt; : untuk menampilkan dialog pilihan&lt;/li&gt;&lt;/ol&gt;&lt;h2&gt;Operator Kondisi&lt;/h2&gt;Operator kondisi merupakan sebuah operator khusus untuk memeriksa kondisi tertentu. Bisa dibilang, oprator ini termasuk ke dalam operator logika atau operator untuk membuat implikasi. Operator ini disimbolkan dengan tanda tanya (?). Struktur operator kondisi:&lt;br /&gt;&lt;pre&gt;(kondisi) ? benar : salah;&lt;/pre&gt;Kalau kondisi bernilai &lt;code&gt;true&lt;/code&gt;, maka kode &lt;code&gt;benar&lt;/code&gt; akan dikerjakan. Tapi, kalau tidak atau bernilai &lt;code&gt;false&lt;/code&gt;, maka kode &lt;code&gt;salah&lt;/code&gt; akan dikerjkana.&lt;br /&gt;&lt;br /&gt;Sebagai contoh, kita akan membuat sebuah program baru dengan bahan &lt;i&gt;JOptionPane&lt;/i&gt; dan operator kondisi. Buatlah kelas baru bernama &lt;i&gt;OperatorKondisi&lt;/i&gt; di paket &lt;i&gt;pertemuan3&lt;/i&gt;. Kemudian ikuti kode berikut ini:&lt;br /&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-pwf8JhORFbs/ViJKacf93QI/AAAAAAAACC0/Sbw711AF5j4/s1600/kode%2Bprogram%2Boperator%2Bkondisi%2Bdan%2BJOptionPane.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-pwf8JhORFbs/ViJKacf93QI/AAAAAAAACC0/Sbw711AF5j4/s1600/kode%2Bprogram%2Boperator%2Bkondisi%2Bdan%2BJOptionPane.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Program di atas, akan menghasilkan output seperti berikut ini:&lt;br /&gt;Dialog input,&lt;br /&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-_0gjBZCAd0M/ViJL3GgzPkI/AAAAAAAACDQ/z3dkpg_k4dA/s1600/dialog%2Binput%2BJOptionPane.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://3.bp.blogspot.com/-_0gjBZCAd0M/ViJL3GgzPkI/AAAAAAAACDQ/z3dkpg_k4dA/s1600/dialog%2Binput%2BJOptionPane.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;dialog output,&lt;br /&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-azlCzuPesBs/ViJLdsIkSPI/AAAAAAAACDI/6Fi73g6hFXQ/s1600/outpu%2Batau%2Bmessage%2Bdialog%2BJOptionPane.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-azlCzuPesBs/ViJLdsIkSPI/AAAAAAAACDI/6Fi73g6hFXQ/s1600/outpu%2Batau%2Bmessage%2Bdialog%2BJOptionPane.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Catatan&lt;/b&gt;: Dialog input &lt;i&gt;JOptionPane&lt;/i&gt; sama seperti &lt;a href=&#34;http://petanikode.blogspot.com/2015/10/pemrograman-java-di-lab-4-berkenalan.html&#34; target=&#34;_blank&#34;&gt;Scanner&lt;/a&gt;. Perbedaanya, Scanner dipkai untuk antarmuka teks atau &lt;i&gt;console&lt;/i&gt;. Sedangkan Dialog input &lt;i&gt;JOptionPane&lt;/i&gt; dipakai untuk antarmuka grafis (GUI). Pengguna komputer lebih senang dengan antarmuka grafis, karena mudah digunakan. Sedangkan antarmuka teks, sangat jarang dipakai pada pengguna komputer umum.&lt;br /&gt;&lt;br /&gt;Referensi:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/javase/7/docs/api/javax/swing/JOptionPane.html&#34;&gt;https://docs.oracle.com/javase/7/docs/api/javax/swing/JOptionPane.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;http://www.herongyang.com/Swing/JOptionPane-Display-Option-Dialog-Box.html&#34;&gt;http://www.herongyang.com/Swing/JOptionPane-Display-Option-Dialog-Box.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/javase/tutorial/java/nutsandbolts/op2.html&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://docs.oracle.com/javase/tutorial/java/nutsandbolts/op2.html&#34;&gt;https://docs.oracle.com/javase/tutorial/java/nutsandbolts/op2.html&lt;/a&gt; &lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&amp;mdash;&lt;br /&gt;Sampai di sini, ada yang mau ditanyakan? siahkan kirim melalui komentar!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>