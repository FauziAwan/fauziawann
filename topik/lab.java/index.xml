<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lab.Java on Petani Kode — Programmer Pengguna Linux</title>
    <link>http://petanikode.com/topik/lab.java/index.xml</link>
    <description>Recent content in Lab.Java on Petani Kode — Programmer Pengguna Linux</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>id-id</language>
    <copyright>Copyright (c) 2017, Petani Kode; all rights reserved.</copyright>
    <atom:link href="http://petanikode.com/topik/lab.java/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Pemrograman Java di Lab (16): Fungsi dan Method</title>
      <link>http://petanikode.com/pemrograman-java-di-lab-16-fungsi-dan-method/</link>
      <pubDate>Fri, 22 Apr 2016 20:31:00 +0000</pubDate>
      
      <guid>http://petanikode.com/pemrograman-java-di-lab-16-fungsi-dan-method/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Pemrograman Java di Lab Petani Kode&#34; src=&#34;https://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; /&gt;&lt;br /&gt;Fungsi dan &lt;i&gt;Method&lt;/i&gt; merupakan bagian dari program yang bertugas melakukan operasi tertentu. Pada teknik pemrograman prosedural seperti pemrograman Pascal, C, C++, PHP, dsb. Program dibentuk dari kumpulan fungsi atau prosedur yang saling bekerja sama. Fungsi-fungsi tersebut akan dipanggil pada fungsi &lt;code&gt;main&lt;/code&gt;. Fungsi &lt;code&gt;main&lt;/code&gt; merupakan fungsi utama dalam sebuah program.&lt;br /&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-LMvdR9YOW-U/VxnanA7PSJI/AAAAAAAACwE/rw65mXoukjoYuJ9yaeo8ershV1L82ixggCK4B/s1600/Program%2BKalkulator%2Bdibuat%2Bdari%2Bsekumpulan%2Bfungsi.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img alt=&#34;Ilustrasi komponen program yang dibangun dari fungsi-fungsi&#34; border=&#34;0&#34; src=&#34;https://3.bp.blogspot.com/-LMvdR9YOW-U/VxnanA7PSJI/AAAAAAAACwE/rw65mXoukjoYuJ9yaeo8ershV1L82ixggCK4B/s1600/Program%2BKalkulator%2Bdibuat%2Bdari%2Bsekumpulan%2Bfungsi.png&#34; title=&#34;&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Pada pemrograman Java, Fungsi atau prosedur dikenal dengan method (metode). Java sepenuhnya menerapkan paradigma pemrograman berorientasi objek (PBO), dalam bahasa inggris disebut OOP &lt;i&gt;(Object Oriented Programming)&lt;/i&gt;.&lt;br /&gt;&lt;br /&gt;Pada pertemuan pertama praktikum ini, kita memandang &lt;i&gt;class&lt;/i&gt; Java sebagai sebuah program. Di dalam kelas java tedapat atribut dan &lt;i&gt;method&lt;/i&gt;. Atribut merupakan sebuah variabel dan &lt;i&gt;method&lt;/i&gt; merupakan sebuah fungsi untuk melakukan operasi tertentu terhadap atribut.&lt;br /&gt;&lt;h2 id=&#34;membuat-fungsi-atau-method&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#membuat-fungsi-atau-method&#34; name=&#34;membuat-fungsi-atau-method&#34;&gt;&lt;/a&gt;Membuat Fungsi atau Method&lt;/h2&gt;Fungsi atau method, harus dibuat di dalam &lt;i&gt;class&lt;/i&gt;, format dasarnya:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;static TypeDataKembalian namaMethod(){&lt;br /&gt;    // statemen atau kode fungsi&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Contoh:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;static void ucapSalam(){&lt;br /&gt;    System.out.println(&amp;ldquo;Assalamualaykum&amp;rdquo;);&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Kita menggunakan kata kunci &lt;code&gt;static&lt;/code&gt; agar fungsi dapat dipanggil di dalam fungsi &lt;i&gt;main&lt;/i&gt;. Tipe data &lt;code&gt;void&lt;/code&gt; artinya kosong, fungsi tersebut tidak mengebalikan nilai apa-apa.&lt;br /&gt;&lt;h2 id=&#34;memanggil-fungsi&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#memanggil-fungsi&#34; name=&#34;memanggil-fungsi&#34;&gt;&lt;/a&gt;Memanggil Fungsi&lt;/h2&gt;Fungsi dapat dipanggil dari fungsi &lt;code&gt;main&lt;/code&gt; atau dari fungsi yang lain. Contoh pemanggilan fungsi dalam dalam funsgi &lt;code&gt;main&lt;/code&gt;.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;public static void main(String[] args){&lt;br /&gt;    ucapSalam();&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Akan menghasilkan output:&lt;br /&gt;&lt;pre&gt;&lt;code&gt;Assalamualaykum&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;fungsi-dengan-parameter&#34;&gt;Fungsi dengan Parameter&lt;/h2&gt;Parameter merupakan variabel yang akan diolah atau diproses di dalam fungsi. Contoh fungsi yang memiliki parameter:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;static void ucapin(String ucapan){&lt;br /&gt;    System.out.println(ucapan);&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Pemanggilannya:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;ucapin(&amp;ldquo;Hallo!&amp;rdquo;);&lt;br /&gt;ucapin(&amp;ldquo;Selamat datang di pemrograman Java&amp;rdquo;);&lt;br /&gt;ucapin(&amp;ldquo;Saya kira ini bagian terakhir&amp;rdquo;);&lt;br /&gt;ucapin(&amp;ldquo;Sampai jumpa lagi, ya!&amp;rdquo;);&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Hasil outputnya:&lt;br /&gt;&lt;pre&gt;&lt;code&gt;Hallo!&lt;br /&gt;Selamat datang di pemrograman Java&lt;br /&gt;Saya kira ini bagian terakhir&lt;br /&gt;Sampai jumpa lagi, ya!&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Tipe data dari parameter harus dituliskan. Untuk parameter yang lebih dari satu, dipisah dengan tanda koma (&lt;code&gt;,&lt;/code&gt;). Contoh:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;static void ucapin(String ucapan, String kepada){&lt;br /&gt;    //&amp;hellip;&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div id=&#34;fungsi-yang-mengembalikan-nilai&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#fungsi-yang-mengembalikan-nilai&#34; name=&#34;fungsi-yang-mengembalikan-nilai&#34;&gt;&lt;/a&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-3LilJsKfgRM/VxnbVspOUDI/AAAAAAAACwQ/t6RCz2U4PJg8lvvkBmexayJWHOnsaEbwQCK4B/s1600/Contoh%2BFungsi%2Bdi%2BJava.png&#34;&gt;&lt;img alt=&#34;Contoh Fungsi pada Java&#34; border=&#34;0&#34; src=&#34;https://4.bp.blogspot.com/-3LilJsKfgRM/VxnbVspOUDI/AAAAAAAACwQ/t6RCz2U4PJg8lvvkBmexayJWHOnsaEbwQCK4B/s1600/Contoh%2BFungsi%2Bdi%2BJava.png&#34; title=&#34;&#34; /&gt;&lt;/a&gt; &lt;/div&gt;&lt;h2 id=&#34;fungsi-yang-mengembalikan-nilai&#34;&gt;Fungsi yang Mengembalikan Nilai&lt;/h2&gt;Setelah data yang diinputkan melalui parameter diproses, fungsi harus mengembalikan nilai agar dapat diolah di proses selanjutnya. Pengembalian nilai pada fungsi menggunakan kata kunci &lt;code&gt;return&lt;/code&gt;. Jangan lupa juga untuk menuliskan tipe data kembaliannya. Contoh fungsi yang mengembalikan nilai:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;static int luasPersegi(int sisi){&lt;br /&gt;    int luas = sisi * sisi;&lt;br /&gt;    return luas;&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Fungsi &lt;code&gt;luasPersegi()&lt;/code&gt; akan mengembalikan nilai berupa &lt;i&gt;integer&lt;/i&gt; (&lt;code&gt;int&lt;/code&gt;) dari hasil rumus &lt;code&gt;luas&lt;/code&gt; (persegi). Contoh pemanggilanya:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;System.out.println(&amp;ldquo;Luas Persegi dengan panjang sisi 5 adalah &amp;rdquo; + luasPersegi(5));&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Hasil Output:&lt;br /&gt;&lt;pre&gt;&lt;code&gt;Luas Persegi dengan panjang sisi 5 adalah 25&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;pemanggilan-fungsi-di-fungsi-lain&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#pemanggilan-fungsi-di-fungsi-lain&#34; name=&#34;pemanggilan-fungsi-di-fungsi-lain&#34;&gt;&lt;/a&gt;Pemanggilan Fungsi di Fungsi Lain&lt;/h2&gt;Fungsi-fungsi dapat saling memanggil untuk memproses data. Contoh, sebuah program Kalkulator Bangun Ruang memiliki fungsi-fungsi: &lt;code&gt;luasPersegi()&lt;/code&gt;, &lt;code&gt;luasPersegiPanjang()&lt;/code&gt;, &lt;code&gt;luasSegitiga()&lt;/code&gt;, &lt;code&gt;luasBalok()&lt;/code&gt;, &lt;code&gt;luasKubus()&lt;/code&gt; dsb. Fungsi-fungsi tersebut dapat saling membantu, contoh fungsi &lt;code&gt;luasKubus()&lt;/code&gt; membutuhkan fungsi &lt;code&gt;luasPersegi()&lt;/code&gt;.&lt;br /&gt;Rumus&lt;br /&gt;&lt;pre&gt;&lt;code&gt;Luas Kubus = 6 * luasPersegi;&lt;br /&gt;Luas Persegi = sisi * sisi;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Maka Bentuk programnya bisa seperti ini:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;public class BangunRuang {&lt;br /&gt;&lt;br /&gt;    public static void main(String[] args) {&lt;br /&gt;&lt;br /&gt;        int s = 12;&lt;br /&gt;        int luas = luasKubus(s);&lt;br /&gt;&lt;br /&gt;        System.out.println(luas);&lt;br /&gt;&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    static int luasPersegi(int sisi){&lt;br /&gt;        return sisi * sisi;&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    static int luasKubus(int sisi){&lt;br /&gt;        return 6 * luasPersegi(sisi);&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Hasil output&lt;br /&gt;&lt;pre&gt;&lt;code&gt;864&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Itulah beberapa hal seputar fungsi atau method di Java. Jika anda membaca dan mengikuti serial artikel ini dari &lt;a href=&#34;http://www.petanikode.com/2015/10/pemrograman-java-di-lab-1-berkenalan.html&#34; target=&#34;_blank&#34;&gt;awal&lt;/a&gt;, saya kira anda sudah menguasai teknik dasar pemrograman java. Sekian dulu, mungkin artikel ini masih punya lanjutan. Ditunggu saja, ya!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pemrograman Java di Lab (15): Mengenal Array</title>
      <link>http://petanikode.com/pemrograman-java-di-lab-15-mengenal-array/</link>
      <pubDate>Thu, 21 Apr 2016 22:34:00 +0000</pubDate>
      
      <guid>http://petanikode.com/pemrograman-java-di-lab-15-mengenal-array/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; /&gt;&lt;/a&gt;Array memungkinkan kita menyimpan banyak data dalam satu variabel. Array memiliki indeks sebagai nomor yang digunakan untuk mengakses isinya. Indeks array dihitung mulai dari nol (&lt;code&gt;0&lt;/code&gt;).&lt;br /&gt;&lt;h2 id=&#34;cara-membuat-array-dan-mengisinya&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#cara-membuat-array-dan-mengisinya&#34; name=&#34;cara-membuat-array-dan-mengisinya&#34;&gt;&lt;/a&gt;Cara Membuat Array dan Mengisinya&lt;/h2&gt;Cara membuat sebuah array di java:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;String[] nama;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;atau bisa juga&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;String[] nama = new String[5];&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;* angka &lt;code&gt;5&lt;/code&gt; adalah batas atau ukuran array&lt;br /&gt;Kemudian untuk mengisi datanya, lakukan dengan operator pengisian untuk masing-masing indeks.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;nama[0] = &amp;ldquo;Linda&amp;rdquo;;&lt;br /&gt;nama[1] = &amp;ldquo;Santi&amp;rdquo;;&lt;br /&gt;nama[2] = &amp;ldquo;Susan&amp;rdquo;;&lt;br /&gt;nama[3] = &amp;ldquo;Mila&amp;rdquo;;&lt;br /&gt;nama[4] = &amp;ldquo;Ayu&amp;rdquo;;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Atau, untuk menghemat energi, bisa juga langsung mengisinya saat pembuatan. Contoh:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;String[] nama = {&amp;ldquo;Linda&amp;rdquo;, &amp;ldquo;Santi&amp;rdquo;, &amp;ldquo;Susan&amp;rdquo;, &amp;ldquo;Mila&amp;rdquo;, &amp;ldquo;Ayu&amp;rdquo;};&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;perbedaan-array-dengan-variabel-biasa&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#perbedaan-array-dengan-variabel-biasa&#34; name=&#34;perbedaan-array-dengan-variabel-biasa&#34;&gt;&lt;/a&gt;Perbedaan Array dengan Variabel Biasa&lt;/h2&gt;Kita ingin menyimpan nama-nama teman dalam variabel. Hal yang munkin kita lakukan, tampa menggunakan array adalah sebagai berikut.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;String teman1 = &amp;ldquo;Deni&amp;rdquo;;&lt;br /&gt;String teman2 = &amp;ldquo;Dodi&amp;rdquo;;&lt;br /&gt;String teman3 = &amp;ldquo;Dewi&amp;rdquo;;&lt;br /&gt;String teman4 = &amp;ldquo;Desi&amp;rdquo;;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Kita baru saja membuat empat variabel untuk menyimpan masing-masing nama teman. Hal ini sepertinya kurang efektif, karena harus membuat banyak variabel. Sedangkan, kalau menggunakan array, kita dapat membuatnya seperti berikut ini.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;String[] teman = {&amp;ldquo;Deni&amp;rdquo;, &amp;ldquo;Dodi&amp;rdquo;, &amp;ldquo;Dewi&amp;rdquo;, &amp;ldquo;Desi&amp;rdquo;};&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Cukup satu variabel untuk menyimpan nama-nama teman.&lt;br /&gt;&lt;h2 id=&#34;mengambil-data-dari-array&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#mengambil-data-dari-array&#34; name=&#34;mengambil-data-dari-array&#34;&gt;&lt;/a&gt;Mengambil Data dari Array&lt;/h2&gt;Pengambilan data dari variabel array, dilakukan dengan indeks sebagai kunci. Contoh, saya ingin mengambil nama &lt;code&gt;Dewi&lt;/code&gt; dari array &lt;code&gt;teman&lt;/code&gt;:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;System.out.println(teman[2]);&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Nama &lt;code&gt;Dewi&lt;/code&gt; berada di indeks ke-2, karena indeks array dihitung dari &lt;code&gt;0&lt;/code&gt;.&lt;br /&gt;&lt;h2 id=&#34;menggunakan-perulangan&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#menggunakan-perulangan&#34; name=&#34;menggunakan-perulangan&#34;&gt;&lt;/a&gt;Menggunakan Perulangan&lt;/h2&gt;Mengambil data satu per satu dari array mungkin cukup melelahkan, karena kita harus mengtik ulang nama arraynya dengan indeks yang berbeda. Contoh:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;System.out.println(teman[0]);&lt;br /&gt;System.out.println(teman[1]);&lt;br /&gt;System.out.println(teman[2]);&lt;br /&gt;System.out.println(teman[3]);&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Bagaimana kalau data array-nya memiliki data sampai 1000, maka kita haru mengetik kode di atas ebanyak seribu kali. Kita dapat menggunakan perulangan untuk mengakses semua isi array. Contoh:&lt;br /&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-pXqVRCPTKn0/Vxjjx7C66lI/AAAAAAAACvo/jwQlQIf84SoJLlK-PwdAfjFi-Gwqa5F3ACK4B/s1600/Contoh%2BArray%2Bdi%2BJava%2B-%2BPetani%2BKode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img alt=&#34;Contoh Array yang diakses dengan perulangan&#34; border=&#34;0&#34; src=&#34;https://4.bp.blogspot.com/-pXqVRCPTKn0/Vxjjx7C66lI/AAAAAAAACvo/jwQlQIf84SoJLlK-PwdAfjFi-Gwqa5F3ACK4B/s1600/Contoh%2BArray%2Bdi%2BJava%2B-%2BPetani%2BKode.png&#34; title=&#34;&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Atribut &lt;code&gt;length&lt;/code&gt; untuk mengabil panjang array. Perulangan akan dilakukan sampai panjang array.&lt;br /&gt;&lt;h2 id=&#34;array-dua-dimensi&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#array-dua-dimensi&#34; name=&#34;array-dua-dimensi&#34;&gt;&lt;/a&gt;Array Dua Dimensi&lt;/h2&gt;Array dua dimensi adalah array yang berada di dalam array. Array dapat juga memiliki banyak dimensi (lebih dari dua). Contoh array dua dimensi:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;String[][] kontak = {{&amp;ldquo;Lili&amp;rdquo;,&amp;ldquo;08111&amp;rdquo;}, {&amp;ldquo;Lala&amp;rdquo;,&amp;ldquo;08122&amp;rdquo;}, {&amp;ldquo;Maya&amp;rdquo;,&amp;ldquo;08133&amp;rdquo;}};&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Indek ke-0 pada array &lt;code&gt;kontak&lt;/code&gt; berisi array &lt;code&gt;{&amp;ldquo;lili&amp;rdquo;,&amp;ldquo;08111&amp;rdquo;}&lt;/code&gt;. Untuk mengakses semua elemen dalam array dua dimensi, kita membutuhkan perulangan bersarang. Contoh:&lt;br /&gt;&lt;a href=&#34;http://4.bp.blogspot.com/--B8JIXhQjjU/Vxjj-XAAERI/AAAAAAAACvw/h3zXImrKeBg0pjgjAE5df7fi9iXETaQ5wCK4B/s1600/Array%2Bdua%2Bdimensi.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img alt=&#34;Contoh Array 2 Dimensi di Java&#34; border=&#34;0&#34; src=&#34;https://4.bp.blogspot.com/--B8JIXhQjjU/Vxjj-XAAERI/AAAAAAAACvw/h3zXImrKeBg0pjgjAE5df7fi9iXETaQ5wCK4B/s1600/Array%2Bdua%2Bdimensi.png&#34; title=&#34;Contoh Array 2 Dimensi di Java&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pemrograman Java di Lab (14): Perulangan While dan Do/While</title>
      <link>http://petanikode.com/pemrograman-java-di-lab-14-perulangan-while-dan-do/while/</link>
      <pubDate>Fri, 18 Mar 2016 16:52:00 +0000</pubDate>
      
      <guid>http://petanikode.com/pemrograman-java-di-lab-14-perulangan-while-dan-do/while/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;h2&gt;1. Perulangan While&lt;/h2&gt;Perulangan &lt;i&gt;while&lt;/i&gt; adalah salah satu bentuk perulangan yang tak tentu jumlah kali perulangannya. Perulangan &lt;i&gt;while&lt;/i&gt; memiliki sebuah persayarat kondisi untuk melakukan perulangan. Apabila kondisi tidak terpenuhi, perulangan tidak akan dikerjakan. Contoh bentuk perulanagan while pada java:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;while(keluar == false){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; mainProgram();&lt;br /&gt;}&lt;/code&gt;&lt;/pre&gt;Pada contoh di atas, fungsi &lt;code&gt;mainProgram()&lt;/code&gt; akan dieksekusi terus menerus sampai variabel keluar bernilai true. Untuk lebih jelasnya, silahkan coba contoh berikut ini.&lt;br /&gt;&lt;br /&gt;&lt;script src=&#34;https://gist.github.com/ardianta/4c603073712590683b60.js&#34;&gt;&lt;/script&gt;&lt;br /&gt;Pada contoh di atas, kita memubuat sebuah kalkulator sederhana. Perulangan &lt;i&gt;while&lt;/i&gt; akan mengecek kondisi nilai variabel &lt;i&gt;keluar&lt;/i&gt;. Karena pada awal, variabel &lt;i&gt;keluar&lt;/i&gt; bernilai &lt;i&gt;false&lt;/i&gt;, maka perulangan dilakukan.&lt;br /&gt;&lt;h2&gt;2. Perulangan Do/While&lt;/h2&gt;Perulangan &lt;i&gt;Do/While&lt;/i&gt; adalah perulangan yang tak tentu jumlah kali perulangannya. Perulangan ini memiliki satu kali perulangan yang harus dikerjakan pada awal perulangan. Contoh bentuk perulangan &lt;i&gt;Do/While&lt;/i&gt; dalam java:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;do {&lt;br /&gt;     belajar();&lt;br /&gt;} while (bisa == false);&lt;/code&gt;&lt;/pre&gt;Fungsi &lt;code&gt;belajar()&lt;/code&gt; akan terus dikerjakan atau diulangi selama belum bisa &lt;i&gt;(bisa == false)&lt;/i&gt;. Fungsi belajar akan berhenti dikerjakan sampai bisa &lt;i&gt;(bisa == true)&lt;/i&gt;. Perulangan &lt;i&gt;do/while&lt;/i&gt; akan mengerjakan fungsi belajar satu kali dulu, kemudian mengecek kondisinya, bila bisa maka berhenti. Tetapi, kalau masih belum bisa, lanjutkan ke perulangan selanjutnya.&lt;br /&gt;&lt;br /&gt;Contoh perulangan do/while dalam program kalkulator:&lt;br /&gt;&lt;br /&gt;&lt;script src=&#34;https://gist.github.com/ardianta/d64f5318480d3740f586.js&#34;&gt;&lt;/script&gt;&lt;br /&gt;&lt;h2&gt;Kesimpulan&lt;/h2&gt;Perualangan &lt;i&gt;While&lt;/i&gt; dan &lt;i&gt;Do/While&lt;/i&gt; adalah perulangan yang tak tentu jumlah kali perulangannya &lt;i&gt;(uncounted loop)&lt;/i&gt;. Perbedaan perulangan &lt;i&gt;While&lt;/i&gt; dengan &lt;i&gt;Do/While&lt;/i&gt; terletak pada awal perulangannya. Perulangan &lt;i&gt;Do/While&lt;/i&gt; memilki satu kali perulangan yang harus dikerjakan pada awal perulangan, sedangkan perulangan &lt;i&gt;while&lt;/i&gt; tidak.&lt;br /&gt;&lt;br /&gt;Baca juga: &lt;a href=&#34;http://www.petanikode.com/2015/09/perbedaan-perulangan-while-do-dan-do.html&#34; target=&#34;_blank&#34;&gt;Perbedaan Perulangan While dan Do/While&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pemrograman java di lab (13): Perulangan FOR</title>
      <link>http://petanikode.com/pemrograman-java-di-lab-13-perulangan-for/</link>
      <pubDate>Sun, 03 Jan 2016 18:28:00 +0000</pubDate>
      
      <guid>http://petanikode.com/pemrograman-java-di-lab-13-perulangan-for/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Perulangan merupakan intruksi yang dikerjakan berulang-ulang. Perulangan di pemrograman java ada dua jenis, perulangan terhitung dan perulangan tak terhitung (tidak tentu). Pada pertemuan ini, saya akan membahas perulangan for saja dulu. Nanti di pertemuan berikutinya, kita akan banyak bermain dengan perulangan &lt;i&gt;while (uncounted loop)&lt;/i&gt;.&lt;br /&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-Pab1ngEX31Y/VlToeaw3YnI/AAAAAAAACQM/te0QBK1U-VY/s1600/Flowchart%2Bperulangan%2B-%2Bpetani%2Bkode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://1.bp.blogspot.com/-Pab1ngEX31Y/VlToeaw3YnI/AAAAAAAACQM/te0QBK1U-VY/s1600/Flowchart%2Bperulangan%2B-%2Bpetani%2Bkode.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;h2&gt;Mengapa kita butuh perulangan?&lt;/h2&gt;Cobalah melakukan pencetakan teks sebanyak lima kali seperti beirkut ini:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;/code&gt;&lt;/pre&gt;Kemudian coba tambahkan 5 lagi, sehingga sekarang totalnya ada 10 perulangan dengan intruksi yang sama.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;/code&gt;&lt;/pre&gt;Lalu, bagaimana kalau mengulang sebanyak 1000 kali? Apakah kita akan menuliskan berulang-ualang sebanyak 1000 kali seperti di atas? Nah!, di siniliah kita perlu perulangan agar tidak menulis kode berulang-ulang. Kode di atas dapat ditulis dalam perulangan menjadi seperti berikut ini.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;for (int hitungan = 0; hitungan &amp;lt;= 1000; hitungan++) {&lt;br /&gt;&amp;nbsp; &amp;nbsp; System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;); &lt;br /&gt;}&lt;/code&gt;&lt;/pre&gt;Maka, teks &amp;ldquo;Petani Kode&amp;rdquo; akan dicetak berulang-ulang sebanyak 1000 kali.&lt;br /&gt;&lt;h2&gt;Perulangan FOR&amp;nbsp;&lt;/h2&gt;Perulangan FOR merupakan perulangan yang terhitung jelas, bearpa banyak dia akan mengulang atau dalam bahasa inggris disebut &lt;i&gt;counted loop&lt;/i&gt;. Format penulisan perulangan for di java adalah sebagai berikut:&lt;br /&gt;&lt;pre&gt;for( int hitungan = 0; hitungan &amp;lt;= 10; hitungan++ ){&lt;br /&gt;&amp;nbsp; &amp;nbsp; // blok kode yang akan diulang &lt;br /&gt;}&lt;/pre&gt;variabel &lt;code&gt;hitungan&lt;/code&gt; berfungsi untuk menampung nilai hitungan perulangan. Pada awalnya di isi &lt;code&gt;0&lt;/code&gt; (nol). Kemudian, akan selalu bertambah satu karena ada penambahan (&lt;i&gt;increment)&lt;/i&gt; &lt;code&gt;hitungan++&lt;/code&gt;. Perulangan akan berhenti sampai hitungan mencapai 10.&lt;br /&gt;&lt;h2&gt;Contoh Program&lt;/h2&gt;Silahkan anda coba ketik sendiri program-program berikut ini:&lt;br /&gt;&lt;br /&gt;1. Program mencetak bintang&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;class Bintang{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; public static void main(String[] args){&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; for(int i=0; i &amp;lt;= 5; i++){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; System.out.println(&amp;rdquo;**&lt;strong&gt;&lt;em&gt;&amp;rdquo;);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;}&lt;/code&gt;&lt;/pre&gt;Hasil output:&lt;br /&gt;&lt;pre&gt;&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;&lt;br /&gt;&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;&lt;br /&gt;&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;*&lt;strong&gt;&lt;/pre&gt;&lt;br /&gt;2. Program cetak angak 1—10&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;class CetakAngka{&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; public static void main(String[] argumen){&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; for(int i=0; i &amp;lt;= 10; i++){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; System.out.print( i + &amp;ldquo; &amp;rdquo; );&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; } &lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&lt;br /&gt;}&lt;/code&gt;&lt;/pre&gt;Hasil output:&lt;br /&gt;&lt;pre&gt;0 1 2 3 4 5 6 7 8 9 10 &lt;/pre&gt;&lt;br /&gt;3. Cetak bilangan ganjil saja&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;class CetakBilanganGanjil{&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; public static void main(String[] argumen){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; for(int i = 1; i &amp;lt;= 20; i += 2){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; System.out.print( i + &amp;ldquo; &amp;ldquo;);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&lt;br /&gt;}&lt;/code&gt;&lt;/pre&gt;Hasil output:&lt;br /&gt;&lt;pre&gt;1 3 5 7 9 11 13 15 17 19 &lt;/pre&gt;&lt;h2&gt;Tantangan&lt;/h2&gt;Kalau sudah paham dengan struktur perulangan FOR, mari mencoba sebuah tantangan. Buatlah kode dengan perulangan FOR. Anda juga bisa memanfaatkan &lt;a href=&#34;http://www.petanikode.com/2015/11/percabangan-if-esle-if-dan-switch-case-di-java.html&#34; target=&#34;_blank&#34;&gt;struktur IF&lt;/a&gt;. Silahkan dipikirkan, agar menghasilkan output seperti di bawah ini:&lt;br /&gt;&lt;br /&gt;1. Cetak bintang dengan pola bertambah&lt;br /&gt;&lt;pre&gt;*&lt;br /&gt;&lt;/strong&gt;&lt;br /&gt;&lt;strong&gt;&lt;em&gt;&lt;br /&gt;&lt;/em&gt;&lt;/strong&gt;*&lt;br /&gt;**&lt;strong&gt;&lt;em&gt;&lt;/pre&gt;2. Cetak bintagn dengan pola berkurang&lt;br /&gt;&lt;pre&gt;&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;*&lt;br /&gt;&lt;strong&gt;&lt;br /&gt;&lt;em&gt;&lt;/pre&gt;3. Cetak bintang dengan pola bertambah lalu berkurang&lt;br /&gt;&lt;pre&gt;&lt;/em&gt;&lt;br /&gt;&lt;/strong&gt;&lt;br /&gt;&lt;strong&gt;&lt;em&gt;&lt;br /&gt;&lt;/em&gt;&lt;/strong&gt;*&lt;br /&gt;**&lt;strong&gt;&lt;em&gt;&lt;br /&gt;&lt;/em&gt;&lt;/strong&gt;*&lt;br /&gt;*&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;br /&gt;*&lt;/pre&gt;4. Cetak bilangan kelipatan dari 2&lt;br /&gt;&lt;pre&gt;2, 4, 8, 16, 32, &amp;hellip; 255&lt;/pre&gt;5. Cetak pola bilangan berikut&lt;br /&gt;&lt;pre&gt;1&lt;br /&gt;12&lt;br /&gt;123&lt;br /&gt;1234&lt;br /&gt;12345&lt;/pre&gt;Selamat mencoba, jangan lupa kirimkan tangkapan layar hasil output-nya di komentar.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pemrograman java di lab (12): percabangan bersarang</title>
      <link>http://petanikode.com/pemrograman-java-di-lab-12-percabangan-bersarang/</link>
      <pubDate>Fri, 13 Nov 2015 15:59:00 +0000</pubDate>
      
      <guid>http://petanikode.com/pemrograman-java-di-lab-12-percabangan-bersarang/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Percabangan bersarang bisa juga disebut &lt;code&gt;if&lt;/code&gt; di dalam &lt;code&gt;if&lt;/code&gt;, merupakan sebuah percabangan yang mimiliki percabangan di dalamnya atau bisa kita sebut percabangan dalam percabangan. Percabangan bersarang digunakan saat menemukan kasus dengan banyak hal yang harus dipertimbangkan. Sebagai contoh, coba perhatikan flowchart berikut ini.&lt;br /&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-6ZrqC9I8Nxs/VkBWekgFwUI/AAAAAAAACLk/tdhCo5np2lk/s1600/flowchart%2Bpercabangan%2Bbersarang%2Bjava.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-6ZrqC9I8Nxs/VkBWekgFwUI/AAAAAAAACLk/tdhCo5np2lk/s1600/flowchart%2Bpercabangan%2Bbersarang%2Bjava.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Flowchart di atas merupakan flowchart program kasir. Program di atas berfungsi untuk menentukan diskon dengan berbagai pertimbangan. Bila dituliskan dalam algoritma, kira-kira akan menjadi seperti berikut ini.&lt;br /&gt;&lt;pre&gt;Apakah anda punya kartu member?&lt;br /&gt;   - ya&lt;br /&gt;       * Apakah belanjaan anda lebih dari 500rb?&lt;br /&gt;           # ya : mendapatkan diskon 50rb&lt;br /&gt;           # tidak : tidak mendapatkan diskon&lt;br /&gt;       * Apakah belanjaan anda lebih dari 100rb?&lt;br /&gt;           # ya : mendapatkan diskon 15rb&lt;br /&gt;           # tidak: tidak mendapatkan diskon&lt;br /&gt;&amp;nbsp;  - tidak&lt;br /&gt;       * Apakah belanjaan anda lebih dari 100rb?&lt;br /&gt;           # ya : mendapatkan diskon 10rb&lt;br /&gt;           # tidak: tidak mendapatkan diskon&lt;/pre&gt;Bila sudah paham dengan algoritma dan flowchartnya, maka akan mudah membut kode programnya. Berikut adalah kode program yang dihasilkan dari algoritma di atas.&lt;br /&gt;&lt;br /&gt;&lt;script src=&#34;https://gist.github.com/ardianta/5e2974b064b571b5975e.js&#34;&gt;&lt;/script&gt;&lt;br /&gt;Program di atas akan menghasilkan output seperti berikut ini.&lt;br /&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-pj9MLeIwViI/VkWUtMt7meI/AAAAAAAACL0/LRbROotYp14/s1600/hasil%2Boutput%2Bprogram%2Bkasir%2Bdengan%2Bjava.jpg&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://1.bp.blogspot.com/-pj9MLeIwViI/VkWUtMt7meI/AAAAAAAACL0/LRbROotYp14/s1600/hasil%2Boutput%2Bprogram%2Bkasir%2Bdengan%2Bjava.jpg&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Percabangan bersarang memang sedikit membingungkan, karena banyak kondisi yang harus dipertimbangkan. Pada program di atas, kita baru hanya menggunakan &lt;code&gt;if&lt;/code&gt; di dalam &lt;code&gt;if&lt;/code&gt; saja. Percabangan bersarang juga bisa dibuat dengan kombinasi &lt;code&gt;if&lt;/code&gt; dan &lt;code&gt;switch-case&lt;/code&gt;. Percabangan &lt;code&gt;if&lt;/code&gt; berada di dalam &lt;code&gt;case&lt;/code&gt; atau sebaliknya. Silahkan anda coba sendiri.&lt;br /&gt;&lt;br /&gt;Pembahasan tentang percabangan bersarang saya akhiri sampai di sini. Bila ada pertanyaan, silahkan kirimkan melalui komentar! Selamat berpikir.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pemrograman java di lab (11): Percabangan If/Else-If/Else dan Switch/Case</title>
      <link>http://petanikode.com/pemrograman-java-di-lab-11-percabangan-if/else-if/else-dan-switch/case/</link>
      <pubDate>Mon, 09 Nov 2015 14:37:00 +0000</pubDate>
      
      <guid>http://petanikode.com/pemrograman-java-di-lab-11-percabangan-if/else-if/else-dan-switch/case/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Percabangan &lt;code&gt;if-else-if&lt;/code&gt; meurpakan pengembangan dari percabangan &lt;code&gt;if-else&lt;/code&gt;. Percabangan ini memiliki lebih dari dua (banyak) pilihan keputusan. Sementara itu, percabangan &lt;code&gt;switch-case&lt;/code&gt; merupakan percabangan bentuk lain. Namun, pada hakikatnya sama seperti percabangan &lt;code&gt;if-else-if&lt;/code&gt;.&lt;br /&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-9uS-c73seec/VkBISDA0AXI/AAAAAAAACLU/AsWtctwfCN0/s1600/flowchart%2Bpercabangan%2Byang%2Bmemiliki%2Bbanyak%2Bpilihan%2Bkeputusan.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://3.bp.blogspot.com/-9uS-c73seec/VkBISDA0AXI/AAAAAAAACLU/AsWtctwfCN0/s1600/flowchart%2Bpercabangan%2Byang%2Bmemiliki%2Bbanyak%2Bpilihan%2Bkeputusan.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;h2&gt;Percabangan If/Else-If/Else&lt;/h2&gt;Bentuk dasar percabangan &lt;code&gt;if-else-if&lt;/code&gt;&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;if (suatu kondisi) {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; // maka kerjakan ini&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; // kerjakan perintah ini juga&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; // &amp;hellip;&lt;br /&gt;} else if (kondisi lain) {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; // kerjakan ini&lt;br /&gt;&amp;nbsp; &amp;nbsp; // kerjakan ini juga&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; // &amp;hellip;&lt;br /&gt;} else if (kondisi yang lain lagi) {&lt;br /&gt;&amp;nbsp; &amp;nbsp; // kerjakan perintah ini&lt;br /&gt;&amp;nbsp; &amp;nbsp; // kerjakan ini juga&lt;br /&gt;&amp;nbsp; &amp;nbsp; // &amp;hellip; &lt;br /&gt;} esle {&lt;br /&gt;&amp;nbsp; &amp;nbsp; // kerjakan ini kalau&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; // semua kondisi di atas&lt;br /&gt;&amp;nbsp; &amp;nbsp; // tidak ada yang benar&lt;br /&gt;    // &amp;hellip;&lt;br /&gt;} &lt;/code&gt;&lt;/pre&gt;Jumlah &lt;code&gt;else-if&lt;/code&gt; tidak terbatas. Kita bisa membuat berapapun yang kita mau. Tapi, perlu diperhatikan. Jumlah &lt;code&gt;else-if&lt;/code&gt; bergantung dari kasus/masalah yang akan diselesaikan. Sebagai contoh, silahkan buat program untuk menghitung grade nilai.&lt;br /&gt;&lt;br /&gt;&lt;script src=&#34;https://gist.github.com/ardianta/2f90ec513c1264ca2f7b.js&#34;&gt;&lt;/script&gt;&lt;br /&gt;Ketetuan nilai akhir pada program di atas diperoleh dari 20% dari nilai harian ditambah 30% nilai UTS dan ditambah 50% nilai UAS.&lt;br /&gt;&lt;pre&gt;nilaiAkhir = (nilaiHarian * &lt;sup&gt;20&lt;/sup&gt;&amp;frasl;&lt;sub&gt;100&lt;/sub&gt;) + (nilaiUts * &lt;sup&gt;30&lt;/sup&gt;&amp;frasl;&lt;sub&gt;100&lt;/sub&gt;) + (nilaiUas * &lt;sup&gt;50&lt;/sup&gt;&amp;frasl;&lt;sub&gt;100&lt;/sub&gt;)&lt;/pre&gt;atau sama dengan&lt;br /&gt;&lt;pre&gt;nilaiAkhir = (nilaiHarian * 0.2) + (nilaiUts * 0.3) + (nilaiUas * 0.5)&lt;/pre&gt;maka, hasil output program di atas akan seperti berikut ini.&lt;br /&gt;&lt;br /&gt;Input nilai Harian&lt;br /&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-0HILcLQ8f68/Vj4E3RBr6vI/AAAAAAAACKM/ZMqSwlRTkMY/s1600/Input%2Bnilai%2Bharian%2Bprogram%2Bgrade%2Bnilai.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://2.bp.blogspot.com/-0HILcLQ8f68/Vj4E3RBr6vI/AAAAAAAACKM/ZMqSwlRTkMY/s1600/Input%2Bnilai%2Bharian%2Bprogram%2Bgrade%2Bnilai.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Input nilai UTS&lt;br /&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-lm3zFRf7pP8/Vj4E-Bv3iJI/AAAAAAAACKU/SA5e5b8xK4w/s1600/input%2Bnilai%2BUTS%2Bprogram%2Bgrade%2Bnilai.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://3.bp.blogspot.com/-lm3zFRf7pP8/Vj4E-Bv3iJI/AAAAAAAACKU/SA5e5b8xK4w/s1600/input%2Bnilai%2BUTS%2Bprogram%2Bgrade%2Bnilai.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Input nilai UAS&lt;br /&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-RN39ZBxqtjY/Vj4FDOAMwzI/AAAAAAAACKc/4OGNZF-Zoks/s1600/input%2Bnilai%2BUAS%2Bprogram%2Bgrade%2Bnilai%2Bjava.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://1.bp.blogspot.com/-RN39ZBxqtjY/Vj4FDOAMwzI/AAAAAAAACKc/4OGNZF-Zoks/s1600/input%2Bnilai%2BUAS%2Bprogram%2Bgrade%2Bnilai%2Bjava.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Output nilai akhir&lt;br /&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-QzwMvZYnaNA/Vj4FQ7K4g2I/AAAAAAAACKk/E2wLj8a7f2Y/s1600/Output%2Bnilai%2Bakhir%2Bprogram%2Bgrade%2Bjava.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://3.bp.blogspot.com/-QzwMvZYnaNA/Vj4FQ7K4g2I/AAAAAAAACKk/E2wLj8a7f2Y/s1600/Output%2Bnilai%2Bakhir%2Bprogram%2Bgrade%2Bjava.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Output nilai Grade&lt;br /&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-RrdvwGVitVA/Vj4FVBvkbMI/AAAAAAAACKs/wJ7fzE1lh1g/s1600/output%2Bhasil%2Bgrade%2Bdari%2Bnilai.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://1.bp.blogspot.com/-RrdvwGVitVA/Vj4FVBvkbMI/AAAAAAAACKs/wJ7fzE1lh1g/s1600/output%2Bhasil%2Bgrade%2Bdari%2Bnilai.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;h2&gt;Percabangan Switch/Case&lt;/h2&gt;Percabangan &lt;code&gt;switch-case&lt;/code&gt; pada hakikatnya sama seperti percabangan &lt;code&gt;if-else-if&lt;/code&gt;. Percabangan ini juga memiliki banayak alternatif pilihan. Bentuk dasar percabangan &lt;code&gt;switch-case&lt;/code&gt;:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;switch(variabel){&lt;br /&gt;&amp;nbsp; &amp;nbsp; case 1:&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // kerjakan kode ini&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; // kode ini juga&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; break;&lt;br /&gt;&amp;nbsp; &amp;nbsp; case 2:&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // kerjakan kode ini&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; // kode ini juga&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; break;&lt;br /&gt;&amp;nbsp; &amp;nbsp; case 3:&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // kerjakan kode ini&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; // kode ini juga&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; break;&lt;br /&gt;&amp;nbsp; &amp;nbsp; default:&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // kerjakan kode ini&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; // kode ini juga&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; break;&lt;br /&gt;}&lt;/code&gt;&lt;/pre&gt;Percabangan &lt;code&gt;switch-case&lt;/code&gt; memiliki format yang berbeda dengan &lt;code&gt;if-else-if&lt;/code&gt;. Setiap kondisi di &lt;code&gt;switch-case&lt;/code&gt; diakhiri dengan titik dua (:) kemudian diikuti blok kode yang akan dikerjakan bila kondisinya benar. Setiap blok kode diakhiri dengan kata &lt;code&gt;break&lt;/code&gt;, fungsinya untuk menghentikan pengecekan kondisi berikutnya.&lt;br /&gt;&lt;br /&gt;Silahkan coba ikuti contoh program berikut. Sebuah program yang akan membandingkan inputan yang diberikan dengan case yang sudah ditentukan. Misalkan saya menginputkan &amp;ldquo;merah&amp;rdquo;, maka &lt;i&gt;case&lt;/i&gt; &amp;ldquo;merah&amp;rdquo; akan terpilih atau bernilai benar (true).&lt;br /&gt;&lt;br /&gt;&lt;script src=&#34;https://gist.github.com/anonymous/13c7c4590d689992d9fb.js&#34;&gt;&lt;/script&gt;&lt;br /&gt;Hasil output program di atas adalah sebagai berikut:&lt;br /&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-zmGNir8SR1g/VkA8t2BATZI/AAAAAAAACK8/6D9pgOa3LDY/s1600/hasil%2Boutput%2Bprogram%2BLampuLalulintas%2Bdengna%2Bswitch-case%2Bjava.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://1.bp.blogspot.com/-zmGNir8SR1g/VkA8t2BATZI/AAAAAAAACK8/6D9pgOa3LDY/s1600/hasil%2Boutput%2Bprogram%2BLampuLalulintas%2Bdengna%2Bswitch-case%2Bjava.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Cukup sekian pembahasan tentang &lt;code&gt;if-else-if&lt;/code&gt; dan &lt;code&gt;switch-case&lt;/code&gt;. Selanjutnya anda bisa berlatih dengan kasus lain. Selamat berpikir!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pemrograman java di lab (10): Percabangan IF dan IF-ELSE</title>
      <link>http://petanikode.com/pemrograman-java-di-lab-10-percabangan-if-dan-if-else/</link>
      <pubDate>Sun, 25 Oct 2015 18:33:00 +0000</pubDate>
      
      <guid>http://petanikode.com/pemrograman-java-di-lab-10-percabangan-if-dan-if-else/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Percabangan merupakan pemecahan sebuah arus menjadi dua, sehingga membentuk cabang. Percabangan dalam &lt;i&gt;flowchart&lt;/i&gt; digambarkan dengan belah ketupat. Percabangan dikenal juga dengan struktur kondisi, struktur if, &lt;i&gt;decision&lt;/i&gt;, dan sebagainya.&amp;nbsp;&lt;i&gt; &lt;/i&gt;Kita sepakati saja menyebutnya sebagai peracabangan, karena bentuknya seperti cabang kalau di &lt;i&gt;flowchart&lt;/i&gt;.&lt;br /&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-EBFXR8YanHg/ViyfSNX80-I/AAAAAAAACEI/BVBV3EX_r3Q/s1600/Percabangan%2Bdi%2Bpemrograman%2Bjava.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://1.bp.blogspot.com/-EBFXR8YanHg/ViyfSNX80-I/AAAAAAAACEI/BVBV3EX_r3Q/s1600/Percabangan%2Bdi%2Bpemrograman%2Bjava.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Berdasarkan ilustrasi flowchart di atas, struktur dasar percabangan itu ada dua, yaitu IF dan IF-ELSE. Struktur IF, hanya memiliki satu pilihan. Bila kondisi tidak benar, maka tidak melakukan apa-apa. Sedangkan IF-ELSE, memiliki dua pilihan. Bila kondisi tidak benar (false), maka blok kode else akan dikerjakan.&lt;br /&gt;&lt;br /&gt;Ingat! sturktur IF itu hanya akan mengerjakan kode yang ada di dalamnya bila kondisinya true.&lt;br /&gt;&lt;pre&gt;if (&lt;i&gt;suatu kondisi&lt;/i&gt;) {&lt;br /&gt;&amp;nbsp; &amp;nbsp; // kerjakan sesuatu&lt;br /&gt;&amp;nbsp; &amp;nbsp; // kerjakan yang ini juga&lt;br /&gt;&amp;nbsp; &amp;nbsp; // kerja terus &lt;br /&gt;}&lt;br /&gt;&lt;/pre&gt;Sementara IF-ELSE, memiliki alternatif tugas lain, bila kondisi tidak true (false).&lt;br /&gt;&lt;pre&gt;if (&lt;i&gt;suatu kondisi&lt;/i&gt;) {&lt;br /&gt;&amp;nbsp; &amp;nbsp; // kerjakan sesuatu&lt;br /&gt;&amp;nbsp; &amp;nbsp; // kerjakan yang ini juga&lt;br /&gt;&amp;nbsp; &amp;nbsp; // kerja terus &lt;br /&gt;} else {&lt;br /&gt;&amp;nbsp;&amp;nbsp; // kalau begitu, kerjakan yang ini&lt;br /&gt;&amp;nbsp;&amp;nbsp; // yang ini boleh juga &lt;br /&gt;}&lt;/pre&gt;&lt;i&gt;Suatu kondisi&lt;/i&gt; dapat kita isi dengan operasi yang menghasilkan true dan false. Sebagai contoh, silahkan simak kode berikut ini:&lt;br /&gt;&lt;br /&gt;Menggunakan &lt;a href=&#34;http://petanikode.blogspot.com/2015/10/pemrograman-java-di-lab-6-mengenal.html&#34; target=&#34;_blank&#34;&gt;operator relasi&lt;/a&gt; sama dengan (==) dan &lt;a href=&#34;http://petanikode.blogspot.co.id/2015/10/pemrograman-java-di-lab-6-mengenal.html&#34; target=&#34;_blank&#34;&gt;operator logika&lt;/a&gt; &lt;i&gt;dan&lt;/i&gt; (&amp;amp;&amp;amp;)&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;public class Razia {&lt;br /&gt;    public static void main(String[] args) {&lt;br /&gt;        boolean SIM = false;&lt;br /&gt;        boolean STNK = true;&lt;br /&gt;        &lt;br /&gt;        if(SIM == true &amp;amp;&amp;amp; STNK == true){&lt;br /&gt;            System.out.println(&amp;ldquo;Tidak ditilang!&amp;rdquo;);&lt;br /&gt;        } else {&lt;br /&gt;            System.out.println(&amp;ldquo;Anda ditilang!&amp;rdquo;);&lt;br /&gt;        }&lt;br /&gt;        &lt;br /&gt;    }&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Menggunakan operator relasi lebih besar samadengan (&amp;gt;=)&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;public class MinumKopi {&lt;br /&gt;    public static void main(String[] args) {&lt;br /&gt;        &lt;br /&gt;        int umur = 15;&lt;br /&gt;        &lt;br /&gt;        if (umur &amp;gt;= 18){&lt;br /&gt;            System.out.println(&amp;ldquo;Boleh minum Kopi!&amp;rdquo;);&lt;br /&gt;        } else {&lt;br /&gt;            System.out.println(&amp;ldquo;Tidak boleh minum kopi!&amp;rdquo;);&lt;br /&gt;        }&lt;br /&gt;        &lt;br /&gt;    }&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;&lt;h2&gt;Studi kasus: Diskon&lt;/h2&gt;Sebuah toko buku memberikan diskon 10% bila belanjaannya lebih dari Rp 100.000. kasirnya merasa kesulitan menghitung total pembayaran meski menggunakan kalkuklator. Setiap kali pembeli membayar, si kasir harus menulis ulang rumus perhitungan diskonnya. Proses pembayaran pun menjadi lama. Antrian orang yang akan membayar semakin panjang. Kasirnya pusing, karena tidak bisa melayani dengan baik. Ternyata diskon membawa masalah bagi toko buku ini.&lt;br /&gt;&lt;br /&gt;Solusi dari permasalahan ini ialah menggunakan sebuah program yang mampu menghitung total pembayaran dan diskon dengan cepat. Sebagai programer, silahkan anda buatkan program untuk memecahkan masalah ini. Contoh hasil outputnya akan seperti di bawah ini:&lt;br /&gt;&lt;br /&gt;Jika diinputkan Rp 82.000&lt;br /&gt;&lt;div class=&#34;separator&#34;&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-WICSYlSeBNI/ViysYLSzRvI/AAAAAAAACEg/WW1CijP3uJg/s1600/input%2B85000%2Bprogram%2Bdiskon%2Btoko%2Bdengan%2Bjava.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://3.bp.blogspot.com/-WICSYlSeBNI/ViysYLSzRvI/AAAAAAAACEg/WW1CijP3uJg/s640/input%2B85000%2Bprogram%2Bdiskon%2Btoko%2Bdengan%2Bjava.png&#34; width=&#34;100%&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&amp;nbsp;Maka hasil outputnya:&lt;br /&gt;&lt;div class=&#34;separator&#34;&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-WZlbQYTBecI/ViysWvDXTJI/AAAAAAAACEY/xW_taHrDbX8/s1600/hasil%2Boutput%2Bprogram%2Bdiskon%2Btoko.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://3.bp.blogspot.com/-WZlbQYTBecI/ViysWvDXTJI/AAAAAAAACEY/xW_taHrDbX8/s640/hasil%2Boutput%2Bprogram%2Bdiskon%2Btoko.png&#34; width=&#34;100%&#34; /&gt;&lt;/a&gt;&lt;/div&gt;Bila diinputkan Rp 120.000&lt;br /&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-8Gl7OpUBEKQ/ViytR3xQ4ZI/AAAAAAAACEo/Fs3QQKIiHnM/s1600/input%2B120000%2Bprogram%2Bdiskon%2Btoko%2Bdengan%2Bjava.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://3.bp.blogspot.com/-8Gl7OpUBEKQ/ViytR3xQ4ZI/AAAAAAAACEo/Fs3QQKIiHnM/s640/input%2B120000%2Bprogram%2Bdiskon%2Btoko%2Bdengan%2Bjava.png&#34; width=&#34;100%&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Maka hasil outputnya:&lt;br /&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-1Np0q6R-QTw/ViytSBAE8UI/AAAAAAAACEs/jYEN9au7FBM/s1600/hasil%2Boutput%2Bsetelah%2Bmendapatkan%2Bdiskon.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://1.bp.blogspot.com/-1Np0q6R-QTw/ViytSBAE8UI/AAAAAAAACEs/jYEN9au7FBM/s640/hasil%2Boutput%2Bsetelah%2Bmendapatkan%2Bdiskon.png&#34; width=&#34;100%&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Bagaimana? &amp;hellip; Silahkan kirimkan kode atau tangkapan layar outputnya melalui kotak komentar di bawah!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pemrograman java di lab (8): Menggunakan pangkat</title>
      <link>http://petanikode.com/pemrograman-java-di-lab-8-menggunakan-pangkat/</link>
      <pubDate>Sun, 18 Oct 2015 08:00:00 +0000</pubDate>
      
      <guid>http://petanikode.com/pemrograman-java-di-lab-8-menggunakan-pangkat/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Pada contoh kasus &lt;a href=&#34;http://petanikode.blogspot.com/2015/10/pemrograman-java-di-lab-2-algoritma.html&#34; target=&#34;_blank&#34;&gt;program luas lingkaran&lt;/a&gt; kemarin, kita menggunakan pangkat dua untuk menghitung luas lingkaran. Pangkat dua dapat ditulis dengan membuat perkalian dengan variabel atau bilangan yang akan dipangkatkan dua. Contoh, &lt;code&gt;r&lt;sup&gt;2&lt;/sup&gt;&lt;/code&gt; dapat ditulis &lt;code&gt;r*r&lt;/code&gt;. Tapi, bagaiamana kalau pangkatnya banyak? misal &lt;code&gt;4&lt;sup&gt;112&lt;/sup&gt;&lt;/code&gt;. Tidak mungkin kita akan melakukan perkalian sebanyak itu dalam kode. Oleh karena itu, kita membutuhkan fungsi pangkat untuk menghitungnya.&lt;br /&gt;&lt;br /&gt;Java sudah menyediakan fungsi pangkat yang dapat digunakan kapan saja. Fungsi ini memiliki dua parameter, yaitu bilangan yang akan dipangkatkan dan pangkatnya.&lt;br /&gt;&lt;pre&gt;Math.pow(bilangan, pangkat);&lt;/pre&gt;Contoh program, silahkan buat kelas baru bernama &lt;i&gt;Pangkat&lt;/i&gt; di paket &lt;i&gt;pertemuan3&lt;/i&gt;. Kemudian ikuti kode berikut:&lt;br /&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-Xh3_ALdPrug/ViJaw7ln3CI/AAAAAAAACDg/J4YeXknsEyc/s1600/program%2Bpemangkatan%2Bbilangan%2Bdi%2Bjava.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-Xh3_ALdPrug/ViJaw7ln3CI/AAAAAAAACDg/J4YeXknsEyc/s1600/program%2Bpemangkatan%2Bbilangan%2Bdi%2Bjava.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Kode program di atas, akan menghasilkan output: 32, karena 2&lt;sup&gt;5&lt;/sup&gt; akan menghasilkan 32.&lt;br /&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-LliT4M85udU/ViJbVl3k9CI/AAAAAAAACDo/5EEkMlk4bLk/s1600/output%2Bprogram%2Bpemangkatan%2Bdi%2Bjava.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://4.bp.blogspot.com/-LliT4M85udU/ViJbVl3k9CI/AAAAAAAACDo/5EEkMlk4bLk/s1600/output%2Bprogram%2Bpemangkatan%2Bdi%2Bjava.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pemrograman java di lab (7): Mengenal JOptionPane dan operator kondisi</title>
      <link>http://petanikode.com/pemrograman-java-di-lab-7-mengenal-joptionpane-dan-operator-kondisi/</link>
      <pubDate>Sat, 17 Oct 2015 21:34:00 +0000</pubDate>
      
      <guid>http://petanikode.com/pemrograman-java-di-lab-7-mengenal-joptionpane-dan-operator-kondisi/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Sebelumnya, kita telah &lt;a href=&#34;http://petanikode.blogspot.com/2015/10/pemrograman-java-di-lab-6-mengenal.html&#34; target=&#34;_blank&#34;&gt;berkenalan dengan operator&lt;/a&gt;. Sekarang kita akan coba mengenal &lt;i&gt;JOptionPane&lt;/i&gt; dan operator kondisi. Pembahasan sengaja dibuat terpisah, agar pembahasan operator tidak terlalu panjang.&lt;br /&gt;&lt;h2&gt;JOptionPane&lt;/h2&gt;&lt;i&gt;JOptionPane&lt;/i&gt; merupakan sebuah kelas yang menyediakan jendela dialog sebagai antarmuka. &lt;i&gt;JOptionPane&lt;/i&gt; bisa digunakan untuk mendapatkan input, menampilkan informasi, menampilkan pesan error, menampilkan dialog konfirmasi, dan sebagainya.&lt;br /&gt;&lt;br /&gt;Sebelum menggunakan &lt;i&gt;JOptionPane&lt;/i&gt;, kita perlu mengimpornya ke dalam program:&lt;br /&gt;&lt;pre&gt;import javax.swing.JOptionPane;&lt;/pre&gt;Terdapat empat fungsi atau metode yang sering dipakai:&lt;br /&gt;&lt;ol&gt;&lt;li&gt;&lt;code&gt;showConfirmDialog()&lt;/code&gt; : untuk menampilkan dialog konfirmasi&lt;/li&gt;&lt;li&gt;&lt;code&gt;showInputDialog()&lt;/code&gt; : untuk menampilkan dialog input&lt;/li&gt;&lt;li&gt;&lt;code&gt;showMessageDialog()&lt;/code&gt; : untuk menampilkan pesan/informasi&lt;/li&gt;&lt;li&gt;&lt;code&gt;showOptionDialog()&lt;/code&gt; : untuk menampilkan dialog pilihan&lt;/li&gt;&lt;/ol&gt;&lt;h2&gt;Operator Kondisi&lt;/h2&gt;Operator kondisi merupakan sebuah operator khusus untuk memeriksa kondisi tertentu. Bisa dibilang, oprator ini termasuk ke dalam operator logika atau operator untuk membuat implikasi. Operator ini disimbolkan dengan tanda tanya (?). Struktur operator kondisi:&lt;br /&gt;&lt;pre&gt;(kondisi) ? benar : salah;&lt;/pre&gt;Kalau kondisi bernilai &lt;code&gt;true&lt;/code&gt;, maka kode &lt;code&gt;benar&lt;/code&gt; akan dikerjakan. Tapi, kalau tidak atau bernilai &lt;code&gt;false&lt;/code&gt;, maka kode &lt;code&gt;salah&lt;/code&gt; akan dikerjkana.&lt;br /&gt;&lt;br /&gt;Sebagai contoh, kita akan membuat sebuah program baru dengan bahan &lt;i&gt;JOptionPane&lt;/i&gt; dan operator kondisi. Buatlah kelas baru bernama &lt;i&gt;OperatorKondisi&lt;/i&gt; di paket &lt;i&gt;pertemuan3&lt;/i&gt;. Kemudian ikuti kode berikut ini:&lt;br /&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-pwf8JhORFbs/ViJKacf93QI/AAAAAAAACC0/Sbw711AF5j4/s1600/kode%2Bprogram%2Boperator%2Bkondisi%2Bdan%2BJOptionPane.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-pwf8JhORFbs/ViJKacf93QI/AAAAAAAACC0/Sbw711AF5j4/s1600/kode%2Bprogram%2Boperator%2Bkondisi%2Bdan%2BJOptionPane.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Program di atas, akan menghasilkan output seperti berikut ini:&lt;br /&gt;Dialog input,&lt;br /&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-_0gjBZCAd0M/ViJL3GgzPkI/AAAAAAAACDQ/z3dkpg_k4dA/s1600/dialog%2Binput%2BJOptionPane.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://3.bp.blogspot.com/-_0gjBZCAd0M/ViJL3GgzPkI/AAAAAAAACDQ/z3dkpg_k4dA/s1600/dialog%2Binput%2BJOptionPane.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;dialog output,&lt;br /&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-azlCzuPesBs/ViJLdsIkSPI/AAAAAAAACDI/6Fi73g6hFXQ/s1600/outpu%2Batau%2Bmessage%2Bdialog%2BJOptionPane.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-azlCzuPesBs/ViJLdsIkSPI/AAAAAAAACDI/6Fi73g6hFXQ/s1600/outpu%2Batau%2Bmessage%2Bdialog%2BJOptionPane.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Catatan&lt;/b&gt;: Dialog input &lt;i&gt;JOptionPane&lt;/i&gt; sama seperti &lt;a href=&#34;http://petanikode.blogspot.com/2015/10/pemrograman-java-di-lab-4-berkenalan.html&#34; target=&#34;_blank&#34;&gt;Scanner&lt;/a&gt;. Perbedaanya, Scanner dipkai untuk antarmuka teks atau &lt;i&gt;console&lt;/i&gt;. Sedangkan Dialog input &lt;i&gt;JOptionPane&lt;/i&gt; dipakai untuk antarmuka grafis (GUI). Pengguna komputer lebih senang dengan antarmuka grafis, karena mudah digunakan. Sedangkan antarmuka teks, sangat jarang dipakai pada pengguna komputer umum.&lt;br /&gt;&lt;br /&gt;Referensi:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/javase/7/docs/api/javax/swing/JOptionPane.html&#34;&gt;https://docs.oracle.com/javase/7/docs/api/javax/swing/JOptionPane.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;http://www.herongyang.com/Swing/JOptionPane-Display-Option-Dialog-Box.html&#34;&gt;http://www.herongyang.com/Swing/JOptionPane-Display-Option-Dialog-Box.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/javase/tutorial/java/nutsandbolts/op2.html&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://docs.oracle.com/javase/tutorial/java/nutsandbolts/op2.html&#34;&gt;https://docs.oracle.com/javase/tutorial/java/nutsandbolts/op2.html&lt;/a&gt; &lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&amp;mdash;&lt;br /&gt;Sampai di sini, ada yang mau ditanyakan? siahkan kirim melalui komentar!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>