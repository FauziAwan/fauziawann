<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Lab.Java on Petani Kode — Programmer Pengguna Linux</title>
    <link>https://petanikode.com/topik/lab.java/index.xml</link>
    <description>Recent content in Lab.Java on Petani Kode — Programmer Pengguna Linux</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>id-id</language>
    <copyright>Copyright (c) 2017, Petani Kode; all rights reserved.</copyright>
    <atom:link href="https://petanikode.com/topik/lab.java/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Pemrograman Java di Lab (16): Fungsi dan Method</title>
      <link>https://petanikode.com/pemrograman-java-di-lab-16-fungsi-dan-method/</link>
      <pubDate>Fri, 22 Apr 2016 20:31:00 +0000</pubDate>
      
      <guid>https://petanikode.com/pemrograman-java-di-lab-16-fungsi-dan-method/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Pemrograman Java di Lab Petani Kode&#34; src=&#34;https://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; /&gt;&lt;br /&gt;Fungsi dan &lt;i&gt;Method&lt;/i&gt; merupakan bagian dari program yang bertugas melakukan operasi tertentu. Pada teknik pemrograman prosedural seperti pemrograman Pascal, C, C++, PHP, dsb. Program dibentuk dari kumpulan fungsi atau prosedur yang saling bekerja sama. Fungsi-fungsi tersebut akan dipanggil pada fungsi &lt;code&gt;main&lt;/code&gt;. Fungsi &lt;code&gt;main&lt;/code&gt; merupakan fungsi utama dalam sebuah program.&lt;br /&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-LMvdR9YOW-U/VxnanA7PSJI/AAAAAAAACwE/rw65mXoukjoYuJ9yaeo8ershV1L82ixggCK4B/s1600/Program%2BKalkulator%2Bdibuat%2Bdari%2Bsekumpulan%2Bfungsi.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img alt=&#34;Ilustrasi komponen program yang dibangun dari fungsi-fungsi&#34; border=&#34;0&#34; src=&#34;https://3.bp.blogspot.com/-LMvdR9YOW-U/VxnanA7PSJI/AAAAAAAACwE/rw65mXoukjoYuJ9yaeo8ershV1L82ixggCK4B/s1600/Program%2BKalkulator%2Bdibuat%2Bdari%2Bsekumpulan%2Bfungsi.png&#34; title=&#34;&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Pada pemrograman Java, Fungsi atau prosedur dikenal dengan method (metode). Java sepenuhnya menerapkan paradigma pemrograman berorientasi objek (PBO), dalam bahasa inggris disebut OOP &lt;i&gt;(Object Oriented Programming)&lt;/i&gt;.&lt;br /&gt;&lt;br /&gt;Pada pertemuan pertama praktikum ini, kita memandang &lt;i&gt;class&lt;/i&gt; Java sebagai sebuah program. Di dalam kelas java tedapat atribut dan &lt;i&gt;method&lt;/i&gt;. Atribut merupakan sebuah variabel dan &lt;i&gt;method&lt;/i&gt; merupakan sebuah fungsi untuk melakukan operasi tertentu terhadap atribut.&lt;br /&gt;&lt;h2 id=&#34;membuat-fungsi-atau-method&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#membuat-fungsi-atau-method&#34; name=&#34;membuat-fungsi-atau-method&#34;&gt;&lt;/a&gt;Membuat Fungsi atau Method&lt;/h2&gt;Fungsi atau method, harus dibuat di dalam &lt;i&gt;class&lt;/i&gt;, format dasarnya:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;static TypeDataKembalian namaMethod(){&lt;br /&gt;    // statemen atau kode fungsi&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Contoh:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;static void ucapSalam(){&lt;br /&gt;    System.out.println(&amp;ldquo;Assalamualaykum&amp;rdquo;);&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Kita menggunakan kata kunci &lt;code&gt;static&lt;/code&gt; agar fungsi dapat dipanggil di dalam fungsi &lt;i&gt;main&lt;/i&gt;. Tipe data &lt;code&gt;void&lt;/code&gt; artinya kosong, fungsi tersebut tidak mengebalikan nilai apa-apa.&lt;br /&gt;&lt;h2 id=&#34;memanggil-fungsi&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#memanggil-fungsi&#34; name=&#34;memanggil-fungsi&#34;&gt;&lt;/a&gt;Memanggil Fungsi&lt;/h2&gt;Fungsi dapat dipanggil dari fungsi &lt;code&gt;main&lt;/code&gt; atau dari fungsi yang lain. Contoh pemanggilan fungsi dalam dalam funsgi &lt;code&gt;main&lt;/code&gt;.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;public static void main(String[] args){&lt;br /&gt;    ucapSalam();&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Akan menghasilkan output:&lt;br /&gt;&lt;pre&gt;&lt;code&gt;Assalamualaykum&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;fungsi-dengan-parameter&#34;&gt;Fungsi dengan Parameter&lt;/h2&gt;Parameter merupakan variabel yang akan diolah atau diproses di dalam fungsi. Contoh fungsi yang memiliki parameter:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;static void ucapin(String ucapan){&lt;br /&gt;    System.out.println(ucapan);&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Pemanggilannya:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;ucapin(&amp;ldquo;Hallo!&amp;rdquo;);&lt;br /&gt;ucapin(&amp;ldquo;Selamat datang di pemrograman Java&amp;rdquo;);&lt;br /&gt;ucapin(&amp;ldquo;Saya kira ini bagian terakhir&amp;rdquo;);&lt;br /&gt;ucapin(&amp;ldquo;Sampai jumpa lagi, ya!&amp;rdquo;);&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Hasil outputnya:&lt;br /&gt;&lt;pre&gt;&lt;code&gt;Hallo!&lt;br /&gt;Selamat datang di pemrograman Java&lt;br /&gt;Saya kira ini bagian terakhir&lt;br /&gt;Sampai jumpa lagi, ya!&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Tipe data dari parameter harus dituliskan. Untuk parameter yang lebih dari satu, dipisah dengan tanda koma (&lt;code&gt;,&lt;/code&gt;). Contoh:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;static void ucapin(String ucapan, String kepada){&lt;br /&gt;    //&amp;hellip;&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div id=&#34;fungsi-yang-mengembalikan-nilai&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#fungsi-yang-mengembalikan-nilai&#34; name=&#34;fungsi-yang-mengembalikan-nilai&#34;&gt;&lt;/a&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-3LilJsKfgRM/VxnbVspOUDI/AAAAAAAACwQ/t6RCz2U4PJg8lvvkBmexayJWHOnsaEbwQCK4B/s1600/Contoh%2BFungsi%2Bdi%2BJava.png&#34;&gt;&lt;img alt=&#34;Contoh Fungsi pada Java&#34; border=&#34;0&#34; src=&#34;https://4.bp.blogspot.com/-3LilJsKfgRM/VxnbVspOUDI/AAAAAAAACwQ/t6RCz2U4PJg8lvvkBmexayJWHOnsaEbwQCK4B/s1600/Contoh%2BFungsi%2Bdi%2BJava.png&#34; title=&#34;&#34; /&gt;&lt;/a&gt; &lt;/div&gt;&lt;h2 id=&#34;fungsi-yang-mengembalikan-nilai&#34;&gt;Fungsi yang Mengembalikan Nilai&lt;/h2&gt;Setelah data yang diinputkan melalui parameter diproses, fungsi harus mengembalikan nilai agar dapat diolah di proses selanjutnya. Pengembalian nilai pada fungsi menggunakan kata kunci &lt;code&gt;return&lt;/code&gt;. Jangan lupa juga untuk menuliskan tipe data kembaliannya. Contoh fungsi yang mengembalikan nilai:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;static int luasPersegi(int sisi){&lt;br /&gt;    int luas = sisi * sisi;&lt;br /&gt;    return luas;&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Fungsi &lt;code&gt;luasPersegi()&lt;/code&gt; akan mengembalikan nilai berupa &lt;i&gt;integer&lt;/i&gt; (&lt;code&gt;int&lt;/code&gt;) dari hasil rumus &lt;code&gt;luas&lt;/code&gt; (persegi). Contoh pemanggilanya:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;System.out.println(&amp;ldquo;Luas Persegi dengan panjang sisi 5 adalah &amp;rdquo; + luasPersegi(5));&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Hasil Output:&lt;br /&gt;&lt;pre&gt;&lt;code&gt;Luas Persegi dengan panjang sisi 5 adalah 25&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;pemanggilan-fungsi-di-fungsi-lain&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#pemanggilan-fungsi-di-fungsi-lain&#34; name=&#34;pemanggilan-fungsi-di-fungsi-lain&#34;&gt;&lt;/a&gt;Pemanggilan Fungsi di Fungsi Lain&lt;/h2&gt;Fungsi-fungsi dapat saling memanggil untuk memproses data. Contoh, sebuah program Kalkulator Bangun Ruang memiliki fungsi-fungsi: &lt;code&gt;luasPersegi()&lt;/code&gt;, &lt;code&gt;luasPersegiPanjang()&lt;/code&gt;, &lt;code&gt;luasSegitiga()&lt;/code&gt;, &lt;code&gt;luasBalok()&lt;/code&gt;, &lt;code&gt;luasKubus()&lt;/code&gt; dsb. Fungsi-fungsi tersebut dapat saling membantu, contoh fungsi &lt;code&gt;luasKubus()&lt;/code&gt; membutuhkan fungsi &lt;code&gt;luasPersegi()&lt;/code&gt;.&lt;br /&gt;Rumus&lt;br /&gt;&lt;pre&gt;&lt;code&gt;Luas Kubus = 6 * luasPersegi;&lt;br /&gt;Luas Persegi = sisi * sisi;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Maka Bentuk programnya bisa seperti ini:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;public class BangunRuang {&lt;br /&gt;&lt;br /&gt;    public static void main(String[] args) {&lt;br /&gt;&lt;br /&gt;        int s = 12;&lt;br /&gt;        int luas = luasKubus(s);&lt;br /&gt;&lt;br /&gt;        System.out.println(luas);&lt;br /&gt;&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    static int luasPersegi(int sisi){&lt;br /&gt;        return sisi * sisi;&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    static int luasKubus(int sisi){&lt;br /&gt;        return 6 * luasPersegi(sisi);&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Hasil output&lt;br /&gt;&lt;pre&gt;&lt;code&gt;864&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Itulah beberapa hal seputar fungsi atau method di Java. Jika anda membaca dan mengikuti serial artikel ini dari &lt;a href=&#34;http://www.petanikode.com/2015/10/pemrograman-java-di-lab-1-berkenalan.html&#34; target=&#34;_blank&#34;&gt;awal&lt;/a&gt;, saya kira anda sudah menguasai teknik dasar pemrograman java. Sekian dulu, mungkin artikel ini masih punya lanjutan. Ditunggu saja, ya!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pemrograman java di lab (8): Menggunakan pangkat</title>
      <link>https://petanikode.com/pemrograman-java-di-lab-8-menggunakan-pangkat/</link>
      <pubDate>Sun, 18 Oct 2015 08:00:00 +0000</pubDate>
      
      <guid>https://petanikode.com/pemrograman-java-di-lab-8-menggunakan-pangkat/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Pada contoh kasus &lt;a href=&#34;http://petanikode.blogspot.com/2015/10/pemrograman-java-di-lab-2-algoritma.html&#34; target=&#34;_blank&#34;&gt;program luas lingkaran&lt;/a&gt; kemarin, kita menggunakan pangkat dua untuk menghitung luas lingkaran. Pangkat dua dapat ditulis dengan membuat perkalian dengan variabel atau bilangan yang akan dipangkatkan dua. Contoh, &lt;code&gt;r&lt;sup&gt;2&lt;/sup&gt;&lt;/code&gt; dapat ditulis &lt;code&gt;r*r&lt;/code&gt;. Tapi, bagaiamana kalau pangkatnya banyak? misal &lt;code&gt;4&lt;sup&gt;112&lt;/sup&gt;&lt;/code&gt;. Tidak mungkin kita akan melakukan perkalian sebanyak itu dalam kode. Oleh karena itu, kita membutuhkan fungsi pangkat untuk menghitungnya.&lt;br /&gt;&lt;br /&gt;Java sudah menyediakan fungsi pangkat yang dapat digunakan kapan saja. Fungsi ini memiliki dua parameter, yaitu bilangan yang akan dipangkatkan dan pangkatnya.&lt;br /&gt;&lt;pre&gt;Math.pow(bilangan, pangkat);&lt;/pre&gt;Contoh program, silahkan buat kelas baru bernama &lt;i&gt;Pangkat&lt;/i&gt; di paket &lt;i&gt;pertemuan3&lt;/i&gt;. Kemudian ikuti kode berikut:&lt;br /&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-Xh3_ALdPrug/ViJaw7ln3CI/AAAAAAAACDg/J4YeXknsEyc/s1600/program%2Bpemangkatan%2Bbilangan%2Bdi%2Bjava.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-Xh3_ALdPrug/ViJaw7ln3CI/AAAAAAAACDg/J4YeXknsEyc/s1600/program%2Bpemangkatan%2Bbilangan%2Bdi%2Bjava.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Kode program di atas, akan menghasilkan output: 32, karena 2&lt;sup&gt;5&lt;/sup&gt; akan menghasilkan 32.&lt;br /&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-LliT4M85udU/ViJbVl3k9CI/AAAAAAAACDo/5EEkMlk4bLk/s1600/output%2Bprogram%2Bpemangkatan%2Bdi%2Bjava.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://4.bp.blogspot.com/-LliT4M85udU/ViJbVl3k9CI/AAAAAAAACDo/5EEkMlk4bLk/s1600/output%2Bprogram%2Bpemangkatan%2Bdi%2Bjava.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pemrograman java di lab (7): Mengenal JOptionPane dan operator kondisi</title>
      <link>https://petanikode.com/pemrograman-java-di-lab-7-mengenal-joptionpane-dan-operator-kondisi/</link>
      <pubDate>Sat, 17 Oct 2015 21:34:00 +0000</pubDate>
      
      <guid>https://petanikode.com/pemrograman-java-di-lab-7-mengenal-joptionpane-dan-operator-kondisi/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Sebelumnya, kita telah &lt;a href=&#34;http://petanikode.blogspot.com/2015/10/pemrograman-java-di-lab-6-mengenal.html&#34; target=&#34;_blank&#34;&gt;berkenalan dengan operator&lt;/a&gt;. Sekarang kita akan coba mengenal &lt;i&gt;JOptionPane&lt;/i&gt; dan operator kondisi. Pembahasan sengaja dibuat terpisah, agar pembahasan operator tidak terlalu panjang.&lt;br /&gt;&lt;h2&gt;JOptionPane&lt;/h2&gt;&lt;i&gt;JOptionPane&lt;/i&gt; merupakan sebuah kelas yang menyediakan jendela dialog sebagai antarmuka. &lt;i&gt;JOptionPane&lt;/i&gt; bisa digunakan untuk mendapatkan input, menampilkan informasi, menampilkan pesan error, menampilkan dialog konfirmasi, dan sebagainya.&lt;br /&gt;&lt;br /&gt;Sebelum menggunakan &lt;i&gt;JOptionPane&lt;/i&gt;, kita perlu mengimpornya ke dalam program:&lt;br /&gt;&lt;pre&gt;import javax.swing.JOptionPane;&lt;/pre&gt;Terdapat empat fungsi atau metode yang sering dipakai:&lt;br /&gt;&lt;ol&gt;&lt;li&gt;&lt;code&gt;showConfirmDialog()&lt;/code&gt; : untuk menampilkan dialog konfirmasi&lt;/li&gt;&lt;li&gt;&lt;code&gt;showInputDialog()&lt;/code&gt; : untuk menampilkan dialog input&lt;/li&gt;&lt;li&gt;&lt;code&gt;showMessageDialog()&lt;/code&gt; : untuk menampilkan pesan/informasi&lt;/li&gt;&lt;li&gt;&lt;code&gt;showOptionDialog()&lt;/code&gt; : untuk menampilkan dialog pilihan&lt;/li&gt;&lt;/ol&gt;&lt;h2&gt;Operator Kondisi&lt;/h2&gt;Operator kondisi merupakan sebuah operator khusus untuk memeriksa kondisi tertentu. Bisa dibilang, oprator ini termasuk ke dalam operator logika atau operator untuk membuat implikasi. Operator ini disimbolkan dengan tanda tanya (?). Struktur operator kondisi:&lt;br /&gt;&lt;pre&gt;(kondisi) ? benar : salah;&lt;/pre&gt;Kalau kondisi bernilai &lt;code&gt;true&lt;/code&gt;, maka kode &lt;code&gt;benar&lt;/code&gt; akan dikerjakan. Tapi, kalau tidak atau bernilai &lt;code&gt;false&lt;/code&gt;, maka kode &lt;code&gt;salah&lt;/code&gt; akan dikerjkana.&lt;br /&gt;&lt;br /&gt;Sebagai contoh, kita akan membuat sebuah program baru dengan bahan &lt;i&gt;JOptionPane&lt;/i&gt; dan operator kondisi. Buatlah kelas baru bernama &lt;i&gt;OperatorKondisi&lt;/i&gt; di paket &lt;i&gt;pertemuan3&lt;/i&gt;. Kemudian ikuti kode berikut ini:&lt;br /&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-pwf8JhORFbs/ViJKacf93QI/AAAAAAAACC0/Sbw711AF5j4/s1600/kode%2Bprogram%2Boperator%2Bkondisi%2Bdan%2BJOptionPane.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-pwf8JhORFbs/ViJKacf93QI/AAAAAAAACC0/Sbw711AF5j4/s1600/kode%2Bprogram%2Boperator%2Bkondisi%2Bdan%2BJOptionPane.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Program di atas, akan menghasilkan output seperti berikut ini:&lt;br /&gt;Dialog input,&lt;br /&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-_0gjBZCAd0M/ViJL3GgzPkI/AAAAAAAACDQ/z3dkpg_k4dA/s1600/dialog%2Binput%2BJOptionPane.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://3.bp.blogspot.com/-_0gjBZCAd0M/ViJL3GgzPkI/AAAAAAAACDQ/z3dkpg_k4dA/s1600/dialog%2Binput%2BJOptionPane.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;dialog output,&lt;br /&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-azlCzuPesBs/ViJLdsIkSPI/AAAAAAAACDI/6Fi73g6hFXQ/s1600/outpu%2Batau%2Bmessage%2Bdialog%2BJOptionPane.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-azlCzuPesBs/ViJLdsIkSPI/AAAAAAAACDI/6Fi73g6hFXQ/s1600/outpu%2Batau%2Bmessage%2Bdialog%2BJOptionPane.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Catatan&lt;/b&gt;: Dialog input &lt;i&gt;JOptionPane&lt;/i&gt; sama seperti &lt;a href=&#34;http://petanikode.blogspot.com/2015/10/pemrograman-java-di-lab-4-berkenalan.html&#34; target=&#34;_blank&#34;&gt;Scanner&lt;/a&gt;. Perbedaanya, Scanner dipkai untuk antarmuka teks atau &lt;i&gt;console&lt;/i&gt;. Sedangkan Dialog input &lt;i&gt;JOptionPane&lt;/i&gt; dipakai untuk antarmuka grafis (GUI). Pengguna komputer lebih senang dengan antarmuka grafis, karena mudah digunakan. Sedangkan antarmuka teks, sangat jarang dipakai pada pengguna komputer umum.&lt;br /&gt;&lt;br /&gt;Referensi:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/javase/7/docs/api/javax/swing/JOptionPane.html&#34;&gt;https://docs.oracle.com/javase/7/docs/api/javax/swing/JOptionPane.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;http://www.herongyang.com/Swing/JOptionPane-Display-Option-Dialog-Box.html&#34;&gt;http://www.herongyang.com/Swing/JOptionPane-Display-Option-Dialog-Box.html&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://docs.oracle.com/javase/tutorial/java/nutsandbolts/op2.html&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://docs.oracle.com/javase/tutorial/java/nutsandbolts/op2.html&#34;&gt;https://docs.oracle.com/javase/tutorial/java/nutsandbolts/op2.html&lt;/a&gt; &lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&amp;mdash;&lt;br /&gt;Sampai di sini, ada yang mau ditanyakan? siahkan kirim melalui komentar!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>