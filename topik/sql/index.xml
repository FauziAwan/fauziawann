<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sql on Petani Kode — Programmer Pengguna Linux</title>
    <link>https://www.petanikode.com/topik/sql/index.xml</link>
    <description>Recent content in Sql on Petani Kode — Programmer Pengguna Linux</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>id-id</language>
    <copyright>Copyright (c) 2017, Petani Kode; all rights reserved.</copyright>
    <atom:link href="https://www.petanikode.com/topik/sql/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Belajar MongoDB: Pengenalan Dasar MongoDB untuk Pemula </title>
      <link>https://www.petanikode.com/tutorial-dasar-mongodb/</link>
      <pubDate>Wed, 28 Jun 2017 08:15:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/tutorial-dasar-mongodb/</guid>
      <description>

&lt;p&gt;Ada beberapa kekurangan dalam database SQL yang pernah saya temukan, seperti
skema database yang kaku &lt;em&gt;(fixed)&lt;/em&gt;, susah membuat query untuk tabel dengan
relasi yang kompleks, susah diperbesar sekalanya, dsb.&lt;/p&gt;

&lt;p&gt;Database NoSQL &lt;em&gt;(Not Only SQL)&lt;/em&gt; hadir untuk menutupi kekurangan-kekurangan tersebut.
Selain itu, NoSQL sudah menjadi tuntutan teknologi yang harus dipelajari dalam
pengembangan software modern masa kini.&lt;/p&gt;

&lt;p&gt;Contohnya, sekarang lagi populer yang namanya MEAN stack (MongoDB, ExpressJs, AngularJS,
dan NodeJS).&lt;/p&gt;

&lt;p&gt;Pada artikel ini, kita akan belajar MongoDB yang
merupakan salah satu database NoSQL paling populer.&lt;/p&gt;

&lt;h2 id=&#34;apa-itu-mongodb&#34;&gt;Apa itu MongoDB?&lt;/h2&gt;

&lt;p&gt;MongoDB adalah salah satu jenis database NoSQL yang berbasis
dokumen dengan fomat JSON.&lt;/p&gt;

&lt;p&gt;Pada database SQL, data disimpan dalam bentuk tabel.
Sedangkan pada MongoDB data disimpan dalam bentuk dokumen dengan format JSON.&lt;/p&gt;

&lt;p&gt;Contoh data di MongoDB:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
   &amp;quot;_id&amp;quot; : ObjectId(&amp;quot;54c955492b7c8eb21818bd09&amp;quot;),
   &amp;quot;alamat&amp;quot; : {
      &amp;quot;street&amp;quot; : &amp;quot;2 Avenue&amp;quot;,
      &amp;quot;zipcode&amp;quot; : &amp;quot;10075&amp;quot;,
      &amp;quot;building&amp;quot; : &amp;quot;1480&amp;quot;,
      &amp;quot;coord&amp;quot; : [ -73.9557413, 40.7720266 ]
   },
   &amp;quot;borough&amp;quot; : &amp;quot;Manhattan&amp;quot;,
   &amp;quot;cuisine&amp;quot; : &amp;quot;Italian&amp;quot;,
   &amp;quot;grades&amp;quot; : [
      {
         &amp;quot;date&amp;quot; : ISODate(&amp;quot;2014-10-01T00:00:00Z&amp;quot;),
         &amp;quot;grade&amp;quot; : &amp;quot;A&amp;quot;,
         &amp;quot;score&amp;quot; : 11
      },
      {
         &amp;quot;date&amp;quot; : ISODate(&amp;quot;2014-01-16T00:00:00Z&amp;quot;),
         &amp;quot;grade&amp;quot; : &amp;quot;B&amp;quot;,
         &amp;quot;score&amp;quot; : 17
      }
   ],
   &amp;quot;name&amp;quot; : &amp;quot;Vella&amp;quot;,
   &amp;quot;restaurant_id&amp;quot; : &amp;quot;41704620&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Untuk lebih jelasnya, mari kita langsung praktik&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;instalasi-mongodb-di-linux&#34;&gt;Instalasi MongoDB di Linux&lt;/h2&gt;

&lt;p&gt;Jika kita ingin menggunakan MongoDB versi terbaru, maka kita harus men-download
versi terakhir di website reseminya (&lt;a href=&#34;https://www.mongodb.com/download-center?jmp=petanikode.com&#34;&gt;mongodb.com&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.petanikode.com/img/mongodb/website-mongodb.png&#34; alt=&#34;Website MongoDB&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Tapi, jika ingin menggunakan versi lama yang ada di repositori,
kita bisa menginstalnya dengan perintah:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install mongodb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Setelah itu, untuk memastikan sudah terinstal dengan benar, coba
ketik perintah &lt;code&gt;mongo --version&lt;/code&gt; atau &lt;code&gt;mongod --version&lt;/code&gt; untuk memeriksa versinya.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.petanikode.com/img/mongodb/versi-mongodb.png&#34; alt=&#34;Versi mongodb yang terinstall&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Untuk keperluan belajar dasar, kita bisa pakai yang mana saja. Versi lama atau versi
beru tidak masalah.&lt;/p&gt;

&lt;p&gt;Pada panduan ini, saya menggunakan versi yang lama.&lt;/p&gt;

&lt;h2 id=&#34;cara-mengoperasikan-mongodb&#34;&gt;Cara Mengoperasikan MongoDB&lt;/h2&gt;

&lt;p&gt;Ada beberapa perintah yang disediakan MongoDB untuk mengoperasikannya,
seperti perintah &lt;code&gt;mongod&lt;/code&gt; &lt;em&gt;(MongoDB Daemon)&lt;/em&gt; untuk membuat server dan
&lt;code&gt;mongo&lt;/code&gt; untuk masuk ke &lt;em&gt;Shell&lt;/em&gt; MongoDB.&lt;/p&gt;

&lt;h3 id=&#34;menghidupkan-dan-mematikan-server-mongodb&#34;&gt;Menghidupkan dan Mematikan Server MongoDB&lt;/h3&gt;

&lt;p&gt;Kita bisa menghidupkan dan mematikan server MongoDB dengan perintah
&lt;code&gt;service&lt;/code&gt; di Ubuntu dan keluarga Debian lainnya.&lt;/p&gt;

&lt;p&gt;Menyalakan server MongoDB:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo service mongodb start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Mematikan server MongoDB:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo service mongodb stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Menyalakan ulang server MongoDB:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo service mongodb restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Selain itu, kita juga bisa menggunakan perintah &lt;code&gt;mongod&lt;/code&gt; dengan syarat
harus ditentukan &lt;code&gt;dbpath&lt;/code&gt;-nya.&lt;/p&gt;

&lt;p&gt;Contoh:&lt;/p&gt;

&lt;p&gt;Matikan dulu server yang sudah berjalan:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo service mongodb stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Setelah itu buat direktori baru untuk menyimpan dokumen database-nya.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir -p cobamongo/db
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Setelah itu jalankan servernya:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mongod --dbpath cobamongo/db/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Jika muncul seperti ini,&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.petanikode.com/img/mongodb/menjalankan-server-mongodb.png&#34; alt=&#34;Menjalankan server mongodb&#34; /&gt;&lt;/p&gt;

&lt;p&gt;berarti server MongoDB sudah hidup dan siap menerima koneksi dari alamat
&lt;code&gt;127.0.0.1&lt;/code&gt; (localhost).&lt;/p&gt;

&lt;p&gt;Untuk mematikannya, tinggal tekan saja tombol &lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;c&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Untuk selanjutnya, kita akan menggunakan server yang berjalan secara background.
Jadi silahkan nyalakan kembali servernya:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo service mongodb start
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;mengakses-server-mongodb&#34;&gt;Mengakses Server MongoDB&lt;/h3&gt;

&lt;p&gt;Kalau tadi kita menggunakan perintah &lt;code&gt;mongod&lt;/code&gt; untuk menyalakan server, maka
untuk mengakses servernya, kita gunakan perintah &lt;code&gt;mongo&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Perintah &lt;code&gt;mongo&lt;/code&gt; adalah program &lt;em&gt;client&lt;/em&gt; untuk membuka &lt;em&gt;Shell&lt;/em&gt; MongoDB.&lt;/p&gt;

&lt;p&gt;Pastikan servernya hidup, dan cobalah untuk mengetik perintah:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mongo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;atau&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mongo 192.169.1.1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Jika server-nya berada di tempat lain dengan IP &lt;code&gt;192.169.1.1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Karena server-nya berada di localhost, jadi kita bisa langsung ketik &lt;code&gt;mongo&lt;/code&gt; saja.&lt;/p&gt;

&lt;p&gt;Kalau muncul seperti ini, berarti kita berhasil masuk ke &lt;em&gt;Shell&lt;/em&gt; atau server
MongoDB:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.petanikode.com/img/mongodb/shell-mongodb.png&#34; alt=&#34;Shell MongoDB&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Secara &lt;em&gt;default&lt;/em&gt;, database yang kita gunakan adalah &lt;code&gt;test&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Untuk melihat database yang sedang aktif, gunakan perintah &lt;code&gt;db&lt;/code&gt; pada &lt;em&gt;Shell&lt;/em&gt; MongoDB.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.petanikode.com/img/mongodb/melihat-database-aktif.png&#34; alt=&#34;Melihat database yang sedang aktif di server&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Sedangkan untuk melihat daftar database, gunakan perintah &lt;code&gt;show dbs&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.petanikode.com/img/mongodb/melihat-daftar-database.png&#34; alt=&#34;Melihat daftar database di server&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Saat ini, di server hanya ada databse &lt;code&gt;admin&lt;/code&gt; dan &lt;code&gt;local&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Untuk keluar dari &lt;em&gt;Shell&lt;/em&gt; MongoDB, tekan &lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;c&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;membuat-database-dan-koleksi-baru&#34;&gt;Membuat Database dan Koleksi Baru&lt;/h2&gt;

&lt;p&gt;Mari kita buat Database baru bernama &lt;code&gt;tokobuku&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Silahkan ketik perintah &lt;code&gt;use tokobuku&lt;/code&gt; untuk membuat dan menggunakan database &lt;code&gt;tokobuku&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.petanikode.com/img/mongodb/membuat-database-tokobuku.png&#34; alt=&#34;Membuat database tokobuku&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Database ini belum tersimpan, karena masih kosong.&lt;/p&gt;

&lt;p&gt;Selanjutnya, mari kita coba buat sebuah koleksi &lt;em&gt;(collection)&lt;/em&gt;.
MongoDB menggunakan istilah koleksi untuk menggantikan tabel.&lt;/p&gt;

&lt;p&gt;Koleksi berisi kumpulan dokumen atau data dalam format JSON.
Kalau di SQL kita menyebutnya dengan record/baris.&lt;/p&gt;

&lt;p&gt;Koleksi bisa dibuat dengan perintah:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;db.createCollections(&amp;quot;nama_koleksi&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;atau bisa juga otomatis dibuat ketika kita melakukan insert data.&lt;/p&gt;

&lt;h2 id=&#34;insert-data&#34;&gt;Insert Data&lt;/h2&gt;

&lt;p&gt;Insert data dapat kita lakukan dengan perintah berikut:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;db.koleksi.insert(&amp;lt;data&amp;gt;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;atau&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;db.koleksi.save(&amp;lt;data&amp;gt;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Keterangan:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;koleksi&lt;/code&gt; adalah nama koleksi yang akan dibuat;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;data&amp;gt;&lt;/code&gt; adalah data yang akan kita simpan dalam koleksi tersebut
dengan format JSON.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sebagai contoh, kita akan membuat koleksi bernama &lt;code&gt;buku&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Javascript&#34;&gt;db.buku.insert({
    judul: &amp;quot;Belajar MongoDB&amp;quot;,
    sinopsis: &amp;quot;Panduan MongoDB untuk Pemula&amp;quot;,
    pengarang: &amp;quot;Petani Kode&amp;quot;
})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Maka kita akan memiliki satu koleksi dan satu data di dalamnya.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.petanikode.com/img/mongodb/insert-data.png&#34; alt=&#34;Insert data MongoDB&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Coba tambahkan lagi data baru.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-Javascript&#34;&gt;db.buku.insert({
    judul: &amp;quot;Pemrograman Javascript dan MongoDB&amp;quot;,
    sinopsis: &amp;quot;Panduan Pemrograman Js dan MongoDB&amp;quot;,
    pengarang: &amp;quot;Petani Kode&amp;quot;,
    harga: 98000
})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Maka sekarang kita punya dua data dalam koleksi &lt;code&gt;buku&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Kita bisa melihatnya dengan fungsi &lt;code&gt;count()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Contoh:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&amp;gt; db.buku.count()
2
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;menampilkan-data&#34;&gt;Menampilkan Data&lt;/h2&gt;

&lt;p&gt;Untuk menampilkan data yang sudah ditambahkan, kita bisa menggunakan
method &lt;code&gt;find()&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;db.koleksi.find()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Contoh:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.petanikode.com/img/mongodb/menampilkan-data.png&#34; alt=&#34;Menampilkan data MongoDB&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Kita juga bisa menambahkan fungsi &lt;code&gt;pretty()&lt;/code&gt; agar ditampilkan dengan rapi.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.petanikode.com/img/mongodb/menampilkan-data-pretty.png&#34; alt=&#34;Menampilkan data MongoDB dengan fungsi pretty&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Coba juga untuk menampilkan buku yang memiliki harga &lt;code&gt;98000&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;db.buku.find({ harga: 98000 })
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Maka, buku yang hanya berharga &lt;code&gt;98000&lt;/code&gt; saja yang akan ditampilkan.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.petanikode.com/img/mongodb/menampilkan-buku-harga.png&#34; alt=&#34;Menampilkan data berdasarkan harga&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Paham&amp;hellip;&lt;/p&gt;

&lt;p&gt;Tapi apa itu &lt;code&gt;&amp;quot;_id&amp;quot;&lt;/code&gt; dan &lt;code&gt;ObjectId(&amp;quot;5953ce71b8a47ea66328158f&amp;quot;)&lt;/code&gt;, kenapa selalu
ada di setiap data?&lt;/p&gt;

&lt;p&gt;Atribut &lt;code&gt;_id&lt;/code&gt; bisa dibilang seperti &lt;em&gt;Primary Key&lt;/em&gt;. Atribut ini
akan otomatis dibuat oleh MongoDB disetiap pengisian data.&lt;/p&gt;

&lt;h2 id=&#34;mengubah-data&#34;&gt;Mengubah Data&lt;/h2&gt;

&lt;p&gt;Untuk mengubah data, kita bisa menggunakan fungsi &lt;code&gt;update()&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;db.koleksi.update(&amp;lt;query&amp;gt;, &amp;lt;data baru&amp;gt;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Keterangan:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;query&amp;gt;&lt;/code&gt; adalah kata kunci data yang akan kita ubah, sama seperti &lt;code&gt;WHERE&lt;/code&gt;
dalam SQL.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;data baru&amp;gt;&lt;/code&gt; adalah data barunya.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sekarang, mari kita coba mengubah harga bukunya dari &lt;code&gt;98000&lt;/code&gt; menjadi &lt;code&gt;75000&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;db.buku.update(
    {
        judul: &amp;quot;Pemrograman Javascript dan MongoDB&amp;quot;
    },
    {
        judul: &amp;quot;Pemrograman Javascript dan MongoDB&amp;quot;,
        sinopsis: &amp;quot;Panduan Pemrograman Js dan MongoDB&amp;quot;,
        pengarang: &amp;quot;Petani Kode&amp;quot;,
        harga: 75000
    }
)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Maka hasilnya, semua buku yang berjudul &lt;code&gt;&amp;quot;Pemrograman Javascript dan MongoDB&amp;quot;&lt;/code&gt;
akan diturunkan harganya menjadi &lt;code&gt;75000&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.petanikode.com/img/mongodb/update-data.png&#34; alt=&#34;Update Data&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;menghapus-data&#34;&gt;Menghapus Data&lt;/h2&gt;

&lt;p&gt;Untuk menghapus data, kita bisa menggunakan perintah &lt;code&gt;remove()&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;db.koleksi.remove(&amp;lt;query&amp;gt;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sama seperti update data, penghapusan data juga memiliki &lt;code&gt;&amp;lt;query&amp;gt;&lt;/code&gt; untuk
menentukan data yang akan dihapus.&lt;/p&gt;

&lt;p&gt;Contoh:&lt;/p&gt;

&lt;p&gt;Kita akan menghapus buku yang berjudul &lt;code&gt;&amp;quot;Belajar MongoDB&amp;quot;&lt;/code&gt;, karena stoknya
sudah habis :smile:.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;db.buku.remove({judul: &amp;quot;Belajar MongoDB&amp;quot;})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Maka data buku yang berjudul &lt;code&gt;&amp;quot;Belajar MongoDB&amp;quot;&lt;/code&gt; sudah tiada.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.petanikode.com/img/mongodb/hapus-data.png&#34; alt=&#34;Update Data&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Untuk menghapus semua data dalam koleksi, kita bisa kosongkan nilai query-nya.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;db.koleksi.remove({})
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;menhapus-dabase-dan-koleksi&#34;&gt;Menhapus Dabase dan Koleksi&lt;/h2&gt;

&lt;p&gt;Bila kita ingin menghapus database dan koleksi, kita bisa menggunakan
method &lt;code&gt;drop()&lt;/code&gt; dan &lt;code&gt;dropDatabase()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Menghapus koleksi:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;db.koleksi.drop();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Menghapus database:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;db.dropDatabase();
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;menggunakan-robo-3t&#34;&gt;Menggunakan Robo 3T&lt;/h2&gt;

&lt;p&gt;Robo 3T (sebelumnya bernama Robomongo) adalah salah satu &lt;em&gt;tools&lt;/em&gt; berbasis GUI
untuk memanajemen database MongoDB. &lt;em&gt;Tools&lt;/em&gt; ini &lt;em&gt;opensource&lt;/em&gt; dengan lisensi GPL-3.0
dan tersedia untuk semua jenis sistem operasi.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.petanikode.com/img/mongodb/robomongo.png&#34; alt=&#34;Robomongo&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;instalasi-dan-menggunakan-robo-3t&#34;&gt;Instalasi dan Menggunakan Robo 3T&lt;/h3&gt;

&lt;p&gt;Pertama silahkan download Robo 3T di website resminya (&lt;a href=&#34;https://robomongo.org/download&#34;&gt;robomongo.org&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.petanikode.com/img/mongodb/download-robo3t.png&#34; alt=&#34;Download Robo3T&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Setelah itu, ekstrak dan coba jalankan file &lt;code&gt;bin/robo3t&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.petanikode.com/img/mongodb/menjalankan-robo3t.png&#34; alt=&#34;Menjalankan Robo3T&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Maka jendela EULA akan muncul, silahkan klik &lt;strong&gt;&lt;em&gt;&amp;ldquo;I Agree&amp;rdquo;&lt;/em&gt;&lt;/strong&gt; kemudian klik &lt;strong&gt;&lt;em&gt;Finish&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.petanikode.com/img/mongodb/eula-robo3t.png&#34; alt=&#34;EULA Robo3T&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Maka jendela baru &lt;em&gt;MongoDB Connection&lt;/em&gt; akan terbuka. Silahkan buat koneksi,
klik &lt;em&gt;Create&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.petanikode.com/img/mongodb/mongodb-connection.png&#34; alt=&#34;Jendela MongoDB Connection&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Silahkan isi nama koneksinya dengan apa saja yang kamu sukai, kemudian
klik &lt;strong&gt;&lt;em&gt;Test&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.petanikode.com/img/mongodb/membuat-koneksi.png&#34; alt=&#34;Membuat Koneksi MongoDB&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Kalau muncul jendela seperti ini, berarti koneksi berhasil.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.petanikode.com/img/mongodb/koneksi-berhasil.png&#34; alt=&#34;Koneksi berhasil&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Setelah itu, silahkan klik &lt;strong&gt;&lt;em&gt;Save&lt;/em&gt;&lt;/strong&gt; untuk menyimpan koneksi.
Maka sekarang kita punya satu koneksi.&lt;/p&gt;

&lt;p&gt;Silahkan klik &lt;strong&gt;&lt;em&gt;Connect&lt;/em&gt;&lt;/strong&gt; untuk mulai membuka database MongoDB dari Robo 3T.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.petanikode.com/img/mongodb/koneksi-terbuat.png&#34; alt=&#34;Koneksi yang sudah dibuat&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Berhasil&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.petanikode.com/img/mongodb/db-robo3t.png&#34; alt=&#34;Database MongoDB di Robo 3T&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Sekarang kita bisa mengelola database MongoDB tanpa harus menggunakan &lt;em&gt;Shell&lt;/em&gt;
di Terminal.&lt;/p&gt;

&lt;h3 id=&#34;membuat-menu-robo-3t&#34;&gt;Membuat Menu Robo 3T&lt;/h3&gt;

&lt;p&gt;Robo 3T yang kita jalankan tadi adalah &lt;em&gt;portable&lt;/em&gt;. Untuk
mengintegrasikan dengan sistem, silahkan taruh direktori Robo 3T di dalam
direktori &lt;code&gt;/opt&lt;/code&gt;, lalu buatkan &lt;em&gt;shortcut&lt;/em&gt; pada menu.&lt;/p&gt;

&lt;p&gt;Gunakan perintah ini untuk memindahkannya:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo mv ~/Downloads/robo3t-1.1.1-linux-x86_64-c93c6b0/ /opt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;atau&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo cp ~/Downloads/robo3t-1.1.1-linux-x86_64-c93c6b0/ /opt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lalu tambahkan menu launcher di Menu Editor.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.petanikode.com/img/mongodb/menambahkan-menu-robo3t.png&#34; alt=&#34;Menambahkan Launcher Robo 3T&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Maka sekarang, kita sudah punya menu Robo 3T yang bisa kita buka kapan saja.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.petanikode.com/img/mongodb/menu-robo3t.png&#34; alt=&#34;Menu Launcher Robo 3T&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;apa-selanjutnya&#34;&gt;Apa Selanjutnya?&lt;/h2&gt;

&lt;p&gt;Kita sudah mengetahui dasar-dasar MongoDB dan sudah mencoba
dua cara dalam mengelola database MongoDB, yaitu menggunakan
&lt;em&gt;Shell&lt;/em&gt; di terminal dan Robo 3T.&lt;/p&gt;

&lt;p&gt;Menggunakan Robo 3T memang lebih mudah, tinggal klik-klik saja.
Tapi pengetahuan tentang &lt;em&gt;Shell&lt;/em&gt; juga tidak kalah pentingnya,
karena akan banyak berguna dalam pemrograman.&lt;/p&gt;

&lt;p&gt;Sepajutnya mungkin bisa mencoba ide eksperimen berikut:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Menghubungkan Python dengan MongoDB dan Membuat aplikasi CRUD;&lt;/li&gt;
&lt;li&gt;Menghubungkan PHP dengan MongoDB dan Membuat aplikasi CRUD;&lt;/li&gt;
&lt;li&gt;Menghubungkan Javascript dengan MongoDB dan Membuat aplikasi CRUD;&lt;/li&gt;
&lt;li&gt;Menghubungkan Ruby dengan MongoDB dan Membuat aplikasi CRUD.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Terima kasih sudah mengikuti panduan ini sampai akhir, saya harap
semuanya bisa dipahami.&lt;/p&gt;

&lt;p&gt;Ada pertanyaan?&lt;/p&gt;

&lt;p&gt;Sampaikan di kolom komentar!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Referensi&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Dok. MongoDB &amp;mdash; &lt;a href=&#34;https://docs.mongodb.com/getting-started/shell/&#34;&gt;Getting Started With MongoDB&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Cara Termudah Menyimpan Graf pada Database Relasional</title>
      <link>https://www.petanikode.com/cara-menyimpan-graf-dalam-database/</link>
      <pubDate>Sat, 10 Dec 2016 15:53:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/cara-menyimpan-graf-dalam-database/</guid>
      <description>

&lt;p&gt;Awalnya saya tidak begitu paham dengan kegunaan graf pada komputer.&lt;/p&gt;

&lt;p&gt;Namun, setelah
belajar beberapa teori seperti kecerdasan buatan, analisa algoritma, struktur data,
matematika diskrit, kalkulus, dan sebagainya. Saya mendapatkan sedikit pencerahan.&lt;/p&gt;

&lt;p&gt;Graf dapat digunakan untuk menyelesaikan berbagai permasalahan seperti pencarian
jalur terpendek, relasi hubungan sesuatu, representasi pengetahuan pada AI, dsb.&lt;/p&gt;

&lt;p&gt;Saya kemudian tertarik untuk mengetahui cara melakukan komputasi graf.&lt;/p&gt;

&lt;p&gt;Sebelumnya saya pernah membahas &lt;a href=&#34;https://www.petanikode.com/representasi-graf-dalam-kode-python/&#34;&gt;cara merepresentasikan graf ke dalam kode&lt;/a&gt;
program dengan bahasa pemrograman python.&lt;/p&gt;

&lt;p&gt;Sekarang, bagaimana caranya kita menyimpan graf di dalam database?&lt;/p&gt;

&lt;p&gt;mari kita bahas&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;cara-menyimpan-graf-di-dalam-database&#34;&gt;Cara Menyimpan Graf di dalam Database&lt;/h2&gt;

&lt;p&gt;Memikirkan sendiri cara penyimpanan graf dalam database membuat saya pusing.&lt;/p&gt;

&lt;p&gt;Tapi, pada akhirnya saya menemukan sebuah &lt;em&gt;slide&lt;/em&gt; milik bapak &lt;a href=&#34;http://www.slideshare.net/billkarwin&#34;&gt;Karwin&lt;/a&gt; yang sangat membantu.&lt;/p&gt;

&lt;p&gt;Beliau menjelaskan empat metode penyimpanan graf pada database relasional
dan membandingkan setiap metode.&lt;/p&gt;

&lt;iframe allowfullscreen=&#34;&#34; frameborder=&#34;0&#34; height=&#34;485&#34; marginheight=&#34;0&#34; marginwidth=&#34;0&#34; scrolling=&#34;no&#34; src=&#34;//www.slideshare.net/slideshow/embed_code/key/tI9jfoqFHAcQdn?startSlide=5&#34; style=&#34;border-width: 1px; border: 1px solid #ccc; margin-bottom: 5px; max-width: 100%;&#34; width=&#34;100%&#34;&gt;
&lt;/iframe&gt;

&lt;p&gt;Hasil perbandingannya metode &lt;em&gt;Closeure Table&lt;/em&gt; terpilih sebagai cara yang termudah. Termudah yang saya maksudkan di sini adalah mudah untuk melakukan &lt;em&gt;Query&lt;/em&gt; CRUD &lt;em&gt;(Create, Read, Update, Delete)&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Masing-masing metode memang memiliki kelebihan dan kekurangan.&lt;/p&gt;

&lt;p&gt;Contohnya metode &lt;em&gt;Path Enumerattion&lt;/em&gt;, bagus digunakan untuk membuat &lt;em&gt;breadcrums. Sedangkan Adjacency List&lt;/em&gt; tidak bagus digunakan untuk graf yang punya banyak &lt;em&gt;node.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;metode-closure-table&#34;&gt;Metode &lt;em&gt;Closure Table&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;Mari kita pelajari cara penyimpanan graf dengan metode &lt;em&gt;Closure Table&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Misalkan, kita memiliki graf seperti pada gambar ini.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-dWgknbxEzmU/WCLzqncwFzI/AAAAAAAADag/6wDc7P2eC7IwFY3dOdmTXHpcaT-woBqFQCK4B/s1600/graf%2Bberarah%2B-%2Bpetanikode.jpg&#34;&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-dWgknbxEzmU/WCLzqncwFzI/AAAAAAAADag/6wDc7P2eC7IwFY3dOdmTXHpcaT-woBqFQCK4B/s1600/graf%2Bberarah%2B-%2Bpetanikode.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Anggaplah semua titik-titik pada graf tersebut merupakan sebuah kota yang saling terhubung. Kemudian, yang kita harus lakukan adalah membuat tabel untuk menyimpan kota (titik) dan jalan yang menghubungkannya.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-rCy4_zOhkfE/WDmI8o6D06I/AAAAAAAADdY/cttgx1o55l4VGyGvr-toyHGhEk8aP1qtACK4B/s1600/Relasi%2BTabel%2BGraf.png&#34;&gt;&lt;img src=&#34;https://1.bp.blogspot.com/-rCy4_zOhkfE/WDmI8o6D06I/AAAAAAAADdY/cttgx1o55l4VGyGvr-toyHGhEk8aP1qtACK4B/s1600/Relasi%2BTabel%2BGraf.png&#34; alt=&#34;Diagram Relasi Tabel Graf&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Relasi yang akan tercipta adalah &lt;em&gt;Many-to-Many&lt;/em&gt;. Kolom &lt;code&gt;kota_asal&lt;/code&gt; dan &lt;code&gt;kota_tujuan&lt;/code&gt; akan menyimpan &lt;code&gt;id&lt;/code&gt; dari &lt;em&gt;kota&lt;/em&gt;. Kemudian kolom &lt;code&gt;panjang&lt;/code&gt; untuk menyimpan panjang jalannya.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;create table kota(
    id int,
    nama char,
    PRIMARY KEY(id)
);


create table jalan(
    kota_asal int,
    kota_tujuan int,
    panjang int,
    FOREIGN KEY(kota_asal) REFERENCES kota(id),
    FOREIGN KEY(kota_tujuan) REFERENCES kota(id)
);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sekarang kita sudah punya dua tabel yang saling berelasi.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-MpXwEwCU8Ek/WDmLo9QF4rI/AAAAAAAADdk/UsgJ7jVgr8IYkYm1GL7Vs2w-mTxw55HPACK4B/s1600/Relasi%2Btabel%2Bgraf%2Bdi%2Bdatabase%2Bmysql.png&#34;&gt;&lt;img src=&#34;https://4.bp.blogspot.com/-MpXwEwCU8Ek/WDmLo9QF4rI/AAAAAAAADdk/UsgJ7jVgr8IYkYm1GL7Vs2w-mTxw55HPACK4B/s1600/Relasi%2Btabel%2Bgraf%2Bdi%2Bdatabase%2Bmysql.png&#34; alt=&#34;Relasi tabel database Graf&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sekarang kita coba menambahkan semua titik pada graf:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;INSERT INTO kota (id,nama) VALUE (1,&#39;A&#39;);
INSERT INTO kota (id,nama) VALUE (2,&#39;B&#39;);
INSERT INTO kota (id,nama) VALUE (3,&#39;C&#39;);
INSERT INTO kota (id,nama) VALUE (4,&#39;D&#39;);
INSERT INTO kota (id,nama) VALUE (5,&#39;E&#39;);
INSERT INTO kota (id,nama) VALUE (6,&#39;F&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Selanjutnya menambahkan data jalan:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;INSERT INTO jalan (kota_asal,kota_tujuan,panjang) VALUES (1,2,14);
INSERT INTO jalan (kota_asal,kota_tujuan,panjang) VALUES (1,3,10);
INSERT INTO jalan (kota_asal,kota_tujuan,panjang) VALUES (2,3,6);
INSERT INTO jalan (kota_asal,kota_tujuan,panjang) VALUES (2,4,18);
INSERT INTO jalan (kota_asal,kota_tujuan,panjang) VALUES (3,4,7);
INSERT INTO jalan (kota_asal,kota_tujuan,panjang) VALUES (4,3,9);
INSERT INTO jalan (kota_asal,kota_tujuan,panjang) VALUES (5,6,8);
INSERT INTO jalan (kota_asal,kota_tujuan,panjang) VALUES (6,4,11);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Panjang jalan saya tentukan sendiri. Sekarang semuanya sudah masuk. Mari kita coba-coba melakukan &lt;em&gt;query&lt;/em&gt; yang lain. Misalnya, berapakah panjang jalan dari kota B menuju kota D?&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT panjang FROM `jalan` WHERE kota_asal=2 AND kota_tujuan=4
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasilnya:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;+---------+
| panjang |
+---------+
|      18 |
+---------+
1 row in set (0,00 sec)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sebenarnya ada dua jalan yang bisa dilewati dari kota B menuju kota D, yaitu &lt;code&gt;B-&amp;gt;D&lt;/code&gt; dan &lt;code&gt;B-&amp;gt;C-&amp;gt;D&lt;/code&gt;. Akan tetapi &lt;em&gt;query&lt;/em&gt; tersebut hanya memilih jalur &lt;code&gt;B-&amp;gt;D&lt;/code&gt; saja.&lt;/p&gt;

&lt;p&gt;Untuk query yang lebih rumit, mungkin kita bisa lakukan dengan membuat program. Misalnya, program untuk menentukan jalur terpedek.&lt;/p&gt;

&lt;p&gt;File SQL contoh di atas dapat anda download di: &lt;a href=&#34;https://gist.github.com/ardianta/7ae139c95570a35d3af9dc40b70f18db&#34;&gt;gist.github.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Begitulah cara termudah menyimpan graf pada database relasional menurut bapak Karwin.&lt;/p&gt;

&lt;p&gt;Metode &lt;em&gt;Closure Table&lt;/em&gt; memang yang termudah, namun pasti memiliki kekurangan.&lt;/p&gt;

&lt;p&gt;Bagaimana menurutmu?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tutorial Dasar SQLite di Linux</title>
      <link>https://www.petanikode.com/tutorial-sqlite-di-linux/</link>
      <pubDate>Fri, 13 Nov 2015 23:03:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/tutorial-sqlite-di-linux/</guid>
      <description>

&lt;p&gt;SQLite merupakan sebuah &lt;em&gt;Relational Database Management System&lt;/em&gt; (RDMS)
yang tidak memerlukan server untuk beroperasi. Bisa dibilang, SQLite adalah
database &lt;em&gt;portable&lt;/em&gt; yang bisa digunakan tanpa jaringan. Inilah yang membuatnya banyak digunakan
dalam berbagai aplikasi &lt;em&gt;(offline)&lt;/em&gt; seperti aplikasi &lt;a href=&#34;https://www.petanikode.com/topik/android&#34;&gt;Android&lt;/a&gt;, aplikasi
&lt;a href=&#34;https://www.petanikode.com/kategori/desktop&#34;&gt;desktop&lt;/a&gt;, &lt;a href=&#34;https://www.petanikode.com/topik/java&#34;&gt;java&lt;/a&gt;, VB.net, Game, dsb.&lt;/p&gt;

&lt;p&gt;Pada kesempatan ini, kita akan belajar dasar-dsar SQLite dengan menggunakan Linux.&lt;/p&gt;

&lt;h2 id=&#34;instalasi-sqlite-di-linux&#34;&gt;Instalasi SQLite di Linux&lt;/h2&gt;

&lt;p&gt;Pertama kita perlu menginstal SQLite-nya dulu, silahkan ketik perintah berikut.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install sqlite3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;659&#34;
    height=&#34;451&#34;
    alt=&#34;instalasi+SQLite+di+ubuntu+15.04.png&#34;
    src=&#34;http://2.bp.blogspot.com/-Slt2BbZRZmU/Vhy9Z_zueQI/AAAAAAAACAE/IeP3gnLpQJI/s1600/instalasi%2BSQLite%2Bdi%2Bubuntu%2B15.04.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;h2 id=&#34;membuat-database&#34;&gt;Membuat Database&lt;/h2&gt;

&lt;p&gt;Pembuatan database dapat dilakukan dengan perintah &lt;code&gt;sqlite3 nama.db&lt;/code&gt;. Ekstensi
database SQLite menggunakan &lt;code&gt;.db&lt;/code&gt;. Misalkan, kita akan membuat database
bernama &lt;code&gt;petani.db&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sqlite3 petani.db
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Maka kita akan dibawa masuk ke &lt;em&gt;console&lt;/em&gt;/&lt;em&gt;shell&lt;/em&gt; SQLite.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;655&#34;
    height=&#34;141&#34;
    alt=&#34;membuat+database+SQLite.png&#34;
    src=&#34;https://1.bp.blogspot.com/--LR50xki2ZE/WKwNKA79lpI/AAAAAAAAEHw/w1hUIJL8pZ0dcRpfyDMr2tl6ccEUWNLNQCPcB/s1600/membuat%2Bdatabase%2BSQLite.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;h2 id=&#34;membuat-tabel&#34;&gt;Membuat Tabel&lt;/h2&gt;

&lt;p&gt;Selanjutnya kita akan membuat tabel &lt;em&gt;anggota&lt;/em&gt; dengan &lt;em&gt;Query&lt;/em&gt; SQL berikut ini.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;create table anggota(
    id integer,
    nama varchar(20),
    alamat varchar(32)
);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Kalau tidak ada error, berarti pembuatan tabel berhasil.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;655&#34;
    height=&#34;157&#34;
    alt=&#34;membuat+tabel+anggota+di+database+petani.png&#34;
    src=&#34;https://1.bp.blogspot.com/-adf7TEp47BA/WKwOQoAPdOI/AAAAAAAAEII/WbVQG7pgYAASsowr1zMtQRDcYrUfjgu8gCPcB/s1600/membuat%2Btabel%2Banggota%2Bdi%2Bdatabase%2Bpetani.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;h2 id=&#34;mengisi-data-ke-tabel&#34;&gt;Mengisi Data ke Tabel&lt;/h2&gt;

&lt;p&gt;Sekarang kita akan coba mengisi 5 data ke tabel. Silahkan ketik perintah SQL
berikut di dalam &lt;em&gt;shell&lt;/em&gt; SQLite.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;insert into anggota values(1,&#39;Madun&#39;,&#39;Praya&#39;);
insert into anggota values(2,&#39;Sahdan&#39;,&#39;Cakra&#39;);
insert into anggota values(3,&#39;Iskandar&#39;,&#39;Sweta&#39;);
insert into anggota values(4,&#39;Zulfikar&#39;,&#39;Gunung Sari&#39;);
insert into anggota values(5,&#39;Samsudin&#39;,&#39;Narmada&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Kalau tidak ada error, berarti berhasil.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;655&#34;
    height=&#34;125&#34;
    alt=&#34;Insert+data+ke+tabel+di+SQLite.png&#34;
    src=&#34;https://3.bp.blogspot.com/-63HC2t12cdU/WKwP66dy0oI/AAAAAAAAEIk/a_F5GXqPWYggK-ToR2Yc4vM-mjmflJ6jwCPcB/s1600/Insert%2Bdata%2Bke%2Btabel%2Bdi%2BSQLite.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;h2 id=&#34;melihat-isi-tabel&#34;&gt;Melihat isi Tabel&lt;/h2&gt;

&lt;p&gt;Perintah SQL untuk melihat isi tabel adalah &lt;code&gt;select * from nama_tabel&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;sqlite&amp;gt; select * from anggota;
1|Madun|Praya
2|Sahdan|Cakra
3|Iskandar|Sweta
4|Zulfikar|Gunung Sari
5|Samsudin|Narmada
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;keluar-dari-shell-sqlite&#34;&gt;Keluar dari Shell SQLite&lt;/h2&gt;

&lt;p&gt;Tekan &lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;D&lt;/code&gt; untuk keluar dari &lt;em&gt;shell&lt;/em&gt; SQLite.&lt;/p&gt;

&lt;h2 id=&#34;membuka-kembali-database&#34;&gt;Membuka Kembali Database&lt;/h2&gt;

&lt;p&gt;Saat kita membuat database tadi, SQLite juga akan membuat sebuah file
bernama &lt;code&gt;petani.db&lt;/code&gt;. File ini menyimpan tabel dan data yang baru saja kita buat.
Untuk membuka kembali database-nya, kita tinggal ketik perintah seperti pembuatan
database tadi.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sqlite3 petani.db
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;penutup&#34;&gt;Penutup&lt;/h2&gt;

&lt;p&gt;Sekian tutorial SQLite di Linux ini. Mudah-mudahan bermanfaat. Terima kasih
sudah membaca sampai akhir. Tutorial lebih lanjut, bisa dipelajari di
&lt;a href=&#34;https://www.sqlite.org/docs.html&#34;&gt;dokumentasinya SQLite&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>