<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Matematika on Petani Kode — Programmer Pengguna Linux</title>
    <link>https://www.petanikode.com/topik/matematika/index.xml</link>
    <description>Recent content in Matematika on Petani Kode — Programmer Pengguna Linux</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>id-id</language>
    <copyright>Copyright (c) 2017, Petani Kode; all rights reserved.</copyright>
    <atom:link href="https://www.petanikode.com/topik/matematika/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Cara Termudah Menyimpan Graf pada Database Relasional</title>
      <link>https://www.petanikode.com/cara-menyimpan-graf-dalam-database/</link>
      <pubDate>Sat, 10 Dec 2016 15:53:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/cara-menyimpan-graf-dalam-database/</guid>
      <description>

&lt;p&gt;Awalnya saya tidak begitu paham dengan kegunaan graf pada komputer.&lt;/p&gt;

&lt;p&gt;Namun, setelah
belajar beberapa teori seperti kecerdasan buatan, analisa algoritma, struktur data,
matematika diskrit, kalkulus, dan sebagainya. Saya mendapatkan sedikit pencerahan.&lt;/p&gt;

&lt;p&gt;Graf dapat digunakan untuk menyelesaikan berbagai permasalahan seperti pencarian
jalur terpendek, relasi hubungan sesuatu, representasi pengetahuan pada AI, dsb.&lt;/p&gt;

&lt;p&gt;Saya kemudian tertarik untuk mengetahui cara melakukan komputasi graf.&lt;/p&gt;

&lt;p&gt;Sebelumnya saya pernah membahas &lt;a href=&#34;https://www.petanikode.com/representasi-graf-dalam-kode-python/&#34;&gt;cara merepresentasikan graf ke dalam kode&lt;/a&gt;
program dengan bahasa pemrograman python.&lt;/p&gt;

&lt;p&gt;Sekarang, bagaimana caranya kita menyimpan graf di dalam database?&lt;/p&gt;

&lt;p&gt;mari kita bahas&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;cara-menyimpan-graf-di-dalam-database&#34;&gt;Cara Menyimpan Graf di dalam Database&lt;/h2&gt;

&lt;p&gt;Memikirkan sendiri cara penyimpanan graf dalam database membuat saya pusing.&lt;/p&gt;

&lt;p&gt;Tapi, pada akhirnya saya menemukan sebuah &lt;em&gt;slide&lt;/em&gt; milik bapak &lt;a href=&#34;http://www.slideshare.net/billkarwin&#34;&gt;Karwin&lt;/a&gt; yang sangat membantu.&lt;/p&gt;

&lt;p&gt;Beliau menjelaskan empat metode penyimpanan graf pada database relasional
dan membandingkan setiap metode.&lt;/p&gt;

&lt;iframe allowfullscreen=&#34;&#34; frameborder=&#34;0&#34; height=&#34;485&#34; marginheight=&#34;0&#34; marginwidth=&#34;0&#34; scrolling=&#34;no&#34; src=&#34;//www.slideshare.net/slideshow/embed_code/key/tI9jfoqFHAcQdn?startSlide=5&#34; style=&#34;border-width: 1px; border: 1px solid #ccc; margin-bottom: 5px; max-width: 100%;&#34; width=&#34;100%&#34;&gt;
&lt;/iframe&gt;

&lt;p&gt;Hasil perbandingannya metode &lt;em&gt;Closeure Table&lt;/em&gt; terpilih sebagai cara yang termudah. Termudah yang saya maksudkan di sini adalah mudah untuk melakukan &lt;em&gt;Query&lt;/em&gt; CRUD &lt;em&gt;(Create, Read, Update, Delete)&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Masing-masing metode memang memiliki kelebihan dan kekurangan.&lt;/p&gt;

&lt;p&gt;Contohnya metode &lt;em&gt;Path Enumerattion&lt;/em&gt;, bagus digunakan untuk membuat &lt;em&gt;breadcrums. Sedangkan Adjacency List&lt;/em&gt; tidak bagus digunakan untuk graf yang punya banyak &lt;em&gt;node.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;metode-closure-table&#34;&gt;Metode &lt;em&gt;Closure Table&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;Mari kita pelajari cara penyimpanan graf dengan metode &lt;em&gt;Closure Table&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Misalkan, kita memiliki graf seperti pada gambar ini.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-dWgknbxEzmU/WCLzqncwFzI/AAAAAAAADag/6wDc7P2eC7IwFY3dOdmTXHpcaT-woBqFQCK4B/s1600/graf%2Bberarah%2B-%2Bpetanikode.jpg&#34;&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-dWgknbxEzmU/WCLzqncwFzI/AAAAAAAADag/6wDc7P2eC7IwFY3dOdmTXHpcaT-woBqFQCK4B/s1600/graf%2Bberarah%2B-%2Bpetanikode.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Anggaplah semua titik-titik pada graf tersebut merupakan sebuah kota yang saling terhubung. Kemudian, yang kita harus lakukan adalah membuat tabel untuk menyimpan kota (titik) dan jalan yang menghubungkannya.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-rCy4_zOhkfE/WDmI8o6D06I/AAAAAAAADdY/cttgx1o55l4VGyGvr-toyHGhEk8aP1qtACK4B/s1600/Relasi%2BTabel%2BGraf.png&#34;&gt;&lt;img src=&#34;https://1.bp.blogspot.com/-rCy4_zOhkfE/WDmI8o6D06I/AAAAAAAADdY/cttgx1o55l4VGyGvr-toyHGhEk8aP1qtACK4B/s1600/Relasi%2BTabel%2BGraf.png&#34; alt=&#34;Diagram Relasi Tabel Graf&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Relasi yang akan tercipta adalah &lt;em&gt;Many-to-Many&lt;/em&gt;. Kolom &lt;code&gt;kota_asal&lt;/code&gt; dan &lt;code&gt;kota_tujuan&lt;/code&gt; akan menyimpan &lt;code&gt;id&lt;/code&gt; dari &lt;em&gt;kota&lt;/em&gt;. Kemudian kolom &lt;code&gt;panjang&lt;/code&gt; untuk menyimpan panjang jalannya.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;create table kota(
    id int,
    nama char,
    PRIMARY KEY(id)
);


create table jalan(
    kota_asal int,
    kota_tujuan int,
    panjang int,
    FOREIGN KEY(kota_asal) REFERENCES kota(id),
    FOREIGN KEY(kota_tujuan) REFERENCES kota(id)
);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sekarang kita sudah punya dua tabel yang saling berelasi.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-MpXwEwCU8Ek/WDmLo9QF4rI/AAAAAAAADdk/UsgJ7jVgr8IYkYm1GL7Vs2w-mTxw55HPACK4B/s1600/Relasi%2Btabel%2Bgraf%2Bdi%2Bdatabase%2Bmysql.png&#34;&gt;&lt;img src=&#34;https://4.bp.blogspot.com/-MpXwEwCU8Ek/WDmLo9QF4rI/AAAAAAAADdk/UsgJ7jVgr8IYkYm1GL7Vs2w-mTxw55HPACK4B/s1600/Relasi%2Btabel%2Bgraf%2Bdi%2Bdatabase%2Bmysql.png&#34; alt=&#34;Relasi tabel database Graf&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sekarang kita coba menambahkan semua titik pada graf:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;INSERT INTO kota (id,nama) VALUE (1,&#39;A&#39;);
INSERT INTO kota (id,nama) VALUE (2,&#39;B&#39;);
INSERT INTO kota (id,nama) VALUE (3,&#39;C&#39;);
INSERT INTO kota (id,nama) VALUE (4,&#39;D&#39;);
INSERT INTO kota (id,nama) VALUE (5,&#39;E&#39;);
INSERT INTO kota (id,nama) VALUE (6,&#39;F&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Selanjutnya menambahkan data jalan:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;INSERT INTO jalan (kota_asal,kota_tujuan,panjang) VALUES (1,2,14);
INSERT INTO jalan (kota_asal,kota_tujuan,panjang) VALUES (1,3,10);
INSERT INTO jalan (kota_asal,kota_tujuan,panjang) VALUES (2,3,6);
INSERT INTO jalan (kota_asal,kota_tujuan,panjang) VALUES (2,4,18);
INSERT INTO jalan (kota_asal,kota_tujuan,panjang) VALUES (3,4,7);
INSERT INTO jalan (kota_asal,kota_tujuan,panjang) VALUES (4,3,9);
INSERT INTO jalan (kota_asal,kota_tujuan,panjang) VALUES (5,6,8);
INSERT INTO jalan (kota_asal,kota_tujuan,panjang) VALUES (6,4,11);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Panjang jalan saya tentukan sendiri. Sekarang semuanya sudah masuk. Mari kita coba-coba melakukan &lt;em&gt;query&lt;/em&gt; yang lain. Misalnya, berapakah panjang jalan dari kota B menuju kota D?&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT panjang FROM `jalan` WHERE kota_asal=2 AND kota_tujuan=4
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasilnya:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;+---------+
| panjang |
+---------+
|      18 |
+---------+
1 row in set (0,00 sec)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sebenarnya ada dua jalan yang bisa dilewati dari kota B menuju kota D, yaitu &lt;code&gt;B-&amp;gt;D&lt;/code&gt; dan &lt;code&gt;B-&amp;gt;C-&amp;gt;D&lt;/code&gt;. Akan tetapi &lt;em&gt;query&lt;/em&gt; tersebut hanya memilih jalur &lt;code&gt;B-&amp;gt;D&lt;/code&gt; saja.&lt;/p&gt;

&lt;p&gt;Untuk query yang lebih rumit, mungkin kita bisa lakukan dengan membuat program. Misalnya, program untuk menentukan jalur terpedek.&lt;/p&gt;

&lt;p&gt;File SQL contoh di atas dapat anda download di: &lt;a href=&#34;https://gist.github.com/ardianta/7ae139c95570a35d3af9dc40b70f18db&#34;&gt;gist.github.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Begitulah cara termudah menyimpan graf pada database relasional menurut bapak Karwin.&lt;/p&gt;

&lt;p&gt;Metode &lt;em&gt;Closure Table&lt;/em&gt; memang yang termudah, namun pasti memiliki kekurangan.&lt;/p&gt;

&lt;p&gt;Bagaimana menurutmu?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cara Membuat Graf dalam Kode Program dengan Bahasa Pemrograman Python</title>
      <link>https://www.petanikode.com/representasi-graf-dalam-kode-python/</link>
      <pubDate>Wed, 09 Nov 2016 19:29:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/representasi-graf-dalam-kode-python/</guid>
      <description>

&lt;p&gt;Hari ini saya belajar sesuatu yang cukup menantang, yaitu graf. &lt;strong&gt;Bagaiaman menulis graf dalam kode?&lt;/strong&gt;
dan memahami beberapa hal tentang graf.&lt;/p&gt;

&lt;p&gt;Menurut Wikipedia, graf dalam komputer sains (ilmu komputer) adalah sebuah tipe data abstrak. Graf terdiri dari titik-titik &lt;em&gt;(nodes)&lt;/em&gt; yang terhubung dengan sisi/busur &lt;em&gt;(edge/arcs)&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Berikut ini contoh graf yang akan kita tulis dalam kode program python:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-dWgknbxEzmU/WCLzqncwFzI/AAAAAAAADag/6wDc7P2eC7IwFY3dOdmTXHpcaT-woBqFQCK4B/s1600/graf%2Bberarah%2B-%2Bpetanikode.jpg&#34;&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-dWgknbxEzmU/WCLzqncwFzI/AAAAAAAADag/6wDc7P2eC7IwFY3dOdmTXHpcaT-woBqFQCK4B/s1600/graf%2Bberarah%2B-%2Bpetanikode.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Graf tersebut merupakan graf berarah yang memiliki enam buah titik dan delapan busur &lt;em&gt;(arcs)&lt;/em&gt;. Adapun delapan busur tersebut bisa kita nyatakan seperti berikut ini.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;A -&amp;gt; B
A -&amp;gt; C
B -&amp;gt; C
B -&amp;gt; D
C -&amp;gt; D
D -&amp;gt; C
E -&amp;gt; F
F -&amp;gt; C
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Graf sebenarnya bisa diubah ke dalam bentuk matriks dan ditulis dalam bentuk &lt;em&gt;array&lt;/em&gt; dua dimensi ke dalam kode. Namun, karena contoh yang saya temukan menggunakan &lt;em&gt;dictionary&lt;/em&gt;, maka graf di atas bisa dituliskan seperti berikut ini.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;graf = {&#39;A&#39;: [&#39;B&#39;, &#39;C&#39;],
        &#39;B&#39;: [&#39;C&#39;, &#39;D&#39;],
        &#39;C&#39;: [&#39;D&#39;],
        &#39;D&#39;: [&#39;C&#39;],
        &#39;E&#39;: [&#39;F&#39;],
        &#39;F&#39;: [&#39;C&#39;]}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pada kode di atas, kita menggunakan &lt;em&gt;dictionary&lt;/em&gt; untuk membuat graf dan menggunakan &lt;em&gt;list&lt;/em&gt; untuk menyimpan titik yang menjadi tetangga sebuah titik. Misalkan titik A, terbuhung dengan titik B dan C. Titik B terhubung dengan titik C dan D, dan seterusnya.&lt;/p&gt;

&lt;h1 id=&#34;fungsi-untuk-menentukan-jalur&#34;&gt;Fungsi untuk Menentukan Jalur&lt;/h1&gt;

&lt;p&gt;Fungsi ini akan menemukan sebuah jalur &lt;em&gt;(path)&lt;/em&gt; dari titik awal hingga titik akhir atau tujuan.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def temukan_jalur(graf, awal, akhir, jalur=[]):
    jalur = jalur + [awal]
    if awal == akhir:
        return jalur
    if not graf.has_key(awal):
        return None
    for titik in graf[awal]:
        if titik not in jalur:
            jalur_baru = temukan_jalur(graf, titik, akhir, jalur)
            if jalur_baru: return jalur_baru
    return None
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Misalkan kita ingin mencari jalur dari titik A ke titik D, maka kita bisa menggunakan fungsi tersebut.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt;&amp;gt;&amp;gt; temukan_jalur(graf, &#39;A&#39;, &#39;D&#39;)
[&#39;A&#39;, &#39;B&#39;, &#39;C&#39;, &#39;D&#39;]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;fungsi-untuk-menentukan-semua-jalur&#34;&gt;Fungsi untuk Menentukan Semua Jalur&lt;/h2&gt;

&lt;p&gt;Pada fungsi di atas, kita hanya diberikan satu jalur saja. Sedangkan fungsi berikut ini akan mengembalikan semua jalur yang bisa dilalui dari titik awal hingga akhir.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;def temukan_semua_jalur(graf, awal, akhir, jalur=[]):
    jalur = jalur + [awal]
    if awal == akhir:
        return [jalur]
    if not graf.has_key(awal):
        return []
    semua_jalur = []
    for titik in graf[awal]:
        if titik not in jalur:
            jalur_jalur = temukan_semua_jalur(graf, titik, akhir, jalur)
            for jalur_baru in jalur_jalur:
                semua_jalur.append(jalur_baru)
    return semua_jalur
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Misalkan kita ingin mencari semua jalur yang mungkin bisa dilalui dari titik A ke titik D, maka fungsi tersebut akan mengembalikan semua jalur dalam bentuk &lt;em&gt;list&lt;/em&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt;&amp;gt;&amp;gt; temukan_semua_jalur(graf, &#39;A&#39;, &#39;D&#39;)
[[&#39;A&#39;, &#39;B&#39;, &#39;C&#39;, &#39;D&#39;], [&#39;A&#39;, &#39;B&#39;, &#39;D&#39;], [&#39;A&#39;, &#39;C&#39;, &#39;D&#39;]]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pada hasil eksekusi fungsi tersebut, kita diberikan tiga buah jalur yang bisa dilalui dari titik A menuju titik D.&lt;/p&gt;

&lt;h2 id=&#34;kesimpulan&#34;&gt;Kesimpulan&lt;/h2&gt;

&lt;p&gt;Representasi graf ke dalam kode python dapat dilakukan dengan &lt;em&gt;dictionary&lt;/em&gt; dan &lt;em&gt;list&lt;/em&gt;. Semua titik dalam graf dijadikan kunci &lt;em&gt;(key)&lt;/em&gt; dalam &lt;em&gt;dictionary&lt;/em&gt;. Kemudian menyimpan titik tetangganya dalam &lt;em&gt;list&lt;/em&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Kode LaTeX untuk Menulis Rumus Matematika di HTML</title>
      <link>https://www.petanikode.com/tutorial-mathjax/</link>
      <pubDate>Mon, 16 May 2016 16:34:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/tutorial-mathjax/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-vRUklKdzFEU/Vzahq5aQO1I/AAAAAAAACzU/QUsx7qcPXXYOwA70m9QXrdT8Dz9700yUACK4B/s1600/MathJax%2B-%2BPetani%2BKode%2B-%2BTulis%2Brumus%2Bmatematika%2Bdalam%2BHTML.png&#34;&gt;&lt;img src=&#34;https://4.bp.blogspot.com/-vRUklKdzFEU/Vzahq5aQO1I/AAAAAAAACzU/QUsx7qcPXXYOwA70m9QXrdT8Dz9700yUACK4B/s1600/MathJax%2B-%2BPetani%2BKode%2B-%2BTulis%2Brumus%2Bmatematika%2Bdalam%2BHTML.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Ketika membaca halaman wikipedia yang memiliki rumus,
kita temuakan rumus tersebut dibuat dalam bentuk gamabar.&lt;/p&gt;

&lt;p&gt;Contoh, coba cek &lt;a href=&#34;https://en.wikipedia.org/wiki/Ant_colony_optimization_algorithms&#34;&gt;halaman ini&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://www.petanikode.com/img/mathjax/rumus-di-wikipedia.png&#34; alt=&#34;Rumus matematika di Wikipedia&#34; /&gt;&lt;/p&gt;

&lt;p&gt;HTML sendiri memiliki sebuah tag untuk menuliskan rumus matematika.
Tapi cukup panjang untuk menggunakannya.&lt;/p&gt;

&lt;p&gt;Karena itu, biar tidak repot, kita bisa menggunakan kode LaTex saja
dengan &lt;em&gt;library MathJax&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&#34;apa-itu-mathjax&#34;&gt;Apa itu MathJax?&lt;/h2&gt;

&lt;p&gt;MathJax merupakan pustaka &lt;em&gt;(library)&lt;/em&gt; javascript untuk menampilkan (render) hasil
kode LaTeX, MathML, dan Notasi AsciiMath ke dalam HTML.&lt;/p&gt;

&lt;p&gt;MathJax diklaim dapat bekerja di semua browser.&lt;/p&gt;

&lt;h2 id=&#34;cara-menggunakan-mathjax&#34;&gt;Cara Menggunakan MathJax&lt;/h2&gt;

&lt;p&gt;Pertama kita perlu inisialisasi dulu di dalam tag &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; atau di akhir tag &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script type=&amp;quot;text/x-mathjax-config&amp;quot;&amp;gt;
MathJax.Hub.Config({
  tex2jax: {inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]]}
});
&amp;lt;/script&amp;gt;
&amp;lt;script type=&amp;quot;text/javascript&amp;quot; async
  src=&amp;quot;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_CHTML&amp;quot;&amp;gt;
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Selanjutnya, untuk menuliskan sebuah rumus,
kita dapat menggunakan perintah LaTeX yang diapit dengan tanda dolar (&lt;code&gt;$&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Contoh:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-latex&#34;&gt;$f(x)=\sqrt{x^2 + 5y^4}$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Akan menghasilkan:&lt;/p&gt;

&lt;p&gt;$f(x)=\sqrt{x^2 + 5y^4}$&lt;/p&gt;

&lt;p&gt;Mudah bukan?&lt;/p&gt;

&lt;p&gt;Kode lengkapnya:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
  &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width&amp;quot;&amp;gt;
  &amp;lt;title&amp;gt;JS Bin&amp;lt;/title&amp;gt;

&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;

$f(x)=\sqrt{x^2 + 5y^4}$  


  &amp;lt;script type=&amp;quot;text/x-mathjax-config&amp;quot;&amp;gt;
MathJax.Hub.Config({
  tex2jax: {inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]]}
});
&amp;lt;/script&amp;gt;
  &amp;lt;script type=&amp;quot;text/javascript&amp;quot; async
  src=&amp;quot;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML&amp;quot;&amp;gt;
&amp;lt;/script&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;akhir-kata&#34;&gt;Akhir kata&amp;hellip;&lt;/h2&gt;

&lt;p&gt;Terima kasih sudah mengikuti tutorial ini, semoga bermanfaat.&lt;/p&gt;

&lt;p&gt;Referensi:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cs.tut.fi/~jkorpela/math/&#34;&gt;http://www.cs.tut.fi/~jkorpela/math/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.mathjax.org/en/latest/index.html&#34;&gt;http://docs.mathjax.org/en/latest/index.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;script type=&#34;text/x-mathjax-config&#34;&gt;
MathJax.Hub.Config({
  tex2jax: {inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]]}
});
&lt;/script&gt;
&lt;script type=&#34;text/javascript&#34; async
  src=&#34;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_CHTML&#34;&gt;
&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>Menghitung Akar Kuadrat dan Akar Kubik di Java</title>
      <link>https://www.petanikode.com/menghitung-akar-kuadrat-dan-akar-kubik-di-java/</link>
      <pubDate>Sun, 15 May 2016 11:42:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/menghitung-akar-kuadrat-dan-akar-kubik-di-java/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://2.bp.blogspot.com/-P_5MSHpv9zA/VyKK4CjK9ZI/AAAAAAAACxk/Ptclg7VEuNQija-Acz8opEyp71ejcFQcwCLcB/s1600/Matematika%2BJava%2B-%2BPetani%2BKode.png&#34;&gt;&lt;img src=&#34;https://2.bp.blogspot.com/-P_5MSHpv9zA/VyKK4CjK9ZI/AAAAAAAACxk/Ptclg7VEuNQija-Acz8opEyp71ejcFQcwCLcB/s1600/Matematika%2BJava%2B-%2BPetani%2BKode.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pada pelajaran Matematika, kadang kita sering menemukan perhitungan akar.&lt;/p&gt;

&lt;p&gt;Contoh, akar kuadrat dari &lt;code&gt;25&lt;/code&gt; adalah &lt;code&gt;5&lt;/code&gt;, karena &lt;code&gt;5x5=25&lt;/code&gt;, bisa ditulis: $\sqrt{25} = 5$.
Lalu kalau akar kubik dari &lt;code&gt;27&lt;/code&gt; adalah &lt;code&gt;3&lt;/code&gt;, karena &lt;code&gt;3x3x3=27&lt;/code&gt;, bisa ditulis: $\sqrt[3]{27} = 3$.&lt;/p&gt;

&lt;p&gt;Bagaimana cara kita membuat perhitungan tersebu di Java?&lt;/p&gt;

&lt;p&gt;Perhitungan akar kuadrat dapat dilakukan dengan fungsi &lt;code&gt;sqrt()&lt;/code&gt;.
Fungsi ini terdapat dalam &lt;em&gt;class&lt;/em&gt; &lt;code&gt;Math&lt;/code&gt;.
Jadi untuk menghitung akar seperti di atas dalam kode java dapat dilakukan dengan cara berikut ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;Math.sqrt(25);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Fungsi tersebut akan menghasilkan: &lt;code&gt;5&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Sementara itu untuk perhitungan akar kubik dapat dilakukan dengan fungsi &lt;code&gt;cbrt()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Contoh:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;Math.cbrt(27);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Akan menghasilkan: &lt;code&gt;3&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;contoh-penerapannya-dalam-program&#34;&gt;Contoh Penerapannya dalam Program&lt;/h2&gt;

&lt;p&gt;Sekarang mari kita coba membuat program untuk menghitung rumus pitagoras.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Rumus pitagoras:&lt;/p&gt;

&lt;p&gt;c = $\sqrt{a^2 + b^2}$&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Maka kita bisa buat fungsi seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;static double pitagoras(double a, double b){
    double c = Math.sqrt( Math.pow(a,2) + Math.pow(b,2) );
    return c;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Fungsi &lt;code&gt;Math.pow()&lt;/code&gt; digunakan untuk membuat pangkat.&lt;/p&gt;

&lt;p&gt;Kode lengkap programmnya seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class HitungPitagoras {

    // fungsi rumus pitagoras
    static double pitagoras(double a, double b){
        double c = Math.sqrt( Math.pow(a,2) + Math.pow(b,2) );
        return c;
    }

    public static void main(String[] args) {
        double a = 3.2;
        double b = 4.5;

        // menggunakan atau pemanggilan fungsi pitagoras
        double c = pitagoras(a, b);

        System.out.println(&amp;quot;c = &amp;quot; + c);
    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasilnya:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;c = 5.52177507691141
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;kesimpulan&#34;&gt;Kesimpulan&lt;/h2&gt;

&lt;p&gt;Jadi, untuk menghitung akar kuadrat dan akar kubik di java,
kita gunakan fungsi &lt;code&gt;Math.sqrt()&lt;/code&gt; untuk akar kuadrat dan &lt;code&gt;Math.cbrt()&lt;/code&gt; untuk akar kubik.&lt;/p&gt;

&lt;script type=&#34;text/x-mathjax-config&#34;&gt;
MathJax.Hub.Config({
  tex2jax: {inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]]}
});
&lt;/script&gt;
&lt;script type=&#34;text/javascript&#34; async
  src=&#34;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.1/MathJax.js?config=TeX-MML-AM_CHTML&#34;&gt;
&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>Konversi Bilangan Desimal ke Bilangan Biner di Java</title>
      <link>https://www.petanikode.com/konversi-bilangan-desimal-ke-bilangan-biner-di-java/</link>
      <pubDate>Sat, 30 Apr 2016 16:00:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/konversi-bilangan-desimal-ke-bilangan-biner-di-java/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://2.bp.blogspot.com/-P_5MSHpv9zA/VyKK4CjK9ZI/AAAAAAAACxk/Ptclg7VEuNQija-Acz8opEyp71ejcFQcwCLcB/s1600/Matematika%2BJava%2B-%2BPetani%2BKode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://2.bp.blogspot.com/-P_5MSHpv9zA/VyKK4CjK9ZI/AAAAAAAACxk/Ptclg7VEuNQija-Acz8opEyp71ejcFQcwCLcB/s1600/Matematika%2BJava%2B-%2BPetani%2BKode.png&#34; /&gt;&lt;/a&gt;Konversi bilangan desimal ke biner sangat mudah dilakukan di Java, karena ada &lt;i&gt;method&lt;/i&gt; atau fungsi yang sudah disediakan untuk melakukannya. Berikut ini tampilan program konversi yang saya buat dengan Java (&lt;a href=&#34;http://petanikode.com/search/label/Android&#34; target=&#34;_blank&#34;&gt;Swing&lt;/a&gt;).&lt;a href=&#34;http://4.bp.blogspot.com/-yRpuezdZqlw/VyKc3J8no-I/AAAAAAAACx4/U5AojmPQXuQ0Zp9SztMpCexi24lbugbegCK4B/s1600/Program%2BKonversi%2BBilangan%2BDesimal%2Bke%2BBiner.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://4.bp.blogspot.com/-yRpuezdZqlw/VyKc3J8no-I/AAAAAAAACx4/U5AojmPQXuQ0Zp9SztMpCexi24lbugbegCK4B/s1600/Program%2BKonversi%2BBilangan%2BDesimal%2Bke%2BBiner.png&#34; /&gt;&lt;/a&gt;Terdapat dua tombol pada program tersebut. Tombol pertama berfungsi untuk menentukan tipe konversinya (Desi-ke-Bin atau Bin-ke-Desi). Kode yang dikerjakan di tombol tersebut adalah sebagai berikut.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;private void btnTipeKonversiActionPerformed(java.awt.event.ActionEvent evt) { &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if(btnTipeKonversi.getText().equals(&amp;ldquo;=&amp;gt;&amp;rdquo;)){&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; btnTipeKonversi.setText(&amp;rdquo;&amp;lt;=&amp;ldquo;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; btnTipeKonversi.setText(&amp;ldquo;=&amp;gt;&amp;rdquo;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if(btnTipeKonversi.getText().equals(&amp;ldquo;=&amp;gt;&amp;rdquo;)){&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; txtBiner.setEnabled(false);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; txtBiner.setText(&amp;ldquo;&amp;rdquo;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; txtDesimal.setEnabled(true);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; txtBiner.setEnabled(true);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; txtDesimal.setEnabled(false);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; txtDesimal.setText(&amp;ldquo;&amp;rdquo;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; }&lt;/code&gt;&lt;/pre&gt;Sedangkan tombol berikutnya berfungsi untuk mengkonversi bilangan yang diinputkan. Kodenya sebagai berikut.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;private void btnKonversiActionPerformed(java.awt.event.ActionEvent evt) { &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; try { &amp;nbsp; &lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if(txtBiner.getText().isEmpty()){&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int desi = Integer.valueOf(txtDesimal.getText());&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // konversi ke biner&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; String bin = Integer.toBinaryString(desi);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; txtBiner.setText(bin);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; String biner = txtBiner.getText();&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // konversi ke desimal&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int des = Integer.parseInt(biner, 2);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; txtDesimal.setText(String.valueOf(des));&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } catch (Exception e) {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; JOptionPane.showMessageDialog(null, &amp;ldquo;Input tidak valid: &amp;ldquo; + e.getMessage());&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } finally {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; txtBiner.setEnabled(true);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; txtDesimal.setEnabled(true);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; }&lt;code&gt;&lt;/code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;i&gt;Method&lt;/i&gt; atau fungsi yang melakukan konversi adalah &lt;code&gt;Integer.toBinaryString()&lt;/code&gt; dan &lt;code&gt;Integer.parseInt()&lt;/code&gt;. Fungsi&amp;nbsp;&lt;span style=&#34;font-family: monospace;&#34;&gt;Integer.toBinaryString()&lt;/span&gt;&amp;nbsp;memiliki parameter dengan tipe &lt;i&gt;integer&lt;/i&gt;. Sedangkan fungsi&amp;nbsp;&lt;span style=&#34;font-family: monospace;&#34;&gt;Integer.parseInt()&lt;/span&gt;&amp;nbsp;memiliki parameter dengan tipe &lt;i&gt;string&lt;/i&gt; dan &lt;i&gt;integer&lt;/i&gt; untuk nilai basis bilangannya. Nilai &lt;code&gt;2&lt;/code&gt; diberikan untuk menentukan bilangan berbasis &lt;code&gt;2&lt;/code&gt;.&lt;br /&gt;&lt;br /&gt;Hasil uji coba:&lt;a href=&#34;https://2.bp.blogspot.com/-d2hVS5LUkHQ/VyKgxCofSBI/AAAAAAAACyA/h1rLws6TW5U19y_STI5zlGjC5-Cx-s5NACLcB/s1600/Hasil%2BUji%2BCoba%2BProgram%2BKonversi%2BBilangan%2BDesimal%2BKe%2BBiner.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://2.bp.blogspot.com/-d2hVS5LUkHQ/VyKgxCofSBI/AAAAAAAACyA/h1rLws6TW5U19y_STI5zlGjC5-Cx-s5NACLcB/s1600/Hasil%2BUji%2BCoba%2BProgram%2BKonversi%2BBilangan%2BDesimal%2BKe%2BBiner.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Kode sumbernya tersedia di github: &lt;a href=&#34;https://github.com/petanikode/desi2biner&#34; target=&#34;_blank&#34;&gt;petanikode/desi2biner&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Operator ^ (xor) di Java bukan untuk Membuat Pangkat</title>
      <link>https://www.petanikode.com/operator--xor-di-java-bukan-untuk-membuat-pangkat/</link>
      <pubDate>Fri, 29 Apr 2016 06:25:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/operator--xor-di-java-bukan-untuk-membuat-pangkat/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://2.bp.blogspot.com/-P_5MSHpv9zA/VyKK4CjK9ZI/AAAAAAAACxk/Ptclg7VEuNQija-Acz8opEyp71ejcFQcwCLcB/s1600/Matematika%2BJava%2B-%2BPetani%2BKode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://2.bp.blogspot.com/-P_5MSHpv9zA/VyKK4CjK9ZI/AAAAAAAACxk/Ptclg7VEuNQija-Acz8opEyp71ejcFQcwCLcB/s1600/Matematika%2BJava%2B-%2BPetani%2BKode.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Sebuah kekeliruan saya temukan ketika memeriksa kode program milik teman. Dia mengimplementasikan rumus berikut ke dalam kode java.&lt;br /&gt;&lt;pre&gt;&lt;code&gt;y = x&lt;sup&gt;2&lt;/sup&gt; + 3&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Potongan kode program yang dia tulis.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;int x = 3;&lt;br /&gt;int y = x^2 + 3;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Hasilnya pun &lt;code&gt;6&lt;/code&gt;; tidak sesuai harapan. Seharusnya menghasilkan &lt;code&gt;12&lt;/code&gt;.&lt;br /&gt;&lt;br /&gt;Operator &lt;code&gt;^&lt;/code&gt; &lt;i&gt;(Exclusive Or)&lt;/i&gt; disingkat &lt;code&gt;xor&lt;/code&gt;, merupakan operator &lt;i&gt;bitwise&lt;/i&gt;. Operator &lt;i&gt;bitwise&lt;/i&gt; merupakan operator untuk memanipulasi bilangan biner.&lt;br /&gt;Contoh konversi bilangan desimal ke biner (8bit):&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;0 = 0000 0000&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;1 = 0000 0001&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;2 = 0000 0010&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;3 = 0000 0011&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;4 = 0000 0100&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;5 = 0000 0101&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;6 = 0000 0110&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;7 = 0000 0111&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;8 = 0000 1000&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;9 = 0000 1001&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;10 = 0000 1010&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;Kita tinjau lagi perhitungan kode di atas:&lt;br /&gt;&lt;pre&gt;&lt;code&gt;y = x^2 + 3&lt;br /&gt;y = 3^2 + 3&lt;br /&gt;y = 6&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Pada operasi &lt;code&gt;3^2&lt;/code&gt; akan menghasilkan &lt;code&gt;1&lt;/code&gt; (&lt;code&gt;0000 0001&lt;/code&gt;). Kemudian ditambah &lt;code&gt;3&lt;/code&gt; akan menghasilkan &lt;code&gt;6&lt;/code&gt;. Mengapa bisa menghasilkan &lt;code&gt;6&lt;/code&gt;, bukannya &lt;code&gt;1 + 3 = 4&lt;/code&gt;. Aneh ‘kan?&lt;br /&gt;&lt;br /&gt;Operator bitwise xor akan menhasilkan bilangan biner. Oleh sebab itu, penjumlahan yang dilakukan pada operasi di atas adalah penjumlahan bilangan biner, bukan penjumlahan bilangan desimal. Jadi &lt;code&gt;1 + 3 = 6&lt;/code&gt; itu sama dengan &lt;code&gt;00000001 + 00000011 = 000000110&lt;/code&gt;.&lt;br /&gt;&lt;h2 id=&#34;memahami-operator-^-(xor)&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#memahami-operator-^-(xor)&#34; name=&#34;memahami-operator-^-(xor)&#34;&gt;&lt;/a&gt;Memahami operator ^ (xor)&lt;/h2&gt;Jadi, megnapa &lt;code&gt;3^2&lt;/code&gt; menghasilkan &lt;code&gt;1&lt;/code&gt;? Silahkan tinjau lagi pelajaran logika matematika (&lt;code&gt;xor&lt;/code&gt;).&lt;br /&gt;&lt;table border=&#34;1&#34; cellpadding=&#34;10&#34; class=&#34;table table-responsive table bordered&#34; style=&#34;max-width: 100%; width: 100%;&#34;&gt;&lt;thead&gt;&lt;tr&gt; &lt;th style=&#34;text-align: center;&#34;&gt;a&lt;/th&gt; &lt;th style=&#34;text-align: center;&#34;&gt;b&lt;/th&gt; &lt;th style=&#34;text-align: center;&#34;&gt;a or b&lt;/th&gt; &lt;th style=&#34;text-align: center;&#34;&gt;a xor b&lt;/th&gt; &lt;/tr&gt;&lt;/thead&gt; &lt;tbody&gt;&lt;tr&gt; &lt;td style=&#34;text-align: center;&#34;&gt;1&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;1&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;1&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr&gt; &lt;td style=&#34;text-align: center;&#34;&gt;1&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;0&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;1&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;1&lt;/td&gt; &lt;/tr&gt;&lt;tr&gt; &lt;td style=&#34;text-align: center;&#34;&gt;0&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;1&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;1&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;1&lt;/td&gt; &lt;/tr&gt;&lt;tr&gt; &lt;td style=&#34;text-align: center;&#34;&gt;0&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;0&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;0&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;/tbody&gt; &lt;/table&gt;Sehingga,&lt;br /&gt;&lt;pre&gt;&lt;code&gt;  3 = 0000 0011&lt;br /&gt;  2 = 0000 0010&lt;br /&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; ^ (xor)&lt;br /&gt;3^2 = 0000 0001&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;bagaimana-membuat-pangkat-di-java?&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#bagaimana-membuat-pangkat-di-java?&#34; name=&#34;bagaimana-membuat-pangkat-di-java?&#34;&gt;&lt;/a&gt;Bagaimana membuat pangkat di Java?&lt;/h2&gt;Pangkat dapat dibuat dengan fungsi     &lt;code&gt;Math.pow()&lt;/code&gt;. Fungsi ini memiliki dua parameter. Parameter pertama adalah bilangan yang akan dipangkatkan. Parameter kedua adalah bilangan pangkatnya. Contoh: 3&lt;sup&gt;2&lt;/sup&gt;.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;Math.pow(3, 2);&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Akan menghasilkan &lt;code&gt;9&lt;/code&gt;.&lt;br /&gt;&lt;h2 id=&#34;kesimpulan&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#kesimpulan&#34; name=&#34;kesimpulan&#34;&gt;&lt;/a&gt;Kesimpulan&lt;/h2&gt;Operator &lt;i&gt;bitwise&lt;/i&gt; ^ (xor) bukan operator untuk pemangkatan. Operator &lt;i&gt;bitwise&lt;/i&gt; ^ (xor) digunakan untuk operasi bilangan biner.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>