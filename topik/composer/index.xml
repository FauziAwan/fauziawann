<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Composer on Petani Kode — Programmer Pengguna Linux</title>
    <link>https://www.petanikode.com/topik/composer/</link>
    <description>Recent content in Composer on Petani Kode — Programmer Pengguna Linux</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>id-ID</language>
    <copyright>Copyright (c) 2017, Petani Kode; all rights reserved.</copyright>
    <lastBuildDate>Sat, 03 Dec 2016 13:13:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.petanikode.com/topik/composer/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Cara Menggunakan Composer pada CodeIgniter</title>
      <link>https://www.petanikode.com/codeigniter-composer/</link>
      <pubDate>Sat, 03 Dec 2016 13:13:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/codeigniter-composer/</guid>
      <description>Composer sangat dibutuhkan apabila kita bekerja dengan banyak library.
Composer akan membantu kita menginstal, men-download, meng-update, dan mencarikan depedency dari library yang digunakan.
Pada CodeIgniter, composer sudah mulai didukung pada versi 3. Namun, autoload-nya belum diaktifkan secara default.
Pada kesempatan ini, saya akan membahas cara konfigurasi CodeIgniter agar dapat mengunakan Composer.
Mari kita mulai&amp;hellip;
Konfigurasi CodeIgniter Buka file konfigurasi CodeIgniter pada application/config/config.php. Kemudian isi nilai autoload untuk Composer seperti beikut ini:</description>
    </item>
    
    <item>
      <title>Cara Menggunakan Composer untuk Manajemen Proyek PHP</title>
      <link>https://www.petanikode.com/php-composer/</link>
      <pubDate>Sat, 26 Nov 2016 13:02:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/php-composer/</guid>
      <description>Bayangkan kita sedang mengerjakan proyek web dengan PHP.
Kemudian kita membutuhkan beberapa library untuk melengkapi proyek ini.
Biasanya, kita men-download sendiri library-nya dari internet.
Tapi&amp;hellip;
Kadang library yang satu dengan yang lain saling membutuhkan agar bisa digunakan. Hal ini disebut depedency (keterkaitan/ketergantungan).
Contohnya:
Library X membutuhkan library Y agar bisa digunakan, kemudian library Y membutuhkan library Q,R,S.
&amp;ldquo;Bagaimana kalau ada banyak sekali library yang digunakan?&amp;rdquo;
Pastinya akan repot mencari sendiri depedency library-nya.</description>
    </item>
    
  </channel>
</rss>