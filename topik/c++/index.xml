<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>C&#43;&#43; on Petani Kode — Programmer Pengguna Linux</title>
    <link>https://www.petanikode.com/topik/c&#43;&#43;/</link>
    <description>Recent content in C&#43;&#43; on Petani Kode — Programmer Pengguna Linux</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>id-ID</language>
    <copyright>Copyright (c) 2017, Petani Kode; all rights reserved.</copyright>
    <lastBuildDate>Sat, 12 Nov 2016 13:23:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.petanikode.com/topik/c++/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>7 (Bahasa) Pemrograman yang Dapat Dilakukan Langsung di Ubuntu</title>
      <link>https://www.petanikode.com/bahasa-pemrograman-di-ubuntu/</link>
      <pubDate>Sat, 12 Nov 2016 13:23:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/bahasa-pemrograman-di-ubuntu/</guid>
      <description>Hallo kawan, kali ini saya akan membahas 7 bahasa pemrograman yang dapat dilakukan langsung di Ubuntu tanpa menginstal apapun.
Eksperimen ini saya lakukan di Ubuntu 16.04 64bit Live CD. Saya sudah disediakan teks editor seperti Gedit, Vi, dan Nano untuk menulis kode.
Baca juga: 6 Teks Editor Berbasis Teks (CLI) di Linux untuk Menulis Kode
Adapun 7 bahasa pemrograman yang dapat dilakukan langsung di Ubuntu adalah sebagai berikut.
1. Pemrograman Shell Skrip Shell merupakan sebuah program yang bisa dijalankan di Unix Shell atau Command Line Interpreter (CLI).</description>
    </item>
    
    <item>
      <title>Belajar Pemrograman GUI dengan Qt di Linux: Persiapan Awal dan Pengenalan</title>
      <link>https://www.petanikode.com/qt-dasar/</link>
      <pubDate>Fri, 13 Feb 2015 09:29:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/qt-dasar/</guid>
      <description>Qt adalah salah satu librarya atau framework yang bisa kita gunakan untuk membuat antar muka grafis (GUI).
Qt tidak hanya bisa digunakan di Linux, Qt juga bisa untuk Windows dan MacOS.
Jadi, dengan Qt kita cukup buat satu program dan akan bisa dikompilasi dan berjalan di berbagai platform.
Pada tulisan ini, kita akan belajar membuat program Qt menggunakan Linux.
Dimulai dari melakukan instalasi, sampai membuat program sederhana.
Bahasa pemrograman yang digunakan oleh Qt adalah C++.</description>
    </item>
    
    <item>
      <title>Belajar Pemrograman C&#43;&#43;: Mengenal Variabel dan Tipe Data</title>
      <link>https://www.petanikode.com/cpp-variabel/</link>
      <pubDate>Fri, 05 Sep 2014 16:46:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/cpp-variabel/</guid>
      <description>(adsbygoogle = window.adsbygoogle || []).push({});  Inti dari sebuah program komputer adalah menerima input, melakukan pemrosesan, dan menghasilkan output.
Nilai input bisa kita dapatkan dari keyboard, file, kamera, mikrofon, dan sebagainya.
Sementara output dapat kita tampilkan ke monitor, cetak ke dokumen, atau ke dalam sebuah file.
Pada tahap pemrosesan, program membutuhkan bantuan variabel untuk menyimpan nilai sementara.
Sama seperti waktu kita berpikir, kita membutuhkan beberapa ingatan untuk memproses informasi.</description>
    </item>
    
    <item>
      <title>Belajar Pemrograman C&#43;&#43; di Linux: Membuat Program C&#43;&#43; Pertama</title>
      <link>https://www.petanikode.com/cpp-linux/</link>
      <pubDate>Sun, 31 Aug 2014 11:50:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/cpp-linux/</guid>
      <description>Ada banyak alat yang bisa kita gunakan untuk belajar pemrograman C++ di Linux.
Bisa menggunakan Qt Creator, Codeblocks, Codelite, Geany, dan sebagainya.
Namun, yang akan kita bahas di sini adalah menggunakan teks editor biasa dan melakukan kompilasi secara manual melalui terminal.
Kenapa menggunakan cara manual?
Pemrograman C++ menggunakan Qt Creator (selanjutnya kita sebut IDE) memang lebih mudah.
Tulis kode, kemunian klik run, program pun langsung diekseskusi.
Namun, untuk paham lebih dalam&amp;hellip; kita harus mencoba kompilasi program C++ secara manual.</description>
    </item>
    
  </channel>
</rss>