<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Petani Kode — Programmer Pengguna Linux</title>
    <link>https://www.petanikode.com/topik/java/index.xml</link>
    <description>Recent content in Java on Petani Kode — Programmer Pengguna Linux</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>id-id</language>
    <copyright>Copyright (c) 2017, Petani Kode; all rights reserved.</copyright>
    <atom:link href="https://www.petanikode.com/topik/java/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Belajar Pemrograman Kotlin di Linux: Pengenalan dan Persiapan</title>
      <link>https://www.petanikode.com/pemrograman-kotlin-di-linux/</link>
      <pubDate>Fri, 19 May 2017 00:07:50 +0800</pubDate>
      
      <guid>https://www.petanikode.com/pemrograman-kotlin-di-linux/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://petanikode.com/img/persiapan-kotlin/kotlin.png&#34; alt=&#34;Pemrograman Kotlin&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Kotlin merupakan bahasa pemrograman yang berjalan di atas JVM (Java Virtual Machine) dan juga bisa dikompilasi ke dalam Javascript. Kotlin dikembangkan  oleh JetBrains.&lt;/p&gt;

&lt;p&gt;Pada acara Google IO&amp;rsquo;17 kemarin, Kotlin resmi didukung sebagai bahasa pemrograman Android
dan akan mulai digunakan pada Android Studio 3.0. Karena itu, kita perlu mempelajari Kotlin agar tidak ketinggalan.&lt;/p&gt;

&lt;h2 id=&#34;persiapan-alat-dan-bahan&#34;&gt;Persiapan Alat dan Bahan&lt;/h2&gt;

&lt;p&gt;Adapun alat-alat penting yang harus dipersiapkan untuk
belajar kotlin adalah sebagai berikut:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Java SDK (&lt;a href=&#34;https://www.petanikode.com/pemrograman-java-di-linux/#2-jdk-java-development-kit&#34;&gt;Cara instal Java SDK di Linux&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Teks Editor/IDE&lt;/li&gt;
&lt;li&gt;Kotlin&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;instalasi-kotlin-di-linux&#34;&gt;Instalasi Kotlin di Linux&lt;/h2&gt;

&lt;p&gt;Hal pertama yang harus kita lakukan adalah menginstal Kotlin.&lt;/p&gt;

&lt;p&gt;Pertama kita membutuhkan sdkman untuk menginstal kotlin di linux.&lt;/p&gt;

&lt;p&gt;Silahkan install sdkman dengan perintah ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -s https://get.sdkman.io | bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Setelah itu buka terminal baru dan ketik perintah:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;bash ~/.sdkman/bin/sdkman-init.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Periksa versi sdkman yang terinstal dengan perintah &lt;code&gt;sdk version&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://petanikode.com/img/persiapan-kotlin/versi-sdkman.png&#34; alt=&#34;Versi SDKman&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Setelah itu baru kita bisa instal Kotlin dengan sdkman.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sdk install kotlin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tunggulah beberapa saat, kotlin akan segera terinstal.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://petanikode.com/img/persiapan-kotlin/instalasi-kotlin.png&#34; alt=&#34;Instalasi Kotlin&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;membuat-program-pertama&#34;&gt;Membuat Program pertama&lt;/h2&gt;

&lt;p&gt;Sekarang mari kita coba membuat program kotlin.&lt;/p&gt;

&lt;p&gt;Silahkan ikuti kode berikut:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;fun main(args: Array&amp;lt;String&amp;gt;){
	println(&amp;quot;Hello, World!&amp;quot;)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Simpan dengan nama &lt;code&gt;hello.kt&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Selanjutnya kita kompilasi kode tersebut dengan perintah:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;kotlinc hello.kt -include-runtime -d hello.jar
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Argumen &lt;code&gt;-include-runtime&lt;/code&gt; fungsinya agar program dapat dieksekusi.
Jika ingin mengkompilasi menjadi library, maka argumen ini tidak diperlukan.&lt;/p&gt;

&lt;p&gt;Sedangkan argumen &lt;code&gt;-d&lt;/code&gt; untuk menentukan target outputnya.
Pada contoh di atas hasil kompilasinya
akan berupa file jar.&lt;/p&gt;

&lt;p&gt;Selanjutnya kita bisa eksekusi programnya dengan perintah:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;kotlin hello.jar
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;atau&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;java -jar hello.jar
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Maka akan menghasilkan pesan &lt;code&gt;Hello, World!&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://petanikode.com/img/persiapan-kotlin/kotlin-hello-world.png&#34; alt=&#34;kotlin hello world&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;membuat-skrip-kotlin&#34;&gt;Membuat Skrip Kotlin&lt;/h2&gt;

&lt;p&gt;Pada program di atas, kita harus kompilasi dulu untuk dapat dijalankan.&lt;/p&gt;

&lt;p&gt;Sedangkan skrip kotlin tidak perlu dikompilasi. Skrip kotlin disimpan dengan
ekstensi &lt;code&gt;.kts&lt;/code&gt; &lt;em&gt;(kotlin script)&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Sebagai contoh, silahkan buat kode berikut.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;println(&amp;quot;Hello, ini adalah skrip kotlin&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;kemudian simpan dengan nama &lt;code&gt;hello.kts&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Setelah itu eksekusi/jalankan skrip tersebut dengan perintah:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;kotlinc -script hello.kts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Maka akan menghasilkan output seperti ini.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://petanikode.com/img/persiapan-kotlin/skrip-kotlin.png&#34; alt=&#34;Eksekusi skrip kotlin&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;membuka-repl&#34;&gt;Membuka REPL&lt;/h2&gt;

&lt;p&gt;REPL &lt;em&gt;(Read–Eval–Print Loop)&lt;/em&gt; bisa kita sebut sebagai mode interaktif atau shell (console).
REPL &lt;em&gt;(Read–Eval–Print Loop)&lt;/em&gt; Linuxsa kita sebut sebagai mode interaktif atau shell (console).&lt;/p&gt;

&lt;p&gt;Untuk membuka mode interaktif dari kotlin, kita bisa menggunakan perintah&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;kotlinc-jvm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Maka mode interaktif akan terbuka.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://petanikode.com/img/persiapan-kotlin/repl-kotlin.png&#34; alt=&#34;Mode interaktif kotlin&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Di sana kita bisa mengetikan perintah dan fungsi-fungsi kotlin. kemudian
kotlin akan langsung mengeksekusinya.&lt;/p&gt;

&lt;p&gt;Untuk keluar dari mode interaktif bisa dilakukan dengan mengetik perintah
&lt;code&gt;:quit&lt;/code&gt; atau menekan tombol &lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;D&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Mode interaktif ini dapat kita gunakan untuk mencoba-coba, eksperimen,
dan sebagainya.&lt;/p&gt;

&lt;!-- @TODO: Kompilasi Kotlin ke Javascript --&gt;

&lt;!-- @TODO: Pemrograman Kotlin Menggunakan Eclipse --&gt;

&lt;!-- @TODO: Pemrograman Kotlin Menggunakan Intellij IDEA --&gt;

&lt;h1 id=&#34;akhir-kata&#34;&gt;Akhir Kata&amp;hellip;&lt;/h1&gt;

&lt;p&gt;Kita sudah melakukan persiapan alat-alat untuk pemrograman Kotlin di Linux.&lt;/p&gt;

&lt;p&gt;Kita juga sudah mengenal cara membuat, cara kompilasi, dan cara menjalankan program kotlin.&lt;/p&gt;

&lt;p&gt;Jika ada yang ditanyakan, silahkan tuliskan di komentar.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Kenapa Bahasa Pemrograman Java Kurang Cocok untuk Pemula?</title>
      <link>https://www.petanikode.com/kenapa-bahasa-pemrograman-java-kurang-cocok-untuk-pemula/</link>
      <pubDate>Sat, 21 Jan 2017 16:45:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/kenapa-bahasa-pemrograman-java-kurang-cocok-untuk-pemula/</guid>
      <description>

&lt;p&gt;Sudah dua kali semester saya mengajar di praktikum pemrograman &lt;a href=&#34;https://www.petanikode.com/topik/java&#34;&gt;Java&lt;/a&gt;. Hasilnya, hanya sebagian mahasiswa yang mengerti. Sebagiannya lagi masih pusing. Karena mereka belum pernah ada pengalaman &lt;em&gt;coding&lt;/em&gt; sebelumnya. Bahasa pemrograman Java memang populer, oleh karena itu pihak kampus memilih bahasa ini untuk diajarkan pada semester I.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
width=&#34;720&#34;
height=&#34;380&#34;
alt=&#34;Anak-anak ngoding di sawah&#34;
src=&#34;https://4.bp.blogspot.com/-JLEbu94zv1c/WGjrfTdQdrI/AAAAAAAADjg/OkDhW7IniKY5d21yGt-Nb4rChbTtSPE9gCK4B/s1600/Anak-anak%2Bcoding%2Bdi%2Bsawah%2BPetani%2BKode.jpg&#34;
layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Om Endy Muhardin, dalam tulisan di blognya yang berjudul &lt;a href=&#34;http://software.endy.muhardin.com/java/java-tidak-untuk-pemula/&#34;&gt;Java: Tidak untuk Pemula&lt;/a&gt; mengatakan: &amp;ldquo;Java memang bahasa yang &lt;em&gt;mature&lt;/em&gt;. Sudah stabil (artinya tidak terlalu banyak perubahan fundamental) dan sudah teruji digunakan berbagai aplikasi besar dengan sukses. Tetapi tidak berarti mudah bagi pemula.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Kemudian saya mencoba mengumpulkan beberapa alasan, kenapa bahasa pemrograman Java kurang cocok untuk pemula.&lt;/p&gt;

&lt;h2 id=&#34;1-sintak-susah-dihapal&#34;&gt;1. Sintak Susah Dihapal&lt;/h2&gt;

&lt;p&gt;Menurut saya, sintak Java agak susah dihapal/diingat. Karena sintaknya cukup panjang. Pembuatan program &lt;em&gt;Hello World&lt;/em&gt; saja sampai sepanjang ini.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;package com.petanikode.HelloWorld;

    public class HelloWorld {
        public static void main(String[] args){
        System.out.println(&amp;quot;Hello World&amp;quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pada pertemuan pertama, saya mengajarkan kode di atas. Besoknya tidak ada yang ingat, kalau tidak mencontek.&lt;/p&gt;

&lt;h2 id=&#34;2-belum-belajar-akses-level&#34;&gt;2. Belum Belajar Akses Level&lt;/h2&gt;

&lt;p&gt;Pada pemrograman berorientasikan objek, ada yang namanya akses level &lt;i&gt;(public, protected, &lt;/i&gt;dan&lt;i&gt; private)&lt;/i&gt;. Akses level ini untuk menentukan akses pada class, atribut, dan method. Bagaimana seorang yang tidak pernah &lt;i&gt;coding&lt;/i&gt; akan mengerti hal ini. Sedangkan mereka tidak pernah belajar OOP. Saya pun ikut bingung mau menjelaskannya seperti apa.&lt;/p&gt;

&lt;h2 id=&#34;3-belum-belajar-class&#34;&gt;3. Belum Belajar Class&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Class&lt;/em&gt;, apaan itu? &lt;em&gt;Class&lt;/em&gt; adalah rancangan dari sebuah objek. Objek, apaan lagi itu? Duh! Akhirnya saya menjelaskan &lt;em&gt;Class&lt;/em&gt; itu untuk membuat nama program. Meskipun itu bukan pengertian yang sesungguhnya.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;package com.petanikode.NamaProgram;

    public class NamaProgram {
        public static void main(String[] args){
            System.out.println(&amp;quot;Hello World&amp;quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;4-belum-belajar-array&#34;&gt;4. Belum Belajar Array&lt;/h2&gt;

&lt;p&gt;Lihat saja pada program &lt;em&gt;HelloWorld&lt;/em&gt; di atas, array sudah digunakan untuk menyimpan argumen atau parameter. Mereka lalu bertanya, &amp;ldquo;Kata om tadi &lt;code&gt;String[] args&lt;/code&gt; itu sebuah &lt;em&gt;array&lt;/em&gt; yang bertipe data &lt;em&gt;String&lt;/em&gt;. &lt;em&gt;String&lt;/em&gt; itu apa dan &lt;em&gt;Array&lt;/em&gt; itu apa?&amp;rdquo; Penjelasan teknikal saya pun tidak bisa dipahami, karena mereka belum belajar variabel, tipe data, dan &lt;em&gt;array&lt;/em&gt;. Mau tidak mau, kita harus mengabaikan dulu bagian ini.&lt;/p&gt;

&lt;h2 id=&#34;5-belum-tahu-method-instance-dan-static&#34;&gt;5. Belum Tahu Method Instance dan Static&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Static void main&lt;/em&gt; itu maksudnya apa? Kenapa harus ada &lt;em&gt;static&lt;/em&gt;? &lt;em&gt;main&lt;/em&gt; adalah &lt;em&gt;method&lt;/em&gt; utama dalam program. &lt;em&gt;Method&lt;/em&gt; ini wajib ada agar program bisa dijalankan. Tunggu dulu, &lt;em&gt;method&lt;/em&gt; itu apa om?&lt;/p&gt;

&lt;p&gt;Karena belum memahami OOP, mereka pun tidak akan bisa mengerti bila saya jelakan dengan sudut pandang OOP.&lt;/p&gt;

&lt;h2 id=&#34;6-belum-paham-tentang-package&#34;&gt;6. Belum Paham Tentang Package&lt;/h2&gt;

&lt;p&gt;Apa maksud dari baris ini om?&lt;br&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;package com.petanikode.NamaProgram;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Itu untuk menandakan lokasi &lt;em&gt;namespace&lt;/em&gt; atau lokasi kodenya. Wah, &lt;em&gt;namespace&lt;/em&gt; itu apa lagi om?&lt;/p&gt;

&lt;p&gt;Jadi, itulah beberapa alasan kenapa bahasa &lt;a href=&#34;https://petanikode.com/search/label/Pemrograman&#34;&gt;pemrograman&lt;/a&gt; Java kurang cocok untuk pemula. Karena Java menggunakan paradigma OOP &lt;em&gt;(Object Oriented Programming)&lt;/em&gt;, sedangkan para pemula yang belum parnah &lt;em&gt;coding&lt;/em&gt; tidak pernah belajar tentang OOP. Namun, bukan berarti Java tidak boleh dipelajari oleh pemula. Silahkan dipelajari dengan tekun.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Apakah Perbedaan dari i&#43;&#43; dengan &#43;&#43;i?</title>
      <link>https://www.petanikode.com/apakah-perbedaan-dari-i-increment-dengan-increment-i/</link>
      <pubDate>Wed, 16 Nov 2016 05:07:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/apakah-perbedaan-dari-i-increment-dengan-increment-i/</guid>
      <description>&lt;p&gt;Sebagai pemula, kita mungkin sedikit bingung dengan perbedaan dari &lt;code&gt;i++&lt;/code&gt; &lt;em&gt;(post increment)&lt;/em&gt; dengan &lt;code&gt;++i&lt;/code&gt; &lt;em&gt;(pre increment)&lt;/em&gt;. Simbol &lt;code&gt;++&lt;/code&gt; artinya tambah satu (&lt;code&gt;+1&lt;/code&gt;) atau &lt;em&gt;increment&lt;/em&gt;. &lt;code&gt;i++&lt;/code&gt; dan &lt;code&gt;++i&lt;/code&gt; sering kita temukan ketika membuat sebuah perulangan.&lt;/p&gt;

&lt;p&gt;Contoh:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Post-Increment&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;for(int i = 1; i &amp;lt;= 10; i++){
    System.out.print(i);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Pre-Increment&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;for(int i = 1; i &amp;lt;= 10; ++i){
    System.out.print(i);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Kedua perulangan tersebut akan menghasilkan bilangan dari &lt;code&gt;1&lt;/code&gt; sampai &lt;code&gt;10&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;12345678910
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;i++&lt;/code&gt; itu sama seperti &lt;code&gt;i = i + 1&lt;/code&gt;, jadi nilai variabel &lt;code&gt;i&lt;/code&gt; yang sebelumnya akan ditambah satu. Sedangkan &lt;code&gt;++i&lt;/code&gt; sama seperti &lt;code&gt;i = 1 + i&lt;/code&gt;, satu ditambah dengan nilai variabel &lt;code&gt;i&lt;/code&gt; yang sebelumnya. Apakah ada perbedaan? tentu saja ada, posisi &lt;code&gt;i&lt;/code&gt; dengan angka &lt;code&gt;1&lt;/code&gt; berbeda. Namun, meskipun begitu, hasilnya akan tetap sama. Lalu, di mana kah letak perbedaan yang sesungguhnya?&lt;/p&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;p&gt;Perbedaan &lt;code&gt;i++&lt;/code&gt; dan &lt;code&gt;++i&lt;/code&gt; dapat kita lihat pada sebuah ekspresi atau &lt;em&gt;statement&lt;/em&gt;. Misalkan, selain variabel &lt;code&gt;i&lt;/code&gt;, kita punya variabel &lt;code&gt;a&lt;/code&gt;. Kemudian variabel &lt;code&gt;a&lt;/code&gt; kita isi dengan &lt;code&gt;i++&lt;/code&gt; atau &lt;code&gt;++i&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Post-Increment&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;int a;
int i = 1;
a = i++;
System.out.println(&amp;quot;a = &amp;quot; + a);
System.out.println(&amp;quot;i = &amp;quot; + i);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil output:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;a = 1
i = 2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;Pre-Increment&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;int a;
int i = 1;
a = ++i;
System.out.println(&amp;quot;a = &amp;quot; + a);
System.out.println(&amp;quot;i = &amp;quot; + i);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil output:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;a = 2
i = 2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Perhatikanlah! apakah ada perbedaan sekarang? Pada &lt;em&gt;post-increment&lt;/em&gt;, nilai &lt;code&gt;a&lt;/code&gt; akan mengambil nilai &lt;code&gt;i&lt;/code&gt;, tanpa ditambah satu. Sedangkan pada p&lt;em&gt;re-increment&lt;/em&gt;, nilai &lt;code&gt;a&lt;/code&gt; akan mengambil nilai &lt;code&gt;i&lt;/code&gt; yang ditambah satu terlebih dahulu. Itulah perbedaan yang cukup terlihat dari &lt;em&gt;post-increment&lt;/em&gt; (&lt;code&gt;i++&lt;/code&gt;) dengan &lt;em&gt;pre-increment&lt;/em&gt; (&lt;code&gt;++i&lt;/code&gt;).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Trik Agar Jendela JFrame Tampil di Tengah Layar</title>
      <link>https://www.petanikode.com/trik-agar-jendela-jframe-tampil-di-tengah-layar/</link>
      <pubDate>Fri, 29 Jul 2016 23:03:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/trik-agar-jendela-jframe-tampil-di-tengah-layar/</guid>
      <description>&lt;p&gt;Pada pemrograman GUI dengan &lt;i&gt;Java Swing&lt;/i&gt;, kita sering membuat jendela dengan JFrame. Namun, selalu tampil di pojok kiri atas layar. Pojok kiri atas adalah titik (&lt;code&gt;0&lt;/code&gt;,&lt;code&gt;0&lt;/code&gt;) dalam koordinat layar (x,y). Pada kesempatan ini saya akan berbagi trik, agar setiap jendela yang dibuat dengan &lt;i&gt;JFrame&lt;/i&gt; tampil di tengah-tengah layar.&lt;br /&gt;&lt;h2&gt;1. Komposisi Pustaka&lt;/h2&gt;Ada dua pustaka yang diperlukan untuk membuat jendela &lt;i&gt;JFrame&lt;/i&gt; tampil di tengah-tengah. Silahkan diimpor:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;import java.awt.Dimension;&lt;br /&gt;import java.awt.Toolkit;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;2. Kode Agar Tampil di Tengah&lt;/h2&gt;Letakan kode berikut di dalam konstruktor &lt;i&gt;JFrame&lt;/i&gt;.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();&lt;br /&gt;this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);&lt;/code&gt;&lt;/pre&gt;Pertama kita ambil ukuran layar dengan &lt;i&gt;Toolkit&lt;/i&gt;, kemudian ukuran tersebut dibuat menjadi objek dimensi. Kedua, membagi dua ukuran lebar dan tinggi layar dan dikurangi ukuran &lt;i&gt;JFrame&lt;/i&gt;. Kata kunci &lt;code&gt;this&lt;/code&gt; pada kode di atas merefrensi pada &lt;i&gt;JFrame&lt;/i&gt; (&lt;code&gt;this&lt;/code&gt; itu JFrame-nya). Hasil bagi dua dan pengurangan adalah titik tengah dan itu kita pakai sebagai lokasi awal &lt;i&gt;JFrame&lt;/i&gt;.&lt;br /&gt;&lt;h2&gt;3. Kode Lengkap&lt;/h2&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;&lt;span style=&#34;background-color: #b6d7a8;&#34;&gt;import java.awt.Dimension;&lt;br /&gt;import java.awt.Toolkit;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;public class JendelaPercobaan extends javax.swing.JFrame {&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; // konstruktor&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; public JendelaPercobaan() {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&#34;background-color: #b6d7a8;&#34;&gt;initComponents();&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; @SuppressWarnings(&amp;ldquo;unchecked&amp;rdquo;)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; // &amp;lt;editor-fold defaultstate=&amp;ldquo;collapsed&amp;rdquo; desc=&amp;ldquo;Generated Code&amp;rdquo;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; private void initComponents() {&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; jLabel1 = new javax.swing.JLabel();&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; jLabel1.setText(&amp;ldquo;www.petanikode.com&amp;rdquo;);&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; getContentPane().setLayout(layout);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; layout.setHorizontalGroup(&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; .addGroup(layout.createSequentialGroup()&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; .addGap(138, 138, 138)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; .addComponent(jLabel1)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; .addContainerGap(143, Short.MAX_VALUE))&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; );&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; layout.setVerticalGroup(&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; .addGroup(layout.createSequentialGroup()&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; .addGap(134, 134, 134)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; .addComponent(jLabel1)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; .addContainerGap(149, Short.MAX_VALUE))&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; );&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; pack();&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }// &amp;lt;/editor-fold&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; public static void main(String args[]) {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; /* Set the Nimbus look and feel &lt;em&gt;/&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; //&amp;lt;editor-fold defaultstate=&amp;ldquo;collapsed&amp;rdquo; desc=&amp;rdquo; Look and feel setting code (optional) &amp;ldquo;&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; /&lt;/em&gt; If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; * For details see &lt;a href=&#34;http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html&#34;&gt;http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html&lt;/a&gt; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;em&gt;/&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; try {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; if (&amp;ldquo;Nimbus&amp;rdquo;.equals(info.getName())) {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; javax.swing.UIManager.setLookAndFeel(info.getClassName());&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; break;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; } catch (ClassNotFoundException ex) {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; java.util.logging.Logger.getLogger(JendelaPercobaan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; } catch (InstantiationException ex) {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; java.util.logging.Logger.getLogger(JendelaPercobaan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; } catch (IllegalAccessException ex) {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; java.util.logging.Logger.getLogger(JendelaPercobaan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; } catch (javax.swing.UnsupportedLookAndFeelException ex) {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; java.util.logging.Logger.getLogger(JendelaPercobaan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; //&amp;lt;/editor-fold&amp;gt;&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; /&lt;/em&gt; Create and display the form */&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; java.awt.EventQueue.invokeLater(new Runnable() {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; public void run() {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; new JendelaPercobaan().setVisible(true);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; });&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; // Variables declaration - do not modify&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; private javax.swing.JLabel jLabel1;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; // End of variables declaration&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;4. Uji Coba&lt;/h2&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-oK3kCCbzHY0/V5tur3iPgKI/AAAAAAAAAAQ/R3HSbAw1p5Uvj8AMnm9A02kUKzjnFpoMgCK4B/s1600/Jendela%2BJFrame%2Btampil%2Bdi%2Btengah%2Blayar%2B-%2Bpetanikode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://4.bp.blogspot.com/-oK3kCCbzHY0/V5tur3iPgKI/AAAAAAAAAAQ/R3HSbAw1p5Uvj8AMnm9A02kUKzjnFpoMgCK4B/s1600/Jendela%2BJFrame%2Btampil%2Bdi%2Btengah%2Blayar%2B-%2Bpetanikode.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Referensi: &lt;a href=&#34;http://stackoverflow.com/a/2442610&#34; target=&#34;_blank&#34;&gt;Stack Overflow&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Menghitung Akar Kuadrat dan Akar Kubik di Java</title>
      <link>https://www.petanikode.com/menghitung-akar-kuadrat-dan-akar-kubik-di-java/</link>
      <pubDate>Sun, 15 May 2016 11:42:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/menghitung-akar-kuadrat-dan-akar-kubik-di-java/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://2.bp.blogspot.com/-P_5MSHpv9zA/VyKK4CjK9ZI/AAAAAAAACxk/Ptclg7VEuNQija-Acz8opEyp71ejcFQcwCLcB/s1600/Matematika%2BJava%2B-%2BPetani%2BKode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://2.bp.blogspot.com/-P_5MSHpv9zA/VyKK4CjK9ZI/AAAAAAAACxk/Ptclg7VEuNQija-Acz8opEyp71ejcFQcwCLcB/s1600/Matematika%2BJava%2B-%2BPetani%2BKode.png&#34; /&gt;&lt;/a&gt;Pada pelajaran Matematika, kadang kita sering menemukan perhitungan akar. Contoh, akar kuadrat dari &lt;code&gt;25&lt;/code&gt; adalah &lt;code&gt;5&lt;/code&gt;, karena &lt;code&gt;5x5=25&lt;/code&gt;, bisa ditulis: $\sqrt{25} = 5$. Lalu kalau akar kubik dari &lt;code&gt;27&lt;/code&gt; adalah &lt;code&gt;3&lt;/code&gt;, karena &lt;code&gt;3x3x3=27&lt;/code&gt;, bisa ditulis: $\sqrt[3]{27} = 3$.&lt;br /&gt;&lt;br /&gt;Bagaimana cara kita membuat perhitungan tersebu di Java? Perhitungan akar kuadrat dapat dilakukan dengan fungsi &lt;code&gt;sqrt()&lt;/code&gt;. Fungsi ini terdapat dalam &lt;i&gt;class&lt;/i&gt; &lt;code&gt;Math&lt;/code&gt;. Jadi untuk menghitung akar seperti di atas dalam kode java dapat dilakukan dengan cara berikut ini:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;Math.sqrt(25);&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Fungsi tersebut akan menghasilkan: &lt;code&gt;5&lt;/code&gt;&lt;br /&gt;Sementara itu untuk perhitungan akar kubik dapat dilakukan dengan fungsi &lt;code&gt;cbrt()&lt;/code&gt;. Contoh:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;Math.cbrt(27);&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Akan menghasilkan: &lt;code&gt;3&lt;/code&gt;&lt;br /&gt;&lt;h2&gt;Kesimpulan&lt;/h2&gt;Jadi, untuk menghitung akar kuadrad dan akar kubik di java, kita gunakan fungsi &lt;code&gt;Math.sqrt()&lt;/code&gt; untuk akar kuadrat dan &lt;code&gt;Math.cbrt()&lt;/code&gt; untuk akar kubik.&lt;script type=&#34;text/x-mathjax-config&#34;&gt;MathJax.Hub.Config({   tex2jax: {inlineMath: [[&amp;lsquo;$&amp;rsquo;,&amp;lsquo;$&amp;rsquo;], [&amp;rsquo;\(&amp;lsquo;,&amp;rsquo;\)&amp;lsquo;]]} }); &lt;/script&gt;&lt;br /&gt;&lt;script async=&#34;&#34; src=&#34;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML&#34; type=&#34;text/javascript&#34;&gt;&lt;/script&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Konversi Bilangan Desimal ke Bilangan Biner di Java</title>
      <link>https://www.petanikode.com/konversi-bilangan-desimal-ke-bilangan-biner-di-java/</link>
      <pubDate>Sat, 30 Apr 2016 16:00:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/konversi-bilangan-desimal-ke-bilangan-biner-di-java/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://2.bp.blogspot.com/-P_5MSHpv9zA/VyKK4CjK9ZI/AAAAAAAACxk/Ptclg7VEuNQija-Acz8opEyp71ejcFQcwCLcB/s1600/Matematika%2BJava%2B-%2BPetani%2BKode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://2.bp.blogspot.com/-P_5MSHpv9zA/VyKK4CjK9ZI/AAAAAAAACxk/Ptclg7VEuNQija-Acz8opEyp71ejcFQcwCLcB/s1600/Matematika%2BJava%2B-%2BPetani%2BKode.png&#34; /&gt;&lt;/a&gt;Konversi bilangan desimal ke biner sangat mudah dilakukan di Java, karena ada &lt;i&gt;method&lt;/i&gt; atau fungsi yang sudah disediakan untuk melakukannya. Berikut ini tampilan program konversi yang saya buat dengan Java (&lt;a href=&#34;http://petanikode.com/search/label/Android&#34; target=&#34;_blank&#34;&gt;Swing&lt;/a&gt;).&lt;a href=&#34;http://4.bp.blogspot.com/-yRpuezdZqlw/VyKc3J8no-I/AAAAAAAACx4/U5AojmPQXuQ0Zp9SztMpCexi24lbugbegCK4B/s1600/Program%2BKonversi%2BBilangan%2BDesimal%2Bke%2BBiner.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://4.bp.blogspot.com/-yRpuezdZqlw/VyKc3J8no-I/AAAAAAAACx4/U5AojmPQXuQ0Zp9SztMpCexi24lbugbegCK4B/s1600/Program%2BKonversi%2BBilangan%2BDesimal%2Bke%2BBiner.png&#34; /&gt;&lt;/a&gt;Terdapat dua tombol pada program tersebut. Tombol pertama berfungsi untuk menentukan tipe konversinya (Desi-ke-Bin atau Bin-ke-Desi). Kode yang dikerjakan di tombol tersebut adalah sebagai berikut.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;private void btnTipeKonversiActionPerformed(java.awt.event.ActionEvent evt) { &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if(btnTipeKonversi.getText().equals(&amp;ldquo;=&amp;gt;&amp;rdquo;)){&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; btnTipeKonversi.setText(&amp;rdquo;&amp;lt;=&amp;ldquo;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; btnTipeKonversi.setText(&amp;ldquo;=&amp;gt;&amp;rdquo;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if(btnTipeKonversi.getText().equals(&amp;ldquo;=&amp;gt;&amp;rdquo;)){&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; txtBiner.setEnabled(false);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; txtBiner.setText(&amp;ldquo;&amp;rdquo;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; txtDesimal.setEnabled(true);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; txtBiner.setEnabled(true);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; txtDesimal.setEnabled(false);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; txtDesimal.setText(&amp;ldquo;&amp;rdquo;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; }&lt;/code&gt;&lt;/pre&gt;Sedangkan tombol berikutnya berfungsi untuk mengkonversi bilangan yang diinputkan. Kodenya sebagai berikut.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;private void btnKonversiActionPerformed(java.awt.event.ActionEvent evt) { &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; try { &amp;nbsp; &lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if(txtBiner.getText().isEmpty()){&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int desi = Integer.valueOf(txtDesimal.getText());&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // konversi ke biner&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; String bin = Integer.toBinaryString(desi);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; txtBiner.setText(bin);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; String biner = txtBiner.getText();&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // konversi ke desimal&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int des = Integer.parseInt(biner, 2);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; txtDesimal.setText(String.valueOf(des));&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } catch (Exception e) {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; JOptionPane.showMessageDialog(null, &amp;ldquo;Input tidak valid: &amp;ldquo; + e.getMessage());&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } finally {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; txtBiner.setEnabled(true);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; txtDesimal.setEnabled(true);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; }&lt;code&gt;&lt;/code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;i&gt;Method&lt;/i&gt; atau fungsi yang melakukan konversi adalah &lt;code&gt;Integer.toBinaryString()&lt;/code&gt; dan &lt;code&gt;Integer.parseInt()&lt;/code&gt;. Fungsi&amp;nbsp;&lt;span style=&#34;font-family: monospace;&#34;&gt;Integer.toBinaryString()&lt;/span&gt;&amp;nbsp;memiliki parameter dengan tipe &lt;i&gt;integer&lt;/i&gt;. Sedangkan fungsi&amp;nbsp;&lt;span style=&#34;font-family: monospace;&#34;&gt;Integer.parseInt()&lt;/span&gt;&amp;nbsp;memiliki parameter dengan tipe &lt;i&gt;string&lt;/i&gt; dan &lt;i&gt;integer&lt;/i&gt; untuk nilai basis bilangannya. Nilai &lt;code&gt;2&lt;/code&gt; diberikan untuk menentukan bilangan berbasis &lt;code&gt;2&lt;/code&gt;.&lt;br /&gt;&lt;br /&gt;Hasil uji coba:&lt;a href=&#34;https://2.bp.blogspot.com/-d2hVS5LUkHQ/VyKgxCofSBI/AAAAAAAACyA/h1rLws6TW5U19y_STI5zlGjC5-Cx-s5NACLcB/s1600/Hasil%2BUji%2BCoba%2BProgram%2BKonversi%2BBilangan%2BDesimal%2BKe%2BBiner.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://2.bp.blogspot.com/-d2hVS5LUkHQ/VyKgxCofSBI/AAAAAAAACyA/h1rLws6TW5U19y_STI5zlGjC5-Cx-s5NACLcB/s1600/Hasil%2BUji%2BCoba%2BProgram%2BKonversi%2BBilangan%2BDesimal%2BKe%2BBiner.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Kode sumbernya tersedia di github: &lt;a href=&#34;https://github.com/petanikode/desi2biner&#34; target=&#34;_blank&#34;&gt;petanikode/desi2biner&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Operator ^ (xor) di Java bukan untuk Membuat Pangkat</title>
      <link>https://www.petanikode.com/operator--xor-di-java-bukan-untuk-membuat-pangkat/</link>
      <pubDate>Fri, 29 Apr 2016 06:25:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/operator--xor-di-java-bukan-untuk-membuat-pangkat/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://2.bp.blogspot.com/-P_5MSHpv9zA/VyKK4CjK9ZI/AAAAAAAACxk/Ptclg7VEuNQija-Acz8opEyp71ejcFQcwCLcB/s1600/Matematika%2BJava%2B-%2BPetani%2BKode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://2.bp.blogspot.com/-P_5MSHpv9zA/VyKK4CjK9ZI/AAAAAAAACxk/Ptclg7VEuNQija-Acz8opEyp71ejcFQcwCLcB/s1600/Matematika%2BJava%2B-%2BPetani%2BKode.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Sebuah kekeliruan saya temukan ketika memeriksa kode program milik teman. Dia mengimplementasikan rumus berikut ke dalam kode java.&lt;br /&gt;&lt;pre&gt;&lt;code&gt;y = x&lt;sup&gt;2&lt;/sup&gt; + 3&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Potongan kode program yang dia tulis.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;int x = 3;&lt;br /&gt;int y = x^2 + 3;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Hasilnya pun &lt;code&gt;6&lt;/code&gt;; tidak sesuai harapan. Seharusnya menghasilkan &lt;code&gt;12&lt;/code&gt;.&lt;br /&gt;&lt;br /&gt;Operator &lt;code&gt;^&lt;/code&gt; &lt;i&gt;(Exclusive Or)&lt;/i&gt; disingkat &lt;code&gt;xor&lt;/code&gt;, merupakan operator &lt;i&gt;bitwise&lt;/i&gt;. Operator &lt;i&gt;bitwise&lt;/i&gt; merupakan operator untuk memanipulasi bilangan biner.&lt;br /&gt;Contoh konversi bilangan desimal ke biner (8bit):&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;0 = 0000 0000&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;1 = 0000 0001&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;2 = 0000 0010&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;3 = 0000 0011&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;4 = 0000 0100&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;5 = 0000 0101&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;6 = 0000 0110&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;7 = 0000 0111&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;8 = 0000 1000&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;9 = 0000 1001&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;10 = 0000 1010&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;Kita tinjau lagi perhitungan kode di atas:&lt;br /&gt;&lt;pre&gt;&lt;code&gt;y = x^2 + 3&lt;br /&gt;y = 3^2 + 3&lt;br /&gt;y = 6&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Pada operasi &lt;code&gt;3^2&lt;/code&gt; akan menghasilkan &lt;code&gt;1&lt;/code&gt; (&lt;code&gt;0000 0001&lt;/code&gt;). Kemudian ditambah &lt;code&gt;3&lt;/code&gt; akan menghasilkan &lt;code&gt;6&lt;/code&gt;. Mengapa bisa menghasilkan &lt;code&gt;6&lt;/code&gt;, bukannya &lt;code&gt;1 + 3 = 4&lt;/code&gt;. Aneh ‘kan?&lt;br /&gt;&lt;br /&gt;Operator bitwise xor akan menhasilkan bilangan biner. Oleh sebab itu, penjumlahan yang dilakukan pada operasi di atas adalah penjumlahan bilangan biner, bukan penjumlahan bilangan desimal. Jadi &lt;code&gt;1 + 3 = 6&lt;/code&gt; itu sama dengan &lt;code&gt;00000001 + 00000011 = 000000110&lt;/code&gt;.&lt;br /&gt;&lt;h2 id=&#34;memahami-operator-^-(xor)&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#memahami-operator-^-(xor)&#34; name=&#34;memahami-operator-^-(xor)&#34;&gt;&lt;/a&gt;Memahami operator ^ (xor)&lt;/h2&gt;Jadi, megnapa &lt;code&gt;3^2&lt;/code&gt; menghasilkan &lt;code&gt;1&lt;/code&gt;? Silahkan tinjau lagi pelajaran logika matematika (&lt;code&gt;xor&lt;/code&gt;).&lt;br /&gt;&lt;table border=&#34;1&#34; cellpadding=&#34;10&#34; class=&#34;table table-responsive table bordered&#34; style=&#34;max-width: 100%; width: 100%;&#34;&gt;&lt;thead&gt;&lt;tr&gt; &lt;th style=&#34;text-align: center;&#34;&gt;a&lt;/th&gt; &lt;th style=&#34;text-align: center;&#34;&gt;b&lt;/th&gt; &lt;th style=&#34;text-align: center;&#34;&gt;a or b&lt;/th&gt; &lt;th style=&#34;text-align: center;&#34;&gt;a xor b&lt;/th&gt; &lt;/tr&gt;&lt;/thead&gt; &lt;tbody&gt;&lt;tr&gt; &lt;td style=&#34;text-align: center;&#34;&gt;1&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;1&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;1&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr&gt; &lt;td style=&#34;text-align: center;&#34;&gt;1&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;0&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;1&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;1&lt;/td&gt; &lt;/tr&gt;&lt;tr&gt; &lt;td style=&#34;text-align: center;&#34;&gt;0&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;1&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;1&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;1&lt;/td&gt; &lt;/tr&gt;&lt;tr&gt; &lt;td style=&#34;text-align: center;&#34;&gt;0&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;0&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;0&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;/tbody&gt; &lt;/table&gt;Sehingga,&lt;br /&gt;&lt;pre&gt;&lt;code&gt;  3 = 0000 0011&lt;br /&gt;  2 = 0000 0010&lt;br /&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; ^ (xor)&lt;br /&gt;3^2 = 0000 0001&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;bagaimana-membuat-pangkat-di-java?&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#bagaimana-membuat-pangkat-di-java?&#34; name=&#34;bagaimana-membuat-pangkat-di-java?&#34;&gt;&lt;/a&gt;Bagaimana membuat pangkat di Java?&lt;/h2&gt;Pangkat dapat dibuat dengan fungsi     &lt;code&gt;Math.pow()&lt;/code&gt;. Fungsi ini memiliki dua parameter. Parameter pertama adalah bilangan yang akan dipangkatkan. Parameter kedua adalah bilangan pangkatnya. Contoh: 3&lt;sup&gt;2&lt;/sup&gt;.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;Math.pow(3, 2);&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Akan menghasilkan &lt;code&gt;9&lt;/code&gt;.&lt;br /&gt;&lt;h2 id=&#34;kesimpulan&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#kesimpulan&#34; name=&#34;kesimpulan&#34;&gt;&lt;/a&gt;Kesimpulan&lt;/h2&gt;Operator &lt;i&gt;bitwise&lt;/i&gt; ^ (xor) bukan operator untuk pemangkatan. Operator &lt;i&gt;bitwise&lt;/i&gt; ^ (xor) digunakan untuk operasi bilangan biner.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pemrograman Android di Linux dengan Eclipse</title>
      <link>https://www.petanikode.com/pemrograman-android-di-linux-dengan-eclipse/</link>
      <pubDate>Thu, 28 Apr 2016 06:54:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/pemrograman-android-di-linux-dengan-eclipse/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;https://4.bp.blogspot.com/-whVGzAqrug0/VyE_fQ3y3pI/AAAAAAAACxY/XkZcdOHA2ZQymp-yJ90WzBSaR4CAkV0IgCLcB/s1600/Pemrograman%2BAndroid%2BEclipse%2BPetani%2BKode.png&#34;&gt;&lt;img src=&#34;https://4.bp.blogspot.com/-whVGzAqrug0/VyE_fQ3y3pI/AAAAAAAACxY/XkZcdOHA2ZQymp-yJ90WzBSaR4CAkV0IgCLcB/s1600/Pemrograman%2BAndroid%2BEclipse%2BPetani%2BKode.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Awalnya Google menggunakan Eclipse sebagai IDE untuk pengembangan Android.
Kemudian beralih ke Android Studio.&lt;/p&gt;

&lt;p&gt;Eclipse memang lebih ringan daripada Android Studio, akan tetapi Eclipse
tidak lagi didukung oleh Google.&lt;/p&gt;

&lt;p&gt;Namun tidak ada salahanya menggunakan Eclipse untuk membuat aplikasi Android.&lt;/p&gt;

&lt;p&gt;Bila kamu ingin mencobanya, silahkan ikuti langkah-langkah berikut
untuk melakukan perisapan.&lt;/p&gt;

&lt;h2 id=&#34;1-install-jdk&#34;&gt;1. Install JDK&lt;/h2&gt;

&lt;p&gt;JDK &lt;em&gt;(Java Development Kit)&lt;/em&gt; merupakan peralatan dasar yang dibutuhkan untuk
pemrograman Java.&lt;/p&gt;

&lt;p&gt;Karena aplikasi Android menggunakan bahasa pemrograman Java, maka kita perlu
menginstal JDK.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cara instal JDK di Linux:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;JDK versi 7:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install openjdk-7-jdk
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;JDK versi 8:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install openjdk-8-jdk
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;* pilih salah satu&lt;/p&gt;

&lt;h2 id=&#34;2-instal-eclipse&#34;&gt;2. Instal Eclipse&lt;/h2&gt;

&lt;p&gt;Silahkan instal Eclipse dengan perintah berikut:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install eclipse
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;3-install-android-sdk&#34;&gt;3. Install Android SDK&lt;/h2&gt;

&lt;p&gt;Android SDK adalah penting yang harus di persiapkan dalam pemrograman Android.
Karena Android SDK menyediakan API Android yang kita perlukan.&lt;/p&gt;

&lt;p&gt;Silahkan baca &lt;a href=&#34;https://www.petanikode.com/cara-instal-android-sdk-dan-ndk&#34;&gt;Cara Install Android SDK dan NDK di Linux&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;4-update-android-sdk&#34;&gt;4. Update Android SDK&lt;/h2&gt;

&lt;p&gt;Setelah Andoir SDK terinstal, lakukan update untuk mendapatkan API versi terbaru.&lt;/p&gt;

&lt;p&gt;Gunakan perintah berikut untuk membuka update manager Android SDK.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;android update sdk
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;5-buat-emulator&#34;&gt;5. Buat Emulator&lt;/h2&gt;

&lt;p&gt;Setelah semuanya terupdate, sekarang buat sebuah emulator baru.&lt;/p&gt;

&lt;p&gt;Emulator fungsinya untuk menjalankan aplikasi Android.&lt;/p&gt;

&lt;p&gt;Gunakan perintah berikut untuk membuat emulator:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;android avd
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;6-install-plug-in-adt&#34;&gt;6. Install Plug-in ADT&lt;/h2&gt;

&lt;p&gt;ADT &lt;em&gt;(Android Development Tool)&lt;/em&gt; merupakan plug-in yang diperlukan di Eclipse
agar dapat digunakan untuk pemrograman Android.&lt;/p&gt;

&lt;p&gt;Berikut ini cara instal Plug-in ADT di Eclipse:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Buka Eclipse&lt;/li&gt;
&lt;li&gt;Masuk ke menu &lt;em&gt;Help&amp;gt;Instal New Software&amp;hellip;&lt;/em&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Tambahkan Alamat Repositori ADT: &lt;a href=&#34;https://dl-ssl.google.com/android/eclipse/&#34;&gt;https://dl-ssl.google.com/android/eclipse/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-ZS6dsYqZgYY/Vw-JsRo48pI/AAAAAAAACr4/oc5rGiz9nGMHyS9-hs5rIqaBNbWRvAFBgCK4B/s1600/Tambahkan%2Balamat%2Brepostitori%2Bplugin%2BADT.png&#34;&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-ZS6dsYqZgYY/Vw-JsRo48pI/AAAAAAAACr4/oc5rGiz9nGMHyS9-hs5rIqaBNbWRvAFBgCK4B/s1600/Tambahkan%2Balamat%2Brepostitori%2Bplugin%2BADT.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Pilih semua kemudian klik &lt;em&gt;Next.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://4.bp.blogspot.com/-N4w0emO3X7Y/Vw-J9k8cKmI/AAAAAAAACsA/KCXoIL9YDiMNQ7lqAuI80aGDsF5hpqRLQCK4B/s1600/Detail%2Binstalasi%2Bplugin.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Klik &lt;em&gt;Next.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-EvaWoB8U5oo/Vw-KczeGN_I/AAAAAAAACsM/_RAxgmZXOsEwY-BcobIMCEDqpxJ2aDPHgCK4B/s1600/adt%2B3%2B-%2Bdetail%2Binstalasi.png&#34;&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-EvaWoB8U5oo/Vw-KczeGN_I/AAAAAAAACsM/_RAxgmZXOsEwY-BcobIMCEDqpxJ2aDPHgCK4B/s1600/adt%2B3%2B-%2Bdetail%2Binstalasi.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Pilih &lt;em&gt;&amp;ldquo;I accept the term..&amp;rdquo;&lt;/em&gt;, kemudian klik &lt;em&gt;Next.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-Dah31SsdK8g/Vw-KuXUjLvI/AAAAAAAACsY/UmjalrzUp5oDZqm1M370qEIug9Lvj2eRACK4B/s1600/adt%2B4%2B-%2BKetentuan%2Bdan%2Bpersetujuan.png&#34;&gt;&lt;img src=&#34;https://2.bp.blogspot.com/-Dah31SsdK8g/Vw-KuXUjLvI/AAAAAAAACsY/UmjalrzUp5oDZqm1M370qEIug9Lvj2eRACK4B/s1600/adt%2B4%2B-%2BKetentuan%2Bdan%2Bpersetujuan.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Klik &lt;em&gt;OK&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-rsOQEeNq_r4/Vw-K8eaogXI/AAAAAAAACsg/QlN-wJ2JJYwhf6wDDtt1JJN9-3GUkxbfACK4B/s1600/adt%2B5%2B-%2BKonfirmasi%2Bkeamanan.png&#34;&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-rsOQEeNq_r4/Vw-K8eaogXI/AAAAAAAACsg/QlN-wJ2JJYwhf6wDDtt1JJN9-3GUkxbfACK4B/s1600/adt%2B5%2B-%2BKonfirmasi%2Bkeamanan.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Klik &lt;em&gt;OK&lt;/em&gt; untuk membuka kembali Eclipse&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-qFO9_y2FS7A/Vw-LGhUYdpI/AAAAAAAACss/vGIfb4wQqRga2pbPJ7GNL5b0EpWNWNOtgCK4B/s1600/adt%2B6%2B-%2Binstalasi%2Bselesai.png&#34;&gt;&lt;img src=&#34;https://4.bp.blogspot.com/-qFO9_y2FS7A/Vw-LGhUYdpI/AAAAAAAACss/vGIfb4wQqRga2pbPJ7GNL5b0EpWNWNOtgCK4B/s1600/adt%2B6%2B-%2Binstalasi%2Bselesai.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;7-tes-proyek&#34;&gt;7. Tes Proyek&lt;/h2&gt;

&lt;p&gt;Buka Eclipse, buat sebuah proyek baru.&lt;/p&gt;

&lt;p&gt;Setelah itu, masuk ke menu &lt;em&gt;File&amp;gt;New&amp;gt;Other&lt;/em&gt; kemudian pilih &lt;em&gt;Android Application project.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-e1dNBty7v5E/Vw-MlG0OQtI/AAAAAAAACs8/fUQXvkH_T6MmtkHU2s4FMbb8ABs0tZnjACK4B/s1600/proyek%2B-%2BBuat%2Bproyek%2Bbaru.png&#34;&gt;&lt;img src=&#34;https://4.bp.blogspot.com/-e1dNBty7v5E/Vw-MlG0OQtI/AAAAAAAACs8/fUQXvkH_T6MmtkHU2s4FMbb8ABs0tZnjACK4B/s1600/proyek%2B-%2BBuat%2Bproyek%2Bbaru.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Kemudian isi keterangan data proyek:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-z4jYkgQPbWM/Vw-Mz-II50I/AAAAAAAACtE/3QMe64wWdjY3XNw44-iCUFNsKK6SxzBrwCK4B/s1600/proyek%2B-%2Bketerangan%2Bdata%2Bproyek.png&#34;&gt;&lt;img src=&#34;https://1.bp.blogspot.com/-z4jYkgQPbWM/Vw-Mz-II50I/AAAAAAAACtE/3QMe64wWdjY3XNw44-iCUFNsKK6SxzBrwCK4B/s1600/proyek%2B-%2Bketerangan%2Bdata%2Bproyek.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Lalu, tentukan lokasi dan ikon aplikasi, setelah itu klik &lt;em&gt;Next.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-dv-xco6533s/Vw-NFahuo9I/AAAAAAAACtM/Swhz4BFrPMUrQTzqqsgkq1kpGqOF6fEFgCK4B/s1600/proyek%2B-%2Bkonfigurasi%2Bproyek.png&#34;&gt;&lt;img src=&#34;https://1.bp.blogspot.com/-dv-xco6533s/Vw-NFahuo9I/AAAAAAAACtM/Swhz4BFrPMUrQTzqqsgkq1kpGqOF6fEFgCK4B/s1600/proyek%2B-%2Bkonfigurasi%2Bproyek.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tentukan ikon, setelah itu klik &lt;em&gt;Next&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-KNvRefOelcM/Vw-NMtxdp1I/AAAAAAAACtY/3MgZIiOJ8WcpYHv_Uo0ZI2TszrqLcKbfACK4B/s1600/proyek%2B-%2Bkonfigurasi%2Bikon%2Baplikasi.png&#34;&gt;&lt;img src=&#34;https://1.bp.blogspot.com/-KNvRefOelcM/Vw-NMtxdp1I/AAAAAAAACtY/3MgZIiOJ8WcpYHv_Uo0ZI2TszrqLcKbfACK4B/s1600/proyek%2B-%2Bkonfigurasi%2Bikon%2Baplikasi.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Buat &lt;em&gt;activity&lt;/em&gt;, Pilih saja &lt;em&gt;blank activity&lt;/em&gt;. Kemudian klik &lt;em&gt;Next&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-MW-0VjI7OKw/Vw-NaaZRN0I/AAAAAAAACtk/ZujgA5hq8e88gw-OeHRZDs2UJwh5sfE5QCK4B/s1600/proyek%2B-%2Bmembuat%2Baktivity.png&#34;&gt;&lt;img src=&#34;https://4.bp.blogspot.com/-MW-0VjI7OKw/Vw-NaaZRN0I/AAAAAAAACtk/ZujgA5hq8e88gw-OeHRZDs2UJwh5sfE5QCK4B/s1600/proyek%2B-%2Bmembuat%2Baktivity.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Isi nama &lt;em&gt;activity&lt;/em&gt;, Biarkan saja namanya &lt;em&gt;MainActivity&lt;/em&gt;. Kemudian klik &lt;em&gt;Finish&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-ONLqywZL3Kc/Vw-NljADolI/AAAAAAAACts/_Uop_Nn1vj0hMtBvbXHdzrmYIRl8GdrmACK4B/s1600/proyek%2B-%2Bnama%2Bactivity.png&#34;&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-ONLqywZL3Kc/Vw-NljADolI/AAAAAAAACts/_Uop_Nn1vj0hMtBvbXHdzrmYIRl8GdrmACK4B/s1600/proyek%2B-%2Bnama%2Bactivity.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Proyek pertama sudah jadi.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-yEJF9sUkgpw/Vw-Nsww3r1I/AAAAAAAACt4/WOZo-2x2HxAsFRbHs0SUtHT1B_4dAk5ZQCK4B/s1600/proyek%2B-%2BProyek%2BSedang%2Bdikerjakan.png&#34;&gt;&lt;img src=&#34;https://4.bp.blogspot.com/-yEJF9sUkgpw/Vw-Nsww3r1I/AAAAAAAACt4/WOZo-2x2HxAsFRbHs0SUtHT1B_4dAk5ZQCK4B/s1600/proyek%2B-%2BProyek%2BSedang%2Bdikerjakan.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Klik kanan pada &lt;em&gt;TesProyek&amp;gt;Pilih Run As&amp;gt;Android Application&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://4.bp.blogspot.com/-y230elrlXco/Vw-N-_QT4FI/AAAAAAAACuE/-QnmzLLOIbIyHiRm2pzO9Vs7axgRcjq3wCK4B/s1600/proyek%2B-%2BRun%2BProyek%2BAndroid%2Bdi%2BEclipse.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Proyek berhasil di-run pada emulator.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-ZY_3F54_r2Y/Vw-OEh-sjPI/AAAAAAAACuQ/2ksqSTJLz9YoThlcnSXcy3_6XKAN2DmKwCK4B/s1600/Proyek%2BBerhasil%2Bdi%2Brun.png&#34;&gt;&lt;img src=&#34;https://4.bp.blogspot.com/-ZY_3F54_r2Y/Vw-OEh-sjPI/AAAAAAAACuQ/2ksqSTJLz9YoThlcnSXcy3_6XKAN2DmKwCK4B/s1600/Proyek%2BBerhasil%2Bdi%2Brun.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pemrograman Java di Lab (16): Fungsi dan Method</title>
      <link>https://www.petanikode.com/pemrograman-java-di-lab-16-fungsi-dan-method/</link>
      <pubDate>Fri, 22 Apr 2016 20:31:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/pemrograman-java-di-lab-16-fungsi-dan-method/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Pemrograman Java di Lab Petani Kode&#34; src=&#34;https://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; /&gt;&lt;br /&gt;Fungsi dan &lt;i&gt;Method&lt;/i&gt; merupakan bagian dari program yang bertugas melakukan operasi tertentu. Pada teknik pemrograman prosedural seperti pemrograman Pascal, C, C++, PHP, dsb. Program dibentuk dari kumpulan fungsi atau prosedur yang saling bekerja sama. Fungsi-fungsi tersebut akan dipanggil pada fungsi &lt;code&gt;main&lt;/code&gt;. Fungsi &lt;code&gt;main&lt;/code&gt; merupakan fungsi utama dalam sebuah program.&lt;br /&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-LMvdR9YOW-U/VxnanA7PSJI/AAAAAAAACwE/rw65mXoukjoYuJ9yaeo8ershV1L82ixggCK4B/s1600/Program%2BKalkulator%2Bdibuat%2Bdari%2Bsekumpulan%2Bfungsi.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img alt=&#34;Ilustrasi komponen program yang dibangun dari fungsi-fungsi&#34; border=&#34;0&#34; src=&#34;https://3.bp.blogspot.com/-LMvdR9YOW-U/VxnanA7PSJI/AAAAAAAACwE/rw65mXoukjoYuJ9yaeo8ershV1L82ixggCK4B/s1600/Program%2BKalkulator%2Bdibuat%2Bdari%2Bsekumpulan%2Bfungsi.png&#34; title=&#34;&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Pada pemrograman Java, Fungsi atau prosedur dikenal dengan method (metode). Java sepenuhnya menerapkan paradigma pemrograman berorientasi objek (PBO), dalam bahasa inggris disebut OOP &lt;i&gt;(Object Oriented Programming)&lt;/i&gt;.&lt;br /&gt;&lt;br /&gt;Pada pertemuan pertama praktikum ini, kita memandang &lt;i&gt;class&lt;/i&gt; Java sebagai sebuah program. Di dalam kelas java tedapat atribut dan &lt;i&gt;method&lt;/i&gt;. Atribut merupakan sebuah variabel dan &lt;i&gt;method&lt;/i&gt; merupakan sebuah fungsi untuk melakukan operasi tertentu terhadap atribut.&lt;br /&gt;&lt;h2 id=&#34;membuat-fungsi-atau-method&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#membuat-fungsi-atau-method&#34; name=&#34;membuat-fungsi-atau-method&#34;&gt;&lt;/a&gt;Membuat Fungsi atau Method&lt;/h2&gt;Fungsi atau method, harus dibuat di dalam &lt;i&gt;class&lt;/i&gt;, format dasarnya:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;static TypeDataKembalian namaMethod(){&lt;br /&gt;    // statemen atau kode fungsi&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Contoh:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;static void ucapSalam(){&lt;br /&gt;    System.out.println(&amp;ldquo;Assalamualaykum&amp;rdquo;);&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Kita menggunakan kata kunci &lt;code&gt;static&lt;/code&gt; agar fungsi dapat dipanggil di dalam fungsi &lt;i&gt;main&lt;/i&gt;. Tipe data &lt;code&gt;void&lt;/code&gt; artinya kosong, fungsi tersebut tidak mengebalikan nilai apa-apa.&lt;br /&gt;&lt;h2 id=&#34;memanggil-fungsi&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#memanggil-fungsi&#34; name=&#34;memanggil-fungsi&#34;&gt;&lt;/a&gt;Memanggil Fungsi&lt;/h2&gt;Fungsi dapat dipanggil dari fungsi &lt;code&gt;main&lt;/code&gt; atau dari fungsi yang lain. Contoh pemanggilan fungsi dalam dalam funsgi &lt;code&gt;main&lt;/code&gt;.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;public static void main(String[] args){&lt;br /&gt;    ucapSalam();&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Akan menghasilkan output:&lt;br /&gt;&lt;pre&gt;&lt;code&gt;Assalamualaykum&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;fungsi-dengan-parameter&#34;&gt;Fungsi dengan Parameter&lt;/h2&gt;Parameter merupakan variabel yang akan diolah atau diproses di dalam fungsi. Contoh fungsi yang memiliki parameter:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;static void ucapin(String ucapan){&lt;br /&gt;    System.out.println(ucapan);&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Pemanggilannya:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;ucapin(&amp;ldquo;Hallo!&amp;rdquo;);&lt;br /&gt;ucapin(&amp;ldquo;Selamat datang di pemrograman Java&amp;rdquo;);&lt;br /&gt;ucapin(&amp;ldquo;Saya kira ini bagian terakhir&amp;rdquo;);&lt;br /&gt;ucapin(&amp;ldquo;Sampai jumpa lagi, ya!&amp;rdquo;);&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Hasil outputnya:&lt;br /&gt;&lt;pre&gt;&lt;code&gt;Hallo!&lt;br /&gt;Selamat datang di pemrograman Java&lt;br /&gt;Saya kira ini bagian terakhir&lt;br /&gt;Sampai jumpa lagi, ya!&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Tipe data dari parameter harus dituliskan. Untuk parameter yang lebih dari satu, dipisah dengan tanda koma (&lt;code&gt;,&lt;/code&gt;). Contoh:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;static void ucapin(String ucapan, String kepada){&lt;br /&gt;    //&amp;hellip;&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div id=&#34;fungsi-yang-mengembalikan-nilai&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#fungsi-yang-mengembalikan-nilai&#34; name=&#34;fungsi-yang-mengembalikan-nilai&#34;&gt;&lt;/a&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-3LilJsKfgRM/VxnbVspOUDI/AAAAAAAACwQ/t6RCz2U4PJg8lvvkBmexayJWHOnsaEbwQCK4B/s1600/Contoh%2BFungsi%2Bdi%2BJava.png&#34;&gt;&lt;img alt=&#34;Contoh Fungsi pada Java&#34; border=&#34;0&#34; src=&#34;https://4.bp.blogspot.com/-3LilJsKfgRM/VxnbVspOUDI/AAAAAAAACwQ/t6RCz2U4PJg8lvvkBmexayJWHOnsaEbwQCK4B/s1600/Contoh%2BFungsi%2Bdi%2BJava.png&#34; title=&#34;&#34; /&gt;&lt;/a&gt; &lt;/div&gt;&lt;h2 id=&#34;fungsi-yang-mengembalikan-nilai&#34;&gt;Fungsi yang Mengembalikan Nilai&lt;/h2&gt;Setelah data yang diinputkan melalui parameter diproses, fungsi harus mengembalikan nilai agar dapat diolah di proses selanjutnya. Pengembalian nilai pada fungsi menggunakan kata kunci &lt;code&gt;return&lt;/code&gt;. Jangan lupa juga untuk menuliskan tipe data kembaliannya. Contoh fungsi yang mengembalikan nilai:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;static int luasPersegi(int sisi){&lt;br /&gt;    int luas = sisi * sisi;&lt;br /&gt;    return luas;&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Fungsi &lt;code&gt;luasPersegi()&lt;/code&gt; akan mengembalikan nilai berupa &lt;i&gt;integer&lt;/i&gt; (&lt;code&gt;int&lt;/code&gt;) dari hasil rumus &lt;code&gt;luas&lt;/code&gt; (persegi). Contoh pemanggilanya:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;System.out.println(&amp;ldquo;Luas Persegi dengan panjang sisi 5 adalah &amp;rdquo; + luasPersegi(5));&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Hasil Output:&lt;br /&gt;&lt;pre&gt;&lt;code&gt;Luas Persegi dengan panjang sisi 5 adalah 25&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;pemanggilan-fungsi-di-fungsi-lain&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#pemanggilan-fungsi-di-fungsi-lain&#34; name=&#34;pemanggilan-fungsi-di-fungsi-lain&#34;&gt;&lt;/a&gt;Pemanggilan Fungsi di Fungsi Lain&lt;/h2&gt;Fungsi-fungsi dapat saling memanggil untuk memproses data. Contoh, sebuah program Kalkulator Bangun Ruang memiliki fungsi-fungsi: &lt;code&gt;luasPersegi()&lt;/code&gt;, &lt;code&gt;luasPersegiPanjang()&lt;/code&gt;, &lt;code&gt;luasSegitiga()&lt;/code&gt;, &lt;code&gt;luasBalok()&lt;/code&gt;, &lt;code&gt;luasKubus()&lt;/code&gt; dsb. Fungsi-fungsi tersebut dapat saling membantu, contoh fungsi &lt;code&gt;luasKubus()&lt;/code&gt; membutuhkan fungsi &lt;code&gt;luasPersegi()&lt;/code&gt;.&lt;br /&gt;Rumus&lt;br /&gt;&lt;pre&gt;&lt;code&gt;Luas Kubus = 6 * luasPersegi;&lt;br /&gt;Luas Persegi = sisi * sisi;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Maka Bentuk programnya bisa seperti ini:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;public class BangunRuang {&lt;br /&gt;&lt;br /&gt;    public static void main(String[] args) {&lt;br /&gt;&lt;br /&gt;        int s = 12;&lt;br /&gt;        int luas = luasKubus(s);&lt;br /&gt;&lt;br /&gt;        System.out.println(luas);&lt;br /&gt;&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    static int luasPersegi(int sisi){&lt;br /&gt;        return sisi * sisi;&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    static int luasKubus(int sisi){&lt;br /&gt;        return 6 * luasPersegi(sisi);&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Hasil output&lt;br /&gt;&lt;pre&gt;&lt;code&gt;864&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Itulah beberapa hal seputar fungsi atau method di Java. Jika anda membaca dan mengikuti serial artikel ini dari &lt;a href=&#34;http://www.petanikode.com/2015/10/pemrograman-java-di-lab-1-berkenalan.html&#34; target=&#34;_blank&#34;&gt;awal&lt;/a&gt;, saya kira anda sudah menguasai teknik dasar pemrograman java. Sekian dulu, mungkin artikel ini masih punya lanjutan. Ditunggu saja, ya!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Belajar Pemrograman Java: Cara Menggunakan Array untuk Menyimpan Banyak Hal</title>
      <link>https://www.petanikode.com/pemrograman-java-array/</link>
      <pubDate>Thu, 21 Apr 2016 22:34:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/pemrograman-java-array/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://2.bp.blogspot.com/-mLQEXOE1N5A/WPMIXz2iqnI/AAAAAAAAEwE/aKOI7Cgx9aoFhSvFDyMSOFSYYjMYplcoACPcB/s1600/array-dalam-pemrograman.png&#34; alt=&#34;Cara menggunakan Array&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Apa yang akan kita lakukan bila memiliki banyak data yang akan disimpan dalam vairabel?&lt;/p&gt;

&lt;p&gt;Misalkan kita ingin menyimpan nama-nama teman dalam variabel.&lt;/p&gt;

&lt;p&gt;Maka mungkin kita akan melakukannya seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;String namaTeman1 = &amp;quot;Linda&amp;quot;;
String namaTeman2 = &amp;quot;Santi&amp;quot;;
String namaTeman3 = &amp;quot;Susan&amp;quot;;
String namaTeman4 = &amp;quot;Mila&amp;quot;;
String namaTeman5 = &amp;quot;Ayu&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hal ini sah-sah saja.&lt;/p&gt;

&lt;p&gt;Akan tetapi&amp;hellip;&lt;/p&gt;

&lt;p&gt;Masalahnya bagaimana kala datanya banyak, misalkan ada 100 data,
pastinya capek donk membuat variabel sebanyak itu.&lt;/p&gt;

&lt;p&gt;Karena itu, kita bisa menyimpan itu semua dalam Array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apa itu Array?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Array adalah sebuah variabel yang bisa menyimpan banyak data dalam satu variabel.&lt;/p&gt;

&lt;p&gt;Array menggunakan indeks untuk memudahkan akses terhadap data yang disimpannya.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://4.bp.blogspot.com/-S515_Xifn20/WPL1deiMlOI/AAAAAAAAEvI/9UXBfcuiPR4Tyojj83Yf45bBkg2MLgPpACPcB/s1600/contoh-array.png&#34; alt=&#34;Contoh Array&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Indeks array selalu dimulai dari &lt;code&gt;0&lt;/code&gt;&amp;hellip;&lt;/p&gt;

&lt;p&gt;&amp;hellip;dan perlu diketahui juga, indeks tidak selalu dalam bentuk angka.
Bisa juga karakter atau teks.&lt;/p&gt;

&lt;h2 id=&#34;cara-membuat-array-di-java&#34;&gt;Cara Membuat Array di Java&lt;/h2&gt;

&lt;p&gt;Cara membuat array kosong:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;// cara pertama
String[] nama;

// cara kedua
String nama[];

// cara ketiga dengan kata kunci new
String[] nama = new String[5];
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Parhatikan&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Kita menggunakan kurung siku &lt;code&gt;[]&lt;/code&gt; untuk membuat array;&lt;/li&gt;
&lt;li&gt;Kurung siku bisa diletakkan setelah tipe data atau nama array;&lt;/li&gt;
&lt;li&gt;Angka &lt;code&gt;5&lt;/code&gt; dalam kurung artinya batas atau ukuran array-nya.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Array yang kosong siap diisi dengan data. Pastikan mengisinya dengan data
yang sesuai dengan tipe datanya.&lt;/p&gt;

&lt;p&gt;Kita bisa mengisinya seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;nama[0] = &amp;quot;Linda&amp;quot;;
nama[1] = &amp;quot;Santi&amp;quot;;
nama[2] = &amp;quot;Susan&amp;quot;;
nama[3] = &amp;quot;Mila&amp;quot;;
nama[4] = &amp;quot;Ayu&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Atau kalau tidak mau repot, kita bisa membuat array sekaligus langsung
mengisinya.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;String[] nama = {&amp;quot;Linda&amp;quot;, &amp;quot;Santi&amp;quot;, &amp;quot;Susan&amp;quot;, &amp;quot;Mila&amp;quot;, &amp;quot;Ayu&amp;quot;};
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;mengambil-data-dari-array&#34;&gt;Mengambil Data dari Array&lt;/h2&gt;

&lt;p&gt;Seperti yang sudah kita ketahui, array memiliki indeks untuk memudahkan
kita mengakses datanya.&lt;/p&gt;

&lt;p&gt;Karena itu, kita bisa mengambil datanya dengan cara seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;// membuat array
String[] nama = {&amp;quot;Linda&amp;quot;, &amp;quot;Santi&amp;quot;, &amp;quot;Susan&amp;quot;, &amp;quot;Mila&amp;quot;, &amp;quot;Ayu&amp;quot;};

// mengambil data array
System.out.println(teman[2]);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Kira-kira apa hasil outputnya?&lt;/p&gt;

&lt;p&gt;Yep! benar sekali, hasil outputnya adalah:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Susan
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Karena &lt;code&gt;Susan&lt;/code&gt; terletak di indeks ke-2.&lt;/p&gt;

&lt;h2 id=&#34;menggunakan-perulangan&#34;&gt;Menggunakan Perulangan&lt;/h2&gt;

&lt;p&gt;Mengambil data satu per satu dari array mungkin cukup melelahkan, karena kita harus mengtik ulang nama array-nya dengan indeks yang berbeda.&lt;/p&gt;

&lt;p&gt;Contoh:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;System.out.println(teman[0]);
System.out.println(teman[1]);
System.out.println(teman[2]);
System.out.println(teman[3]);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bagaimana kalau data array-nya sampai 1000,
maka kita harus mengetik kode sebanyak seribu kali.&lt;/p&gt;

&lt;p&gt;Karena itu, disinilah peran perulangan.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-pXqVRCPTKn0/Vxjjx7C66lI/AAAAAAAACvo/jwQlQIf84SoJLlK-PwdAfjFi-Gwqa5F3ACK4B/s1600/Contoh%2BArray%2Bdi%2BJava%2B-%2BPetani%2BKode.png&#34;&gt;&lt;img src=&#34;https://4.bp.blogspot.com/-pXqVRCPTKn0/Vxjjx7C66lI/AAAAAAAACvo/jwQlQIf84SoJLlK-PwdAfjFi-Gwqa5F3ACK4B/s1600/Contoh%2BArray%2Bdi%2BJava%2B-%2BPetani%2BKode.png&#34; alt=&#34;Contoh Array yang diakses dengan perulangan&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Perhatikan&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;Di sana kita menggunakan atribut &lt;code&gt;length&lt;/code&gt; untuk mengambil panjang array-nya.&lt;/p&gt;

&lt;p&gt;Jadi, perulangan akan dilakukan sebanyak isi array-nya.&lt;/p&gt;

&lt;h2 id=&#34;sekarang-mari-kita-latihan&#34;&gt;Sekarang Mari Kita Latihan&lt;/h2&gt;

&lt;p&gt;Silahkan buat class bernama &lt;code&gt;Buah&lt;/code&gt;, kemudian ikuti kode berikut:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.util.Scanner;

public class Buah {
    public static void main(String[] args) {

        // membuat array buah-buahan
        String[] buah = new String[5];

        // membuat scanner
        Scanner scan = new Scanner(System.in);

        // mengisi data ke array
        for( int i = 0; i &amp;lt; buah.length; i++ ){
            System.out.print(&amp;quot;Buah ke-&amp;quot; + i + &amp;quot;: &amp;quot;);
            buah[i] = scan.nextLine();
        }

        System.out.println(&amp;quot;---------------------------&amp;quot;);

        // menampilkan semua isi array
        for( String b : buah ){
            System.out.println(b);
        }

    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil outputnya:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-Eu9sKzaEPhQ/WPL9CM8eOiI/AAAAAAAAEvk/PKKEamCynOoxHlwY9UV9iGzniKi-8j0SgCPcB/s1600/Hasil%2Boutput%2Bprogram%2Barray.png&#34; alt=&#34;Hasil output program array&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Perhatikan&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;Di sana kita menggunakan perulangan &lt;em&gt;foreach&lt;/em&gt; untuk menampilkan isi array.&lt;/p&gt;

&lt;p&gt;Seperti yang sudah kita pelajari pada materi &lt;a href=&#34;https://www.petanikode.com/pemrograman-java-perulangan/&#34;&gt;Perulangan di Java&lt;/a&gt;,
perulangan ini dapat kita gunakan untuk menampilkan isi array.&lt;/p&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;h2 id=&#34;array-multi-dimensi&#34;&gt;Array Multi Dimensi&lt;/h2&gt;

&lt;p&gt;Array multi dimensi artinya array yang memiliki lebih dari satu dimensi.&lt;/p&gt;

&lt;p&gt;Atau kita bisa sebut, array di dalam array.&lt;/p&gt;

&lt;p&gt;Jumlah dimensinya tidak terbatas, tergantung kita mampunya sampai berapa :smile:.&lt;/p&gt;

&lt;p&gt;Contoh berikut ini adalah array dua dimensi:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;String[][] kontak = {
    {&amp;quot;Lili&amp;quot;,&amp;quot;08111&amp;quot;},
    {&amp;quot;Lala&amp;quot;,&amp;quot;08122&amp;quot;},
    {&amp;quot;Maya&amp;quot;,&amp;quot;08133&amp;quot;}
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Indek ke-&lt;code&gt;0&lt;/code&gt; pada array &lt;code&gt;kontak&lt;/code&gt; berisi array &lt;code&gt;{&amp;quot;lili&amp;quot;,&amp;quot;08111&amp;quot;}&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://1.bp.blogspot.com/-PX_aCblKjWQ/WPMMC9XYrGI/AAAAAAAAEwc/gVmcSuIdx68ZyqZA9qzid-h_d_Qlq6MvACPcB/s1600/array%2Bdua%2Bdimensi.png&#34; alt=&#34;Array dua dimensi&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Contoh cara mengakses data dari array dua dimensi:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://4.bp.blogspot.com/--B8JIXhQjjU/Vxjj-XAAERI/AAAAAAAACvw/h3zXImrKeBg0pjgjAE5df7fi9iXETaQ5wCK4B/s1600/Array%2Bdua%2Bdimensi.png&#34; alt=&#34;Contoh Array 2 Dimensi di Java&#34; title=&#34;Contoh Array 2 Dimensi di Java&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;contoh-program-array-multi-dimensi&#34;&gt;Contoh Program Array Multi Dimensi&lt;/h2&gt;

&lt;p&gt;Biar makin mantap pemahaman kita tentang array multi dimensi, mari kita coba
membuat sebuah program.&lt;/p&gt;

&lt;p&gt;Silahkan buat class baru bernama &lt;code&gt;RuangKelas&lt;/code&gt; kemudian ikuti kode berikut:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.util.Scanner;

public class RuangKelas {
    public static void main(String[] args) {

        // Membuat Array dan Scanner
        String[][] meja = new String[2][3];
        Scanner scan = new Scanner(System.in);

        // mengisi setiap meja
        for(int bar = 0; bar &amp;lt; meja.length; bar++){
            for(int kol = 0; kol &amp;lt; meja[bar].length; kol++){
                System.out.format(&amp;quot;Siapa yang akan duduk di meja (%d,%d): &amp;quot;, bar, kol);
                meja[bar][kol] = scan.nextLine();
            }
        }

        // menampilkan isi Array
        System.out.println(&amp;quot;-------------------------&amp;quot;);
        for(int bar = 0; bar &amp;lt; meja.length; bar++){
            for(int kol = 0; kol &amp;lt; meja[bar].length; kol++){
                System.out.format(&amp;quot;| %s | \t&amp;quot;, meja[bar][kol]);
            }
            System.out.println(&amp;quot;&amp;quot;);
        }
        System.out.println(&amp;quot;-------------------------&amp;quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil outputnya:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://2.bp.blogspot.com/-KdgwFPj1DOE/WPM-I_9okwI/AAAAAAAAExA/ELeXJHgmUno_wygnOdDWaiEcbmpacQnIwCPcB/s1600/Hasil%2Boutput%2Bprogram%2Barray%2B2d.png&#34; alt=&#34;Hasil output cotoh program array 2d&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Pada program tersebut, kita menggunakan perulangan bersarang untuk &lt;a href=&#34;https://www.petanikode.com/pemrograman-java-input-dan-output/&#34;&gt;mengambil
input dan menampilkan outputnya&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Karena array dua dimensi mirip seperti tabel, maka kita harus melakukan perulangan
terhadap baris dan kolomnya.&lt;/p&gt;

&lt;p&gt;Lalu bagaimana dengan array 3D, 4D, 5D, dan seterusnya?&lt;/p&gt;

&lt;p&gt;Tentu saja kita harus membuat perulangan bersarang sebanyak dimensinya.&lt;/p&gt;

&lt;p&gt;Kalau tiga, ya buat tiga perulangan.&lt;/p&gt;

&lt;h2 id=&#34;array-list&#34;&gt;Array List&lt;/h2&gt;

&lt;p&gt;Array yang kita bahas di atas sebenarnya memiliki beberapa kekurangan,
seperti:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tidak mampu menyimpan data dengan tipe yang berbeda.&lt;/li&gt;
&lt;li&gt;Ukurannya tidak dinamis.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Maka dari itu, ada Array List yang menutupi kekurangan tersebut.&lt;/p&gt;

&lt;p&gt;Array list merupakan sebuah class yang memungkinkan kita membuat sebuah objek
untuk menampung apapun.&lt;/p&gt;

&lt;p&gt;Untuk menggunakan Array List, kita harus mengimpornya terlebih dahulu.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.util.ArrayList;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Setelah itu, baru kita bisa membuat sebuah objek Array List seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt; ArrayList al = new ArrayList();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Mari kita coba&amp;hellip;.&lt;/p&gt;

&lt;h3 id=&#34;contoh-program-dengan-array-list&#34;&gt;Contoh Program dengan Array List&lt;/h3&gt;

&lt;p&gt;Silahkan membuat class dengan nama &lt;code&gt;Doraemon&lt;/code&gt;, kemudian ikuti kode berikut:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.util.ArrayList;

public class Doraemon {
    public static void main(String[] args) {

        // membuat objek array list
        ArrayList kantongAjaib = new ArrayList();

        // Mengisi kantong ajaib dengan 5 benda
        kantongAjaib.add(&amp;quot;Senter Pembesar&amp;quot;);
        kantongAjaib.add(532);
        kantongAjaib.add(&amp;quot;tikus&amp;quot;);
        kantongAjaib.add(1231234.132);
        kantongAjaib.add(true);

        // menghapus tikus dari kantong ajaib
        kantongAjaib.remove(&amp;quot;tikus&amp;quot;);

        // Menampilkan isi kantong ajaib
        System.out.println(kantongAjaib);

        // menampilkan banyak isi kantong ajaib
        System.out.println(&amp;quot;Kantong ajaib berisi &amp;quot;+ kantongAjaib.size() +&amp;quot; item&amp;quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil outputnya:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-7JRiE4HDFSY/WPNEa7eTnLI/AAAAAAAAExg/jrzHNYqskAAA-zZQvgCKif_2pVZhdq6pQCPcB/s1600/Hasil%2Boutput%2Bprogram%2Bdoraemon%2Bdengan%2Barray%2Blist.png&#34; alt=&#34;Hasil output program array list&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Karena array list (&lt;code&gt;kantongAjaib&lt;/code&gt;) merupakan sebuah objek yang terbuat dari class Array List,
maka dia punya &lt;em&gt;method&lt;/em&gt; (fungsi) untuk melakukan sesuatu.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fungsi &lt;code&gt;add()&lt;/code&gt; untuk menambahkan sesuatu ke dalam Array List;&lt;/li&gt;
&lt;li&gt;Fungsi &lt;code&gt;remove()&lt;/code&gt; untuk menghapus sesuatu ke dalam Array List;&lt;/li&gt;
&lt;li&gt;Fungsi &lt;code&gt;size()&lt;/code&gt; untuk mengambil ukuran Array List;&lt;/li&gt;
&lt;li&gt;Fungsi &lt;code&gt;get(id)&lt;/code&gt; untuk mengambil item dalam Array List berdasarkan id atau indeks tertentu.&lt;/li&gt;
&lt;li&gt;dan masih banyak fungsi yang lainnya.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;apa-selanjutnya&#34;&gt;Apa Selanjutnya?&lt;/h2&gt;

&lt;p&gt;Kita telah memahami cara penggunaan Array dalam program Java.&lt;/p&gt;

&lt;p&gt;Berikut ini ringkasannya:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Array adalah variabel yang bisa menyimpan banyak data;&lt;/li&gt;
&lt;li&gt;Array bisa multi dimensi;&lt;/li&gt;
&lt;li&gt;Array memiliki beberapa kekurangan, akan tetapi sudah ditutupi oleh array list.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Selanjutnya, silahkan pelajari tentang Method atau Fungsi pada Java.&lt;/p&gt;

&lt;p&gt;Ada yang ditanyakan?&lt;/p&gt;

&lt;p&gt;Silahkan tuliskan di komentar.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pilihan Alternatif Java dan Symbolic Link yang Buntu</title>
      <link>https://www.petanikode.com/pilihan-alternatif-java-dan-symbolic-link-yang-buntu/</link>
      <pubDate>Wed, 06 Apr 2016 22:50:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/pilihan-alternatif-java-dan-symbolic-link-yang-buntu/</guid>
      <description>&lt;p&gt;Ketika saya bermain-main dengan perintah &lt;code&gt;update-alternative&lt;/code&gt; untuk menambahakan &lt;a href=&#34;http://www.petanikode.com/2016/04/cara-mengatasi-jdk-yang-lebih-dari-satu.html&#34; target=&#34;_blank&#34;&gt;pilihan alternatif java&lt;/a&gt;, malah terjadi error. Hal ini disebabkan karena saya salah memasukkan &lt;i&gt;symbolic link&lt;/i&gt; ketika menambahkan pilihan alternatif. Berikut ini perintah salah yang menyebabkan masalah:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;sudo update-alternative &amp;ndash;install &lt;span style=&#34;color: red;&#34;&gt;/etc/alternatives/java&lt;/span&gt; java /opt/jdk1.8.0_77/bin/java&lt;/code&gt;&lt;/pre&gt;Perhatikan teks yang berwarna merah. Tesk tersebut merupakan &lt;i&gt;symbolic link&lt;/i&gt; yang berlokasi di &lt;code&gt;/etc/alternatives&lt;/code&gt;. Symbolic link yang seharusnya dimasukkan adalah &lt;code&gt;/usr/bin/java&lt;/code&gt;. Akibatnya, error:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;petanikode@imajinasi:~$ &lt;b&gt;sudo update-alternatives &amp;ndash;config java&lt;/b&gt;&lt;br /&gt;update-alternatives: error: cannot stat file &amp;lsquo;/etc/alternatives/java&amp;rsquo;: Too many levels of symbolic links&lt;/code&gt;&lt;/pre&gt;Tidak dapat memilih alternatif java, karena symbolic link java yang berada di &lt;code&gt;/etc/alternatives&lt;/code&gt; buntu &lt;i&gt;(broken)&lt;/i&gt;. Berikut ini cara saya mengatasinya:&lt;br /&gt;&lt;ol&gt;&lt;li&gt;Hapus &lt;i&gt;symbolic link&lt;/i&gt; yang buntu tadi&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;sudo rm /etc/alternatives/java&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;Buat &lt;i&gt;symbolic link&lt;/i&gt; java dari JDK yang sudah terinstal&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;sudo ln -s /usr/lib/jvm/java-8-openjdk-amd64/bin/java /etc/alternatives/java&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;Hapus pilihan alternatif yang menyebabkan error tadi&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;sudo update-alternative &amp;ndash;remove java /opt/jdk1.8.0_77/bin/java&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;Coba pilih alternatif lagi&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;sudo update-aternative &amp;ndash;config java&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ol&gt;Selanjutnya kita bisa tambahkan lagi alternatif java-nya dengan perintah yang benar. Silahkan baca caranya di: &lt;a href=&#34;http://www.petanikode.com/2016/04/cara-mengatasi-jdk-yang-lebih-dari-satu.html&#34; target=&#34;_blank&#34;&gt;Cara Mengatasi JDK yang Lebih dari Satu di Linux&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;Mengapa perintah yang salah di atas tadi bisa menyebabkan error? Mungkin karna &lt;i&gt;symbolic link&lt;/i&gt; yang ada di direktori &lt;code&gt;/etc/alternatives/&lt;/code&gt; adalah &lt;i&gt;link&lt;/i&gt; yang dipakai untuk menyambungkan &lt;i&gt;symbolic link&lt;/i&gt; &lt;code&gt;/usr/bin/java&lt;/code&gt; dengan java di JDK-nya yang asli. Berikut ini ilustrasi hubungan antar link dan file asli.&lt;a href=&#34;http://3.bp.blogspot.com/-16zBDAFnJlw/VwUcTv2xXVI/AAAAAAAACpo/WHzGc8mSm4IEweDR1zPkFh2RRuFQmPsfQ/s1600/Link%2BAlternatif%2BPilihan%2Bjava%2Bdengan%2Bbanyak%2BJDK.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://3.bp.blogspot.com/-16zBDAFnJlw/VwUcTv2xXVI/AAAAAAAACpo/WHzGc8mSm4IEweDR1zPkFh2RRuFQmPsfQ/s1600/Link%2BAlternatif%2BPilihan%2Bjava%2Bdengan%2Bbanyak%2BJDK.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;File java yang berada di dalam JDK pilihan alternatif merupakan file asli. Sedangkan, yang berada di luar adalah file link yang saling menyambung hingga ke file asli.&lt;br /&gt;&lt;br /&gt;Ketika kita mengetik perintah &lt;code&gt;java&lt;/code&gt; di terminal, file yang eksekusi adalah &lt;i&gt;symbolic link&lt;/i&gt; yang berada di &lt;code&gt;/usr/bin/java&lt;/code&gt;. File ini tersambung sampai ke file asli.&lt;a href=&#34;http://2.bp.blogspot.com/-PUncbwsFVE4/VwUhEeTdCQI/AAAAAAAACp0/fI9GjK-vlRscOdTqyflM5Rtff90F6m64w/s1600/Hubungan%2Bsymbolic%2Blink%2Bsampai%2Bke%2Bfile%2Basli.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://2.bp.blogspot.com/-PUncbwsFVE4/VwUhEeTdCQI/AAAAAAAACp0/fI9GjK-vlRscOdTqyflM5Rtff90F6m64w/s1600/Hubungan%2Bsymbolic%2Blink%2Bsampai%2Bke%2Bfile%2Basli.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Ternyata masalah kecil ini menambah pengalaman dan pengetahuan saya. Syukuri setiap masalah yang dihadapi. Di balik masalah selalu ada hikmah yang tersembunyi.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cara Mengatasi JDK yang Lebih dari Satu di Linux</title>
      <link>https://www.petanikode.com/cara-mengatasi-jdk-yang-lebih-dari-satu-di-linux/</link>
      <pubDate>Tue, 05 Apr 2016 22:49:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/cara-mengatasi-jdk-yang-lebih-dari-satu-di-linux/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-TlxFSzn2BzM/VwOQ3IRECxI/AAAAAAAACo4/nmj3R3qUhMAqMy7FuBZanJHQVrszb2Xiw/s1600/Instal%2BJDK%2BLebih%2Bdari%2BSatu%2Bdi%2BLinux.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://2.bp.blogspot.com/-TlxFSzn2BzM/VwOQ3IRECxI/AAAAAAAACo4/nmj3R3qUhMAqMy7FuBZanJHQVrszb2Xiw/s1600/Instal%2BJDK%2BLebih%2Bdari%2BSatu%2Bdi%2BLinux.png&#34; /&gt;&lt;/a&gt;Saya menginstal lebih dari satu JDK di Linux (Xubuntu). Ada Open JDK 8, Open JDK 7, dan Oracle JDK 8. Awalnya saya hanya punya Open JDK 8. Kemudian setelah mengintal &lt;i&gt;Gradle&lt;/i&gt;, Open JDK 7 juga ikut tersintal. Selain itu, saya juga menginstal Oracle JDK 8 Secara manual di direktori &lt;code&gt;/opt&lt;/code&gt;.&lt;br /&gt;&lt;br /&gt;Saat ini JDK yang sedang aktif digunakan adalah Open JDK 7. Beberapa IDE tidak mendukung bila menggunakan Open JDK 7. Seperti Android Studio, tidak dapat dibuka karena JDK-nya masih versi 7. Berikut ini pesan Error-nya.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;petanikode@imajinasi:/opt/android-studio/bin$ &lt;b&gt;bash studio.sh&lt;/b&gt; &lt;br /&gt;&lt;br /&gt;JDK Required: &amp;lsquo;tools.jar&amp;rsquo; seems to be not in Studio classpath.&lt;br /&gt;Please ensure JAVA_HOME points to JDK rather than JRE.&lt;/code&gt;&lt;/pre&gt;Bagaimanakah cara mengganti lagi ke Open JDK 8? Apakah harus instal ulang Open JDK 8 dan menghapus OpenJDK 7? Itu tidak perlu dilakukan, karena Linux sudah menyediakan sebuah perintah untuk memilih alternatif JDK. Perintah tersebut adalah:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;sudo update-alternatives &amp;ndash;config java&lt;/code&gt;&lt;/pre&gt;Berikut ini tampilan outputnya di komputer saya:&lt;br /&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-cG43izUiip0/VwJ0fa6UsKI/AAAAAAAACoI/7slZ-6hjwese84APex-UiPuio44nVOVJg/s1600/Ganti%2BAlternatif%2BJava%2BJDK.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://2.bp.blogspot.com/-cG43izUiip0/VwJ0fa6UsKI/AAAAAAAACoI/7slZ-6hjwese84APex-UiPuio44nVOVJg/s1600/Ganti%2BAlternatif%2BJava%2BJDK.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Saya pilih nomer &lt;code&gt;2&lt;/code&gt;, karena pilihan tersebut untuk memilih Open JDK 8. Setelah itu, ketika saya memeriksa versinya&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;petanikode@imajinasi:~$ &lt;b&gt;java -version&lt;/b&gt;&lt;br /&gt;openjdk version &amp;ldquo;1.8.0_72-internal&amp;rdquo;&lt;br /&gt;OpenJDK Runtime Environment (build 1.8.0_72-internal-b15)&lt;br /&gt;OpenJDK 64-Bit Server VM (build 25.72-b15, mixed mode)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Sekarang saya menggunakan Open JDK 8 dan Android Studio dapat berjalan dengan lancar.&lt;br /&gt;&lt;br /&gt;Sementara untuk Oracle JDK yang saya instal secara manual &lt;i&gt;(copy-paste)&lt;/i&gt; di direktori &lt;code&gt;/opt&lt;/code&gt; tidak terdaftar dalam pilihan alternatif. Untuk menambahkanya, ketik perintah berikut ini.&lt;br /&gt;&lt;pre&gt;sudo update-alternatives &amp;ndash;install /usr/bin/java java &lt;span style=&#34;color: #cc0000;&#34;&gt;/opt/jdk1.8.0_77/bin/java&lt;/span&gt; &lt;span style=&#34;color: blue;&#34;&gt;1080&lt;/span&gt;&lt;/pre&gt;Teks yang berwarna merah adalah lokasi saya menginstal Oracle JDK dan teks yang berwarna biru adalalah prioritas. Nilai prioritas &lt;code&gt;1080&lt;/code&gt; akan menjadikan Oracle JDK berada pada posisi teratas di pilihan alternatif, karena prioritas pilihan teratas adalah &lt;code&gt;1071&lt;/code&gt; (pada komputer saya). Berikut ini hasilnya:&lt;br /&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-JMGRIdE5TMA/VwKLKZJL31I/AAAAAAAACoY/4T8GjvtdmeAnx4CQc4CFf5k2HVL1QtkmA/s1600/Daftar%2Bpilihan%2Balternatif%2BJDK%2Bdi%2BLinux.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://1.bp.blogspot.com/-JMGRIdE5TMA/VwKLKZJL31I/AAAAAAAACoY/4T8GjvtdmeAnx4CQc4CFf5k2HVL1QtkmA/s1600/Daftar%2Bpilihan%2Balternatif%2BJDK%2Bdi%2BLinux.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Cek lagi versi java yang dipakai:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;petanikode@imajinasi:~$ &lt;b&gt;java -version&lt;/b&gt;&lt;br /&gt;java version &amp;ldquo;1.8.0_77&amp;rdquo;&lt;br /&gt;Java&amp;trade; SE Runtime Environment (build 1.8.0_77-b03)&lt;br /&gt;Java HotSpot&amp;trade; 64-Bit Server VM (build 25.77-b03, mixed mode)&lt;/code&gt;&lt;/pre&gt;Sekrang java yang dipakai adalah java dari Oracle JDK. Untuk menghapus Oracle JDK dari pilihan alternatif, ketik perintah:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;sudo update-alternatives &amp;ndash;remove java &lt;span style=&#34;color: #cc0000;&#34;&gt;/opt/jdk1.8.0_77/bin/java&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;Begitulah cara saya mengatasi JDK yang lebih dari satu di Linux. Tak maslah, berapapun JDK yang diinstal, asalkan mengerti menggunakan perintah &lt;code&gt;update-alternatives&lt;/code&gt;, kita bisa mengaturnya sesuai selera.&lt;br /&gt;&lt;br /&gt;Baca juga: &lt;a href=&#34;http://www.petanikode.com/2016/04/pilihan-alternatif-java-dan-symbolic.html&#34; target=&#34;_blank&#34;&gt;Pilihan Alternatif Java dan Symbolic Link yang Buntu &lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Belajar Pemrograman Java: Memahami Dua Jenis Perulangan dalam Java</title>
      <link>https://www.petanikode.com/pemrograman-java-perulangan/</link>
      <pubDate>Sun, 03 Jan 2016 18:28:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/pemrograman-java-perulangan/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://2.bp.blogspot.com/-dg7YKHRwVkI/WPBf-VJbwpI/AAAAAAAAEt8/T7UCAyyXf9UMm8EwmcMFIL7NSo0iHvASQCPcB/s1600/roller-coaster-perulangan-dalam-pemrograman.jpg&#34; alt=&#34;Belajar Pemrograman Java: Memahami Dua Jenis Perulangan dalam Java&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Apa yang akan kita lakukan bila ingin menyuruh komputer mengerjakan perintah
yang berulang-ulang?&lt;/p&gt;

&lt;p&gt;Misalkan kita ingin menyuruh komputer menampilkan teks &lt;code&gt;Petani Kode&lt;/code&gt; sebanyak 5x.&lt;/p&gt;

&lt;p&gt;Maka kita bisa menyuruhnya seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;System.out.println(&amp;quot;Petani Kode&amp;quot;);
System.out.println(&amp;quot;Petani Kode&amp;quot;);
System.out.println(&amp;quot;Petani Kode&amp;quot;);
System.out.println(&amp;quot;Petani Kode&amp;quot;);
System.out.println(&amp;quot;Petani Kode&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tapi&amp;hellip; bagaimana kalau sebanyak 1000x, apa kita akan mampu mengetik kode
sebanyak itu?&lt;/p&gt;

&lt;p&gt;Tentunya tidak.&lt;/p&gt;

&lt;p&gt;Karena itu, kita harus pakai perulangan.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-Pab1ngEX31Y/VlToeaw3YnI/AAAAAAAACQM/te0QBK1U-VY/s1600/Flowchart%2Bperulangan%2B-%2Bpetani%2Bkode.png&#34;&gt;&lt;img src=&#34;http://1.bp.blogspot.com/-Pab1ngEX31Y/VlToeaw3YnI/AAAAAAAACQM/te0QBK1U-VY/s1600/Flowchart%2Bperulangan%2B-%2Bpetani%2Bkode.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Contoh perulangan:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;for (int hitungan = 0; hitungan &amp;lt;= 1000; hitungan++) {
    System.out.println(&amp;quot;Petani Kode&amp;quot;);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sebelum masuk ke pembahasan lebih dalam, ada hal yang harus kalian ketahui
terlebih dahulu.&lt;/p&gt;

&lt;p&gt;Perulangan dalam pemrograman dibagi manjadi dua jenis:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Counted loop&lt;/strong&gt;: Perulangan yang jumlah pengulangannya terhitung atau tentu.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Uncounted loop&lt;/strong&gt;: Perulangan yang jumlah pengulangannya tidak terhitung
atau tidak tentu.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-H5kHb8OE1M0/WPAzGFHXcLI/AAAAAAAAEtY/yGby7eMeA1Y23LqPpS9Zmxx6aJppZRcmACPcB/s1600/mindmap_perulangan.png&#34; alt=&#34;Mind Map Perulangan&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Counted loop&lt;/em&gt; terdiri dari perulangan &lt;em&gt;For&lt;/em&gt; dan &lt;em&gt;For each&lt;/em&gt;. Sedangkan
&lt;em&gt;Uncounted loop&lt;/em&gt; terdiri dari perulangan &lt;em&gt;While&lt;/em&gt; dan &lt;em&gt;Do/While&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;h2 id=&#34;1-counted-loop&#34;&gt;1. Counted Loop&lt;/h2&gt;

&lt;p&gt;Seperti yang sudah dijelaskan, perulangan ini memiliki jumlah pengulangan yang
tentu dan terhitung.&lt;/p&gt;

&lt;p&gt;Perulangan ini terdiri dari perulangan &lt;em&gt;For&lt;/em&gt; dan &lt;em&gt;For each&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Mari kita bahas satu per satu&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;perulangan-for&#34;&gt;Perulangan &lt;em&gt;For&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Format penulisan perulangan &lt;em&gt;For&lt;/em&gt; di java adalah sebagai berikut:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;for( int hitungan = 0; hitungan &amp;lt;= 10; hitungan++ ){
    // blok kode yang akan diulang
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Penjelasan:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;variabel &lt;code&gt;hitungan&lt;/code&gt; tugasnya untuk menyimpan hitungan pengulangan.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hitungan &amp;lt;= 10&lt;/code&gt; artinya selama nilai hitungannya lebih kecil atau sama dengan 10, maka
pengulangan akan terus dilakukan. Dengan kata lain, perualangan ini akan mengulang
sebanyak 10 kali.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hitungan++&lt;/code&gt; fungsinya untuk menambah satu (&lt;code&gt;+1&lt;/code&gt;) nilai hitungan peda setiap pengulangan.&lt;/li&gt;
&lt;li&gt;Blok kode &lt;em&gt;For&lt;/em&gt; dimulai dengan tanda &amp;lsquo;&lt;code&gt;{&lt;/code&gt;&amp;rsquo; dan diakhiri dengan &amp;lsquo;&lt;code&gt;}&lt;/code&gt;&amp;rsquo;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mari kkita coba dalam contoh program&amp;hellip;&lt;/p&gt;

&lt;h4 id=&#34;contoh-program-perulangan-for&#34;&gt;Contoh Program Perulangan &lt;em&gt;For&lt;/em&gt;&lt;/h4&gt;

&lt;p&gt;Silahkan buat class baru bernama &lt;code&gt;Bintang&lt;/code&gt;, kemudian ikuti kode berikut:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;class Bintang{
    public static void main(String[] args){

        for(int i=0; i &amp;lt;= 5; i++){
            System.out.println(&amp;quot;*****&amp;quot;);
        }

    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil output:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;*****
*****
*****
*****
*****
*****
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Mau lagi?&lt;/p&gt;

&lt;p&gt;Sekarang cobalah buat program untuk menampilkan nilai dari 1 sampai 10 dengan
menggunakan perulangan.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;class CetakAngka{

    public static void main(String[] argumen){

        for(int i=0; i &amp;lt;= 10; i++){
            System.out.print( i + &amp;quot; &amp;quot; );
        }

    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil output:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;0 1 2 3 4 5 6 7 8 9 10
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Coba kita lakukan sedikit eksperimen.&lt;/p&gt;

&lt;p&gt;Buat sebuah program yang menampilkan bilangan ganjil saja.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;class CetakBilanganGanjil{

    public static void main(String[] argumen){
        for(int i = 1; i &amp;lt;= 20; i += 2){
            System.out.print( i + &amp;quot; &amp;quot;);
        }
    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil output:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1 3 5 7 9 11 13 15 17 19
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Perhatikan: di sana kita menggunakan &lt;code&gt;i += 2&lt;/code&gt;, bukan &lt;code&gt;i++&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Apa maksudnya?&lt;/p&gt;

&lt;p&gt;Maksudnya, nilai &lt;code&gt;i&lt;/code&gt; akan ditambah dua (&lt;code&gt;+2&lt;/code&gt;) di setiap pengulangan.&lt;/p&gt;

&lt;h3 id=&#34;perulangan-for-each&#34;&gt;Perulangan &lt;em&gt;For Each&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Perulangan ini sebenarnya digunakan untuk menampilkan isi dari &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Apa itu &lt;em&gt;array&lt;/em&gt;?&lt;/p&gt;

&lt;p&gt;Singkatnya, &lt;em&gt;array&lt;/em&gt; itu variabel yang menyimpan lebih dari satu nilai dan
memiliki indeks.&lt;/p&gt;

&lt;p&gt;Selengkapnya, nanti bisa di pelajari pada materi: &lt;a href=&#34;https://www.petanikode.com/pemrograman-java-di-lab-15-mengenal-array/&#34;&gt;Mengenal Array di Java&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Lanjut&amp;hellip;&lt;/p&gt;

&lt;p&gt;Perulangan &lt;em&gt;For Each&lt;/em&gt; pada Java, dilakukan juga dengan kata kunci &lt;em&gt;For&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Contohnya seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;for ( int item : dataArray ) {
    // blok kode yang diulang
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Penjelasan:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;variabel &lt;code&gt;item&lt;/code&gt; akan menyimpan nilai dari &lt;em&gt;array&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Kita bisa baca seperti ini: &amp;ldquo;Untuk setiap &lt;code&gt;item&lt;/code&gt; dalam &lt;code&gt;dataArray&lt;/code&gt;, maka lakukan
perulangan&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;contoh-program-for-each&#34;&gt;Contoh Program &lt;em&gt;For Each&lt;/em&gt;&lt;/h4&gt;

&lt;p&gt;Buat sebuah class baru bernama &lt;code&gt;PerulanganForeach&lt;/code&gt;, kemudian ikuti kode berikut.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class PerulanganForeach {
    public static void main(String[] args) {

        // membuat array
        int angka[] = {3,1,42,24,12};

        // menggunakan perulangan For each untuk menampilkan angka
        for( int x : angka ){
            System.out.print(x + &amp;quot; &amp;quot;);
        }

    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil outputnya:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;3 1 42 24 12
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;uncounted-loop&#34;&gt;Uncounted Loop&lt;/h2&gt;

&lt;p&gt;Seperti yang sudah dijelaskan di awal tadi, perulangan ini tidak jelas jumlah
pengulangannya.&lt;/p&gt;

&lt;p&gt;Tapi, tidak menutup kemungkinan juga, jumlah pengulangannya dapat ditentukan.&lt;/p&gt;

&lt;p&gt;Perulangan &lt;em&gt;uncounted loop&lt;/em&gt; terdirid dari perulangan &lt;em&gt;While&lt;/em&gt; dan &lt;em&gt;Do/While&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-nqIIOY3vCyM/WPAp9h0orPI/AAAAAAAAEsA/3-EK9wK7E08g02F8E7AoFF1kOzPurVniQCPcB/s1600/flow%2Bchart%2Bperulangan%2Bwhile%2Bdan%2Bdo%2Bwhile.png&#34; alt=&#34;Flow Chart Perulangan While dan Do/While&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Mari kita bahas satu per satu&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;perulangan-while&#34;&gt;Perulangan While&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;While&lt;/em&gt; bisa kita artikan &lt;em&gt;selama&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Cara kerja perulangan ini seperti percabangan, ia akan melakukan perulangan
selama kondisinya bernilai &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Struktur penulisan perulangan while:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;while ( kondisi ) {
    // blok kode yang akan diulang
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Penjelasan:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;kondisi&lt;/em&gt; bisa kita isi dengan perbandingan maupun variabel boolean. &lt;em&gt;Kondisi&lt;/em&gt;
ini hanya memiliki nilai &lt;code&gt;true&lt;/code&gt; dan &lt;code&gt;flase&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Perulangan &lt;code&gt;while&lt;/code&gt; akan berhenti sampai &lt;em&gt;kondisi&lt;/em&gt; bernilai &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Untuk lebih jelasnya, mari kita coba membuat program&amp;hellip;&lt;/p&gt;

&lt;h4 id=&#34;contoh-program-dengan-perulangan-while&#34;&gt;Contoh Program dengan Perulangan While&lt;/h4&gt;

&lt;p&gt;Program ini akan melakukan perulangan selama jawabannya tidak.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.util.Scanner;

public class PerulanganWhile {
    public static void main(String[] args) {

        // membuat variabel dan scanner
        boolean running = true;
        int counter = 0;
        String jawab;
        Scanner scan = new Scanner(System.in);

        while( running ) {
            System.out.println(&amp;quot;Apakah anda ingin keluar?&amp;quot;);
            System.out.print(&amp;quot;Jawab [ya/tidak]&amp;gt; &amp;quot;);

            jawab = scan.nextLine();

            // cek jawabnnya, kalau ya maka berhenti mengulang
            if( jawab.equalsIgnoreCase(&amp;quot;ya&amp;quot;) ){
                running = false;
            }

            counter++;
        }

        System.out.println(&amp;quot;Anda sudah melakukan perulangan sebanyak &amp;quot; + counter + &amp;quot; kali&amp;quot;);

    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil outputnya:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-JfmFcjrI0jA/WPAvJhGuXCI/AAAAAAAAEss/P7LDcaWyO7Qywr8MrSV5U3gp7xEPZz6LwCPcB/s1600/Hasil%2Boutput%2Bprogram%2Bwhile.png&#34; alt=&#34;Hasil output contoh program menggunakan perulangan while&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Di sana telah dilakukan perulangan sebanyak 4 kali. Bisa saja terjadi 10 kali.&lt;/p&gt;

&lt;p&gt;Itu targantung dari kondisinya.&lt;/p&gt;

&lt;p&gt;Kalau nilai variabel &lt;code&gt;running&lt;/code&gt; bernilai &lt;code&gt;false&lt;/code&gt;, maka perulangan berhenti.&lt;/p&gt;

&lt;p&gt;Contoh kode &lt;em&gt;while&lt;/em&gt; di atas dapat kita baca seperti ini: &amp;ldquo;Lakukan perulangan
selama nilai &lt;code&gt;running&lt;/code&gt; bernilai &lt;code&gt;true&lt;/code&gt;.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Tidak menutup kemungkinan juga, perulangan ini dapat melakukan &lt;em&gt;counted loop&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Contohnya seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;int i = 0;

while ( i &amp;lt;= 10 ){
    // blok kode yang akan diulang
    System.out.println(&#39;Perulangan ke-&#39; + i);

    // increment nilai i
    i++;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil outputnya:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Perulangan ke-0
Perulangan ke-1
Perulangan ke-2
Perulangan ke-3
Perulangan ke-4
Perulangan ke-5
Perulangan ke-6
Perulangan ke-7
Perulangan ke-8
Perulangan ke-9
Perulangan ke-10
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Penting&lt;/strong&gt;: pastikan melakukan &lt;em&gt;increment&lt;/em&gt; (&lt;code&gt;i++&lt;/code&gt;) terhadap variabel &lt;em&gt;counter&lt;/em&gt;.
Karena kalau tidak, perulangannya akan terus-menerus dilakukan sampai
komputernya hang.&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;in&#34; dir=&#34;ltr&#34;&gt;ini yang akan terjadi saat kalian lupa menambahkan i++ di perulangan while 😄 &lt;a href=&#34;https://t.co/35lCFOa3zn&#34;&gt;pic.twitter.com/35lCFOa3zn&lt;/a&gt;&lt;/p&gt;&amp;mdash; Petani Kode (@petanikode) &lt;a href=&#34;https://twitter.com/petanikode/status/852692611932372992&#34;&gt;April 14, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h3 id=&#34;perulangan-do-while&#34;&gt;Perulangan &lt;em&gt;Do/While&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Cara kerja perulangan &lt;em&gt;Do/While&lt;/em&gt; sebenarnya sama seperti perulangan &lt;em&gt;While&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Bedanya, &lt;em&gt;Do/While&lt;/em&gt; melakukan satu kali perulangan dulu. Kemudian mengecek
kondisinya.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://2.bp.blogspot.com/-wL-NuySRPrs/WPAsXvsC3xI/AAAAAAAAEsU/rKVYj1mIGRgaZOAPXj-bOwxFcxvjFCvCQCPcB/s1600/flowchart_perulangan_do_while.png&#34; alt=&#34;Flowchart perulangan do/while&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Struktur penulisannya seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;do {
    // blok kode yang akan diulang
} while (kondisi);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Jadi kerjakan dulu (&lt;code&gt;Do&lt;/code&gt;), baru di cek kondisinya &lt;code&gt;while( kondisi )&lt;/code&gt;.
Kalau &lt;code&gt;kondisi&lt;/code&gt; bernilai &lt;code&gt;ture&lt;/code&gt;, maka lanjutkan perulangan.&lt;/p&gt;

&lt;h4 id=&#34;contoh-program-dengan-perulangan-do-while&#34;&gt;Contoh Program dengan Perulangan &lt;em&gt;Do/While&lt;/em&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class PerulanganDoWhile {
    public static void main(String[] args) {

        // membuat variabel
        int i = 0;

        do {
            System.out.println(&amp;quot;perulangan ke-&amp;quot; + i);
            i++;
        } while ( i &amp;lt;= 10);

    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil outputnya:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;perulangan ke-0
perulangan ke-1
perulangan ke-2
perulangan ke-3
perulangan ke-4
perulangan ke-5
perulangan ke-6
perulangan ke-7
perulangan ke-8
perulangan ke-9
perulangan ke-10
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;parulangan-bersarang-nested-loop&#34;&gt;Parulangan Bersarang &lt;em&gt;(Nested Loop)&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;Perulangan juga dapat bersarang. Perulangan bersarang maksudnya, perulangan
dalam perulangan atau disebut juga &lt;em&gt;nested loop&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Contoh bentuk flow chart-nya seperti ini:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://4.bp.blogspot.com/-2TNHnT8VfME/WPAxNGNxSbI/AAAAAAAAEtA/3b5GaKrDVvMhuAzjYpVr3cygt4jNAvsyQCPcB/s1600/perulangan_bersarang.png&#34; alt=&#34;Flow Chart Perulangan Bersarang&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;contoh-program-perulangan-bersarang&#34;&gt;Contoh Program Perulangan Bersarang&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class PerulanganBersarang {
    public static void main(String[] args) {

        // membuat variabel
        int x, y;

        // melakukan parulang sebnayan x dan y kali
        for (x = 0; x &amp;lt;= 5; x++){
            for( y = 0; y &amp;lt;= 3; y++){
                System.out.format(&amp;quot;Perulangan [x=%d, y=%d] %n&amp;quot;, x, y);
            }
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil outputnya:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Perulangan [x=0, y=0]
Perulangan [x=0, y=1]
Perulangan [x=0, y=2]
Perulangan [x=0, y=3]
Perulangan [x=1, y=0]
Perulangan [x=1, y=1]
Perulangan [x=1, y=2]
Perulangan [x=1, y=3]
Perulangan [x=2, y=0]
Perulangan [x=2, y=1]
Perulangan [x=2, y=2]
Perulangan [x=2, y=3]
Perulangan [x=3, y=0]
Perulangan [x=3, y=1]
Perulangan [x=3, y=2]
Perulangan [x=3, y=3]
Perulangan [x=4, y=0]
Perulangan [x=4, y=1]
Perulangan [x=4, y=2]
Perulangan [x=4, y=3]
Perulangan [x=5, y=0]
Perulangan [x=5, y=1]
Perulangan [x=5, y=2]
Perulangan [x=5, y=3]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;PS:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Perulangan bersarang sering digunakan pada &lt;em&gt;array&lt;/em&gt; multi dimensi.&lt;/li&gt;
&lt;li&gt;Jenis perulangan di dalam perulangn bisa berbeda, misalnya di dalam perulangan
&lt;em&gt;while&lt;/em&gt; ada perulangan &lt;em&gt;for&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;apa-selanjutnya&#34;&gt;Apa Selanjutnya?&lt;/h2&gt;

&lt;p&gt;Kita sudah pelajari konsep dasar perulangan dalam pemrograman Java.&lt;/p&gt;

&lt;p&gt;Ada perulangan &lt;em&gt;Counted Loop&lt;/em&gt; dan &lt;em&gt;Uncounted Loop&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Kalau ada yang ditanyakan, silahkan tuliskan di komentar.&lt;/p&gt;

&lt;p&gt;Selanjutnya, silahkan pelajari: &lt;a href=&#34;https://www.petanikode.com/pemrograman-java-array/&#34;&gt;Cara Menggunakan Array untuk Menyimpan Banyak Hal&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Belajar Pemrograman Java: Inilah 3 Bentuk Percabangan yang Harus Dipahami</title>
      <link>https://www.petanikode.com/pemrograman-java-percabangan/</link>
      <pubDate>Sun, 25 Oct 2015 18:33:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/pemrograman-java-percabangan/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://2.bp.blogspot.com/-RvCLtSJKtig/WOhpIb2ZUuI/AAAAAAAAEoE/ucr44ME4UwYCNIP5HhieepL_KexR9tifwCPcB/s1600/percabangan%2Brel%2Bkereta%2Bapi.jpg&#34; alt=&#34;Perbangan Java&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Kalau kita perhatikan, alur pengeksekusian sebuah kode program dikerjakan satu per satu dari atas
sampai ke bawah.&lt;/p&gt;

&lt;p&gt;Baris demi baris dibaca, kemudian komputer mengerjakan apa yang diperintahkan.&lt;/p&gt;

&lt;p&gt;Misalnya seperti ini:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://2.bp.blogspot.com/-K9oL9zetghQ/WOhpISQO-4I/AAAAAAAAEoE/anwCWCtzMPwFxM7wAH7k46Rj4Ri7xjEhwCPcB/s1600/alur%2Beksekusi%2Bprogram%2Btanpa%2Bflowchart.png&#34; alt=&#34;Alur porgram tanpa percabangan&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Alur programnya satu, tidak ada belokan atau percabangan.&lt;/p&gt;

&lt;p&gt;Ngomong-ngomong apa itu percabangan?&lt;/p&gt;

&lt;p&gt;Percabangan hanyalah sebuah istilah yang digunakan untuk menyebut
alur program yang bercabang.&lt;/p&gt;

&lt;p&gt;Percabangan juga dikenal dengan &amp;ldquo;Control Flow&amp;rdquo;, &amp;ldquo;Struktur Kondisi&amp;rdquo;,
&amp;ldquo;Struktur IF&amp;rdquo;, &amp;ldquo;Decision&amp;rdquo;, dsb. Semuanya itu sama.&lt;/p&gt;

&lt;p&gt;Pada diagram alur &lt;em&gt;(Flow Chart)&lt;/em&gt; seperti di atas, alurnya memang satu.&lt;/p&gt;

&lt;p&gt;Tapi setelah kita menggunakan percabangan, alurnya akan bertambah menjadi seperti ini.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://4.bp.blogspot.com/-VdWpqvZZHFk/WOhuYZN8lxI/AAAAAAAAEos/Rston6k1KwMGagHld2CZoJE38SvZtXC-wCPcB/s1600/contoh-percabangan.png&#34; alt=&#34;Flowchart Percabangan&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Lalu bagaimana cara menulis kode percabangan dalam Java?&lt;/p&gt;

&lt;p&gt;Caranya: menggunakan kata kunci &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;, &lt;code&gt;switch&lt;/code&gt;, dan &lt;code&gt;case&lt;/code&gt;, dan operator ternary.&lt;/p&gt;

&lt;p&gt;Contoh format stuktur IF seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;if( suatu_kondisi ) {
    // lakukan sesuatu kalau kondisi benar
    // Lakukan ini juga
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;suatu_kondisi&lt;/code&gt; hanya bernilai &lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt; saja. Kita bisa gunakan operator
relasi dan logika di sini.&lt;/p&gt;

&lt;p&gt;Untuk lebih jelasnya, nanti akan kita bahas.&lt;/p&gt;

&lt;p&gt;Sebelumnya, kamu perlu tahu dulu tiga bentuk percabangan pada Java:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Percabangan IF&lt;/li&gt;
&lt;li&gt;Percabangan IF/ELSE&lt;/li&gt;
&lt;li&gt;Percabangan IF/ELSE/IF atau SWITCH/CASE&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Mari kita bahas satu per satu&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;h2 id=&#34;1-percabangan-if&#34;&gt;1. Percabangan IF&lt;/h2&gt;

&lt;p&gt;Percabangan ini hanya memiliki satu pilihan. Artinya, pilihan di dalam IF
hanya akan dikerjakan kalau kondisinya benar.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://2.bp.blogspot.com/-U8SqJhBeFoc/WOh7pR4aSNI/AAAAAAAAEpM/_i52DJOZIm80Ux6fdnVWfmEHx8WdvQfHACPcB/s1600/percabangan-if-dalam-pemrograman.png&#34; alt=&#34;Percabangan IF&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Tapi kalau salah&amp;hellip; tidak akan melakukan apa-apa. Alias lanjut eksekusi ke
perintah berikutnya.&lt;/p&gt;

&lt;p&gt;Contoh:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Pernahkah kalian belanja di toko, kemudian kalau belanja di atas sekian ribu
dapat hadiah atau diskon.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Nah! Contoh kasus seperti itu, dapat kita selesaikan dengan menggunakan percabangan
ini.&lt;/p&gt;

&lt;p&gt;untuk lebih jelasnya&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;mari-kita-membuat-program-hadiah&#34;&gt;Mari Kita Membuat Program Hadiah&lt;/h3&gt;

&lt;p&gt;Misalkan ada sebuah toko buku. Mereka memberikan hadiah berupa
perlengkapan sekolah kepada pembeli yang belanja di atas Rp 100.000.&lt;/p&gt;

&lt;p&gt;Maka programnya bisa kita buat seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.util.Scanner;

public class Hadiah {

    public static void main(String[] args) {

        // membuat variabel belanja dan scanner
        int belanja = 0;
        Scanner scan = new Scanner(System.in);

        // mengambil input
        System.out.print(&amp;quot;Total Belanjaan: Rp &amp;quot;);
        belanja = scan.nextInt();

        // cek apakah dia belanja di atas 100000
        if ( belanja &amp;gt; 100000 ) {
            System.out.println(&amp;quot;Selamat, anda mendapatkan hadiah!&amp;quot;);
        }

        System.out.println(&amp;quot;Terima kasih...&amp;quot;);

    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Jalankan programnya dan perhatikanlah hasilnya.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-LGq9_8wC3I8/WOiZIi2nshI/AAAAAAAAEpw/gZtN9le-bfo-Thi4Ct8HWaDM1Dj4d5XsgCPcB/s1600/program%2Bdiskon%2Bdan%2Bhadiah%2Bdengan%2BJava.png&#34; alt=&#34;Program diskon dengan Java&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Cobalah untuk memberikan nilai di bawah &lt;code&gt;100000&lt;/code&gt; dan perhatikan apa akan yang terjadi.&lt;/p&gt;

&lt;h2 id=&#34;2-percabangan-if-else&#34;&gt;2. Percabangan IF/ELSE&lt;/h2&gt;

&lt;p&gt;Sedangkan percabangan IF/ELSE memiliki pilihan alternatif kalau kondisinya salah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;IF&lt;/strong&gt;: &amp;ldquo;Jika kondisi benar maka kerjakan ini, kalau tidak silahkan lanjut&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;IF/ESLE&lt;/strong&gt;: &amp;ldquo;Jika kondisi benar maka kerjakan ini, kalau salah maka kerjakan yang itu,
setelah itu lanjut&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://1.bp.blogspot.com/-EBFXR8YanHg/ViyfSNX80-I/AAAAAAAACEI/BVBV3EX_r3Q/s1600/Percabangan%2Bdi%2Bpemrograman%2Bjava.png&#34; alt=&#34;Perbedaan percabangan IF dengan IF/ELSE&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Begitulah perbedaan IF dengan IF/ELSE.&lt;/p&gt;

&lt;p&gt;Sekarang mari kita coba dalam kode program&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;program-cek-kelulusan&#34;&gt;Program Cek Kelulusan&lt;/h3&gt;

&lt;p&gt;Misalkan, kalau nilai siswa lebih besar dari 70, maka ia dinyatakan lulus.
Kalau tidak, maka dia gagal.&lt;/p&gt;

&lt;p&gt;Programnya bisa kita buat seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.util.Scanner;

public class CekKelulusan {

    public static void main(String[] args) {

        // membuat variabel dan Scanner
        int nilai;
        String nama;
        Scanner scan = new Scanner(System.in);

        // mengambil input
        System.out.print(&amp;quot;Nama: &amp;quot;);
        nama = scan.nextLine();
        System.out.print(&amp;quot;Nilai: &amp;quot;);
        nilai = scan.nextInt();

        // cek apakah dia lulus atau tidak
        if( nilai &amp;gt;= 70 ) {
            System.out.println(&amp;quot;Selemat &amp;quot; + nama + &amp;quot;, anda lulus!&amp;quot;);
        } else {
            System.out.println(&amp;quot;Maaf &amp;quot; + nama + &amp;quot;, anda gagal&amp;quot;);
        }

    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil outputnya:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-rLwFoNL9qKk/WO79-OlRsUI/AAAAAAAAEqc/8r_1s5gF0MkIFz3NhZqOs0ocTZeeUT_jgCPcB/s1600/Hasil%2Boutput%2Bprogram%2Bcekkelulusan%2Bjava.png&#34; alt=&#34;Hasil output program tes kelulusan&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Cobalah untuk merubah nilai yang dimasukkan dan perhatikan apa yang
akan terjadi.&lt;/p&gt;

&lt;h3 id=&#34;percabangan-if-else-dengan-operator-ternary&#34;&gt;Percabangan IF/ELSE dengan Operator Ternary&lt;/h3&gt;

&lt;p&gt;Selain menggunakan struktur seperti di atas, percahangan ini juga dapat menggunakan
operator ternary.&lt;/p&gt;

&lt;p&gt;Seperti yang sudah kita pelajari pada &lt;a href=&#34;https://www.petanikode.com/pemrograman-java-operator/&#34;&gt;pembahasan tentang operator&lt;/a&gt;. Operator ternary memiliki konsep yang sama seperti percabganan IF/ELSE.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-OKB4MDtGjE4/WObxiPfq-wI/AAAAAAAAEmQ/kR9Ldcc1hr88u90060rCff0Gvs4lDRfQgCPcB/s1600/operator%2Bternary%2Bdi%2Bjava.png&#34; alt=&#34;Ilustraisi operator ternary&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Contoh programnya:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class OperatorTernary {
    public static void main(String[] args) {

        boolean suka = true;
        String jawaban;

        // menggunakan operator ternary
        jawaban = suka ? &amp;quot;iya&amp;quot; : &amp;quot;tidak&amp;quot;;

        // menampilkan jawaban
        System.out.println(jawaban);

    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;3-percabangan-if-else-if-dan-switch-case&#34;&gt;3. Percabangan IF/ELSE/IF dan SWITCH/CASE&lt;/h2&gt;

&lt;p&gt;Jika percabangan IF/ESLE hanya memiliki dua pilihan saja. Maka percahangan
IF/ELSE/IF memiliki lebih dari dua pilihan.&lt;/p&gt;

&lt;p&gt;Formatnya seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;if (suatu kondisi) {
    // maka kerjakan ini
    // kerjakan perintah ini juga
    // …
} else if (kondisi lain) {
    // kerjakan ini
    // kerjakan ini juga
    // …
} else if (kondisi yang lain lagi) {
    // kerjakan perintah ini
    // kerjakan ini juga
    // …
} esle {
    // kerjakan ini kalau
    // semua kondisi di atas
    // tidak ada yang benar
    // …
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Coba perhatikan contohnya:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://3.bp.blogspot.com/-9uS-c73seec/VkBISDA0AXI/AAAAAAAACLU/AsWtctwfCN0/s1600/flowchart%2Bpercabangan%2Byang%2Bmemiliki%2Bbanyak%2Bpilihan%2Bkeputusan.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Jika nilainya lebih besar dari &lt;code&gt;90&lt;/code&gt;, maka grade-nya &amp;ldquo;A&amp;rdquo;.
Sedangkan kalau lebih besar dari &lt;code&gt;80&lt;/code&gt;, maka &amp;ldquo;B+&amp;rdquo;. Lebih besar
dari &lt;code&gt;70&lt;/code&gt;, maka &amp;ldquo;B&amp;rdquo;, dan seterusnya.&lt;/p&gt;

&lt;p&gt;Lebih jelasnya, mari kita buat program.&lt;/p&gt;

&lt;h3 id=&#34;program-hitunggrade&#34;&gt;Program HitungGrade&lt;/h3&gt;

&lt;p&gt;Silahkan buat sebuah class baru bernama &lt;code&gt;HitungGrade&lt;/code&gt;, kemudian ikuti kode
program berikut.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.util.Scanner;

public class HitungGrade {
    public static void main(String[] args) {

        // membuat variabel dan scanner
        int nilai;
        String grade;
        Scanner scan = new Scanner(System.in);

        // mengambil input
        System.out.print(&amp;quot;Inputkan nilai: &amp;quot;);
        nilai = scan.nextInt();

        // higung gradenya
        if ( nilai &amp;gt;= 90 ) {
            grade = &amp;quot;A&amp;quot;;
        } else if ( nilai &amp;gt;= 80 ){
            grade = &amp;quot;B+&amp;quot;;
        } else if ( nilai &amp;gt;= 70 ){
            grade = &amp;quot;B&amp;quot;;
        } else if ( nilai &amp;gt;= 60 ){
            grade = &amp;quot;C+&amp;quot;;
        } else if ( nilai &amp;gt;= 50 ){
            grade = &amp;quot;C&amp;quot;;
        } else if ( nilai &amp;gt;= 40 ){
            grade = &amp;quot;D&amp;quot;;
        } else {
            grade = &amp;quot;E&amp;quot;;
        }

        // cetak hasilnya
        System.out.println(&amp;quot;Grade: &amp;quot; + grade);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil outputnya:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-fBW1OCJ8L_o/WO7_E4iXKTI/AAAAAAAAEqs/FsV0dkLWW_UL0P9GWTazQq2HTvEcx4YqQCPcB/s1600/Hasil%2Boutput%2Bprogram%2Bhitung%2Bgrader%2Bnilai.png&#34; alt=&#34;Hasil output program hitung grade&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;percabangan-switch-case&#34;&gt;Percabangan SWITCH/CASE&lt;/h3&gt;

&lt;p&gt;Percabangan SWITCH/CASE sebenarnya adalah bentuk lain dari IF/ELSE/IF.&lt;/p&gt;

&lt;p&gt;Bedanya, percabangan ini menggunakan kata kunci &lt;code&gt;switch&lt;/code&gt; dan &lt;code&gt;case&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Formatnya juga berbeda, tapi cara kerjanya sama.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;switch(variabel){
    case 1:
        // kerjakan kode ini
        // kode ini juga
        break;
    case 2:
        // kerjakan kode ini
        // kode ini juga
        break;
    case 3:
        // kerjakan kode ini
        // kode ini juga
        break;
    default:
        // kerjakan kode ini
        // kode ini juga
        break;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Perhatikan: &lt;code&gt;case 1&lt;/code&gt; artinya nilai &lt;code&gt;variabel&lt;/code&gt; yang akan dibandingkan, apakah nilainya
sama dengan &lt;code&gt;1&lt;/code&gt; atau tidak.&lt;/p&gt;

&lt;p&gt;Kalau iya, maka kerjakan kode yang ada di dalam &lt;code&gt;case 1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Bisa juga betuknya berbeda, misalnya seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;switch (variabel) {
    case &#39;A&#39;:
        // lakukan sesuatu
        break;
    case &#39;B&#39;:
        // lakukan ini
        break;
    default:
        // lakukan ini
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Perlu diperhatikan juga: di sana ada kata kunci &lt;code&gt;break&lt;/code&gt; dan &lt;code&gt;default&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;break&lt;/code&gt; artinya berhenti. Ini untuk memerintahkan komputer untuk berhenti
mengecek &lt;code&gt;case&lt;/code&gt; yang lainnya.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;default&lt;/code&gt; artinya jika nilai variabel tidak ada yang sama dengan pilihan case di atas,
maka kerjakan kode yang ada di dalam &lt;code&gt;default&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pilihan &lt;code&gt;default&lt;/code&gt; bisa juga tidak memiliki &lt;code&gt;break&lt;/code&gt;, karena dia adalah pilihan terakhir.
Artinya pengecekan akan berakhir di situ.&lt;/p&gt;

&lt;p&gt;Contoh program dengan percabangan SWITCH/CASE&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.util.Scanner;

public class LampuLalulintas {
    public static void main(String[] args) {

        // membuat variabel dan Scanner
        String lampu;
        Scanner scan = new Scanner(System.in);

        // mengambil input
        System.out.print(&amp;quot;Inputkan nama warna: &amp;quot;);
        lampu = scan.nextLine();

        switch(lampu){
            case &amp;quot;merah&amp;quot;:
                System.out.println(&amp;quot;Lampu merah, berhenti!&amp;quot;);
                break;
            case &amp;quot;kuning&amp;quot;:
                System.out.println(&amp;quot;Lampu kuning, harap hati-hati!&amp;quot;);
                break;
            case &amp;quot;hijau&amp;quot;:
                System.out.println(&amp;quot;Lampu hijau, silahkan jalan!&amp;quot;);
                break;
            default:
                System.out.println(&amp;quot;Warna lampu salah!&amp;quot;);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil outputnya:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-ojFmHVyblYk/WO7_wHizYNI/AAAAAAAAEq8/huTDmNUAHfM5m-nJ2l50ieGZelChGKJ5wCPcB/s1600/hasil%2Boutput%2Bprogram%2Blampu%2Blalu%2Blintas%2Bswitch%2Bcase.png&#34; alt=&#34;Hasil output program lampu lalu lintas dengan percabangan switch case&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Eksperimen&lt;/strong&gt;: Cobalah untuk menghilangkan &lt;code&gt;break&lt;/code&gt; di salah satu &lt;code&gt;case&lt;/code&gt; dan
perhatikanlah hasilnya.&lt;/p&gt;

&lt;h2 id=&#34;percabangan-dalam-percabangan-nested&#34;&gt;Percabangan dalam Percabangan &lt;em&gt;(Nested)&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;Kita sudah tahu tiga bentuk dasar percabganan di Java. Selanjutnya, kita
coba bahas percabangan yang ada di dalam perbangan (perabangan bersarang).&lt;/p&gt;

&lt;p&gt;Sebenarnya pembahasan ini saya ingin pisahkan. Namun, baiknya digabungkan
di sini aja.&lt;/p&gt;

&lt;p&gt;Anggap saja pembahasan bonus :smile:.&lt;/p&gt;

&lt;p&gt;Baiklah&amp;hellip;&lt;/p&gt;

&lt;p&gt;Jadi, percabangan itu bisa dibuat di dalam percabangan. Kadang teknik ini
disebut juga &lt;em&gt;nested if&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Contoh kasus:&lt;/p&gt;

&lt;p&gt;Misalnya ada model bisinis seperti ini di sebuah toko. Ketika orang membayar di
kasir, biasanya ditanya ada kartu member untuk mendapatkan diskon dan sebagainya.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Apakah anda punya kartu member?
   - ya
       * Apakah belanjaan anda lebih dari 500rb?
           # ya : mendapatkan diskon 50rb
           # tidak : tidak mendapatkan diskon
       * Apakah belanjaan anda lebih dari 100rb?
           # ya : mendapatkan diskon 15rb
           # tidak: tidak mendapatkan diskon
   - tidak
       * Apakah belanjaan anda lebih dari 100rb?
           # ya : mendapatkan diskon 10rb
           # tidak: tidak mendapatkan diskon
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Paham?&lt;/p&gt;

&lt;p&gt;Kalau tidak, coba perhatikan flow chart-nya:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://2.bp.blogspot.com/-6ZrqC9I8Nxs/VkBWekgFwUI/AAAAAAAACLk/tdhCo5np2lk/s1600/flowchart%2Bpercabangan%2Bbersarang%2Bjava.png&#34; alt=&#34;Flowchart percabangan bersarang&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Masih belum paham?&lt;/p&gt;

&lt;p&gt;Kalau begitu mari kita coba dalam program.&lt;/p&gt;

&lt;p&gt;Silahkan buat class baru bernama &lt;code&gt;Kasir&lt;/code&gt; dan ikuti kode program berikut ini.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.util.Scanner;

public class Kasir {
    public static void main(String[] args) {
        // deklarasi variabel dan Scanner
        int belanjaan, diskon, bayar;
        String kartu;
        Scanner scan = new Scanner(System.in);

        // mengambil input
        System.out.print(&amp;quot;Apakah ada kartu member: &amp;quot;);
        kartu = scan.nextLine();
        System.out.print(&amp;quot;Total belanjaan: &amp;quot;);
        belanjaan = scan.nextInt();

        // proses
        if (kartu.equalsIgnoreCase(&amp;quot;ya&amp;quot;)) {
            if (belanjaan &amp;gt; 500000) {
                diskon = 50000;
            } else if (belanjaan &amp;gt; 100000) {
                diskon = 15000;
            } else {
                diskon = 0;
            }

        } else {
            if (belanjaan &amp;gt; 100000) {
                diskon = 5000;
            } else {
                diskon = 0;
            }
        }

        // total yang harus dibayar
        bayar = belanjaan - diskon;

        // output
        System.out.println(&amp;quot;Total Bayar: Rp &amp;quot; + bayar);
    }  
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil outputnya:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-1H-uAWXBmxs/WO8GZByoXbI/AAAAAAAAErc/MDBuvrhyE9U670LjowqU6o8uAMlm30mlACPcB/s1600/Hasil%2Boutput%2Bprogram%2Bif%2Bbersarang.png&#34; alt=&#34;Hasil output program dengan percabangan bersarang&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Cobalah untuk mengubah nilai yang dimasukkan dan perhatikan hasilnya.&lt;/p&gt;

&lt;p&gt;Mungkin di sana ada yang perlu diperhatikan:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fungsi &lt;code&gt;equalsIgnoreCase(&amp;quot;ya&amp;quot;)&lt;/code&gt; digunakan untuk membandingkan String dengan
tidak memperdulikan huruf besar dan kecilnya.&lt;/li&gt;
&lt;li&gt;Ada juga Fungsi &lt;code&gt;equals()&lt;/code&gt;, fungsinya sama. Tapi &lt;code&gt;equals()&lt;/code&gt; akan memperhatikan
&lt;em&gt;case&lt;/em&gt; hurufnya.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Kenapa tidak menggunakan operator &lt;code&gt;==&lt;/code&gt; atau &lt;code&gt;!=&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;Di Java memang seperti itu.&lt;/p&gt;

&lt;p&gt;Kalau kita ingin membandingkan nilai String, ya&amp;hellip; menggunakan fungsi yang
dua tadi.&lt;/p&gt;

&lt;p&gt;Tapi, kalau membandingkan selain String, maka bisa pakai operator &lt;code&gt;==&lt;/code&gt; atau
&lt;code&gt;!=&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;menggunakan-operator-logika-dalam-percabangan&#34;&gt;Menggunakan Operator Logika dalam Percabangan&lt;/h2&gt;

&lt;p&gt;Operator logika dalam percabangan sebenarnya bisa membuat percabangan menjadi
lebih singkat.&lt;/p&gt;

&lt;p&gt;Misal ada program &lt;em&gt;Tilang&lt;/em&gt; dengan logika seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class Tilang {
    public static void main(String[] args) {
        boolean SIM = false;
        boolean STNK = true;

        // cek apakah dia akan ditilang atau tidak
        if(SIM == true){
            if( STNK == true ) {
                System.out.println(&amp;quot;Tidak ditilang!&amp;quot;);
            }
        } else {
            System.out.println(&amp;quot;Anda ditilang!&amp;quot;);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Perhatikan: di sana kita menggunakan percabangan bersarang untuk mengecek,
apakah dia ditilang atau tidak.&lt;/p&gt;

&lt;p&gt;Hal ini sebenarnya bisa disingkat dengan operator logika, sehingga
menjadi seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class Tilang {
    public static void main(String[] args) {
        boolean SIM = false;
        boolean STNK = true;

        // cek apakah dia akan ditilang atau tidak
        if(SIM == true &amp;amp;&amp;amp; STNK == true){
            System.out.println(&amp;quot;Tidak ditilang!&amp;quot;);
        } else {
            System.out.println(&amp;quot;Anda ditilang!&amp;quot;);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pada kode di atas, kita menggunakan operator AND (&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Karena logikanya: Si pengendara tidak akan ditilang kalau punya SIM dan STNK.&lt;/p&gt;

&lt;h2 id=&#34;apa-selanjutnya&#34;&gt;Apa Selanjutnya?&lt;/h2&gt;

&lt;p&gt;Kita sudah peljari beberapa macam bentuk percabagan dan pernak-perniknya,
ringkasananya seperti ini:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Percabangan IF, hanya memiliki satu pilihan;&lt;/li&gt;
&lt;li&gt;Percabangan IF/ELSE memiliki dua pilihan;&lt;/li&gt;
&lt;li&gt;Percabangan dengan operator ternary adalah bentuk lain dari IF/ELSE;&lt;/li&gt;
&lt;li&gt;Percabangan IF/ELSE/IF memiliki lebih dari dua pilihan;&lt;/li&gt;
&lt;li&gt;Percabangan SWITCH/CASE adalah bentuk lain dari IF/ELSE/IF;&lt;/li&gt;
&lt;li&gt;Percabangan bersarang adalah percabangan dalam Percabangan;&lt;/li&gt;
&lt;li&gt;Penggunaan operator logika dalam percabangan bisa membuat percabangan menjadi
lebih singkat.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Wah, ternyata banyak juga ya.&lt;/p&gt;

&lt;p&gt;Intinya pahami yang tiga bentuk itu. Kemudian
cobalah cari contoh kasus yang berbeda.&lt;/p&gt;

&lt;p&gt;Semakin banyak latihan semakin mantap.&lt;/p&gt;

&lt;p&gt;Ada pertanyaan?&lt;/p&gt;

&lt;p&gt;Silahkan tanyakan melalui komentar atau &lt;a href=&#34;https://m.me/petanikode&#34;&gt;PM Petani Kode&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Selanjutnya, silahkan pelajari tentang &lt;a href=&#34;https://www.petanikode.com/pemrograman-java-perulangan/&#34;&gt;Perulangan dalam Java&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Jika artikel ini bermanfaat, silahkan dibagikan :smile:.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pemrograman java di lab (8): Menggunakan pangkat</title>
      <link>https://www.petanikode.com/pemrograman-java-di-lab-8-menggunakan-pangkat/</link>
      <pubDate>Sun, 18 Oct 2015 08:00:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/pemrograman-java-di-lab-8-menggunakan-pangkat/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Pada contoh kasus &lt;a href=&#34;http://petanikode.blogspot.com/2015/10/pemrograman-java-di-lab-2-algoritma.html&#34; target=&#34;_blank&#34;&gt;program luas lingkaran&lt;/a&gt; kemarin, kita menggunakan pangkat dua untuk menghitung luas lingkaran. Pangkat dua dapat ditulis dengan membuat perkalian dengan variabel atau bilangan yang akan dipangkatkan dua. Contoh, &lt;code&gt;r&lt;sup&gt;2&lt;/sup&gt;&lt;/code&gt; dapat ditulis &lt;code&gt;r*r&lt;/code&gt;. Tapi, bagaiamana kalau pangkatnya banyak? misal &lt;code&gt;4&lt;sup&gt;112&lt;/sup&gt;&lt;/code&gt;. Tidak mungkin kita akan melakukan perkalian sebanyak itu dalam kode. Oleh karena itu, kita membutuhkan fungsi pangkat untuk menghitungnya.&lt;br /&gt;&lt;br /&gt;Java sudah menyediakan fungsi pangkat yang dapat digunakan kapan saja. Fungsi ini memiliki dua parameter, yaitu bilangan yang akan dipangkatkan dan pangkatnya.&lt;br /&gt;&lt;pre&gt;Math.pow(bilangan, pangkat);&lt;/pre&gt;Contoh program, silahkan buat kelas baru bernama &lt;i&gt;Pangkat&lt;/i&gt; di paket &lt;i&gt;pertemuan3&lt;/i&gt;. Kemudian ikuti kode berikut:&lt;br /&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-Xh3_ALdPrug/ViJaw7ln3CI/AAAAAAAACDg/J4YeXknsEyc/s1600/program%2Bpemangkatan%2Bbilangan%2Bdi%2Bjava.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-Xh3_ALdPrug/ViJaw7ln3CI/AAAAAAAACDg/J4YeXknsEyc/s1600/program%2Bpemangkatan%2Bbilangan%2Bdi%2Bjava.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Kode program di atas, akan menghasilkan output: 32, karena 2&lt;sup&gt;5&lt;/sup&gt; akan menghasilkan 32.&lt;br /&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-LliT4M85udU/ViJbVl3k9CI/AAAAAAAACDo/5EEkMlk4bLk/s1600/output%2Bprogram%2Bpemangkatan%2Bdi%2Bjava.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://4.bp.blogspot.com/-LliT4M85udU/ViJbVl3k9CI/AAAAAAAACDo/5EEkMlk4bLk/s1600/output%2Bprogram%2Bpemangkatan%2Bdi%2Bjava.png&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>