<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Petani Kode — Programmer Pengguna Linux</title>
    <link>https://www.petanikode.com/topik/java/</link>
    <description>Recent content in Java on Petani Kode — Programmer Pengguna Linux</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>id-ID</language>
    <copyright>Copyright (c) 2017, Petani Kode; all rights reserved.</copyright>
    <lastBuildDate>Sat, 16 Sep 2017 16:41:31 +0800</lastBuildDate>
    
	<atom:link href="https://www.petanikode.com/topik/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Petani Kode - Programmer Pengguna Linux</title>
      <link>https://www.petanikode.com/</link>
      <pubDate>Sat, 16 Sep 2017 16:41:31 +0800</pubDate>
      
      <guid>https://www.petanikode.com/</guid>
      <description>   (adsbygoogle = window.adsbygoogle || []).push({});  -- </description>
    </item>
    
    <item>
      <title>Tutorial Java dan MySQL: Membuat Program CRUD Berbasis Teks</title>
      <link>https://www.petanikode.com/java-mysql/</link>
      <pubDate>Fri, 08 Sep 2017 06:44:27 +0800</pubDate>
      
      <guid>https://www.petanikode.com/java-mysql/</guid>
      <description>Program Java yang sering kita buat, biasanya akan menyimpan data dalam memori (RAM).
Setelah program ditutup, semuanya akan hilang. Karena sifatnya temporer.
Agar data yang diinputkan dapat disimpan secara &amp;lsquo;permanen&amp;rsquo;, kita membutuhkan database.
Ada banyak sekali pilihan database yang bisa digunakan, diantaranya: MySQL, SQLite, PostgreSQL, Ms. SQL Server, Oracle, MongoDB, dan sebagainya.
Pada kesempatan ini, kita akan belajar cara menghubungkan Java dengan MySQL dan membuat sebuah program CRUD sederhana berbasis teks.</description>
    </item>
    
    <item>
      <title>Ebook dan Video Pemrograman Android Gratis dari Google</title>
      <link>https://www.petanikode.com/ebook-android/</link>
      <pubDate>Fri, 18 Aug 2017 18:27:14 +0800</pubDate>
      
      <guid>https://www.petanikode.com/ebook-android/</guid>
      <description>Buat yang belum tahu:
Google saat ini sedang mengadakan program untuk melatih 100.000 developer Android di Indonesia.
Google ingin membuat pendidikan developer Android kelas dunia bisa diakses oleh semua pelajar dan developer di seluruh Indonesia.
Saat ini Google sudah bekerja sama dengan beberapa universitas di Indonesia:
 Institut Teknologi Bandung Universitas Gadjah Mada Universitas Bina Nusantara Universitas Katolik Parahyangan President University Institut Teknologi Harapan Bangsa Universitas Telkom Universitas Kristen Maranatha  Nah untuk mendukung program ini, Google sudah menyediakan ebook/modul dan video tutorial pemrograman android.</description>
    </item>
    
    <item>
      <title>Pemrograman Android: Mengenal Activity dan Siklus Hidupnya</title>
      <link>https://www.petanikode.com/android-activity/</link>
      <pubDate>Tue, 08 Aug 2017 18:44:36 +0800</pubDate>
      
      <guid>https://www.petanikode.com/android-activity/</guid>
      <description>Aplikasi Android setidaknya memiliki satu atau lebih Activity.
&amp;ldquo;Bagaimana kalau tidak memiliki Activity?&amp;rdquo;
Aplikasi itu akan menjadi aplikasi yang hanya bisa berjalan secara background saja dan tidak memiliki tampilan apa-apa.
Alias aplikasi demit :smile:.
Pada kesempatan ini kita akan berkenalan dengan Activity dan memahami siklus hidup Activity dalam aplikasi.
Mari kita mulai&amp;hellip;
Pengertian Activity Activity adalah komponen yang dapat dilihat oleh pengguna, sehingga mereka dapat berinteraksi dengan aplikasi.
Bila dibandingkan dengan aplikasi web dan desktop, Activity sama seperti halaman dan form.</description>
    </item>
    
    <item>
      <title>Kenapa Bahasa Pemrograman Java Kurang Cocok untuk Pemula?</title>
      <link>https://www.petanikode.com/java-bukan-untuk-pemula/</link>
      <pubDate>Sat, 21 Jan 2017 16:45:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-bukan-untuk-pemula/</guid>
      <description>Sudah dua kali semester saya mengajar di praktikum pemrograman Java. Hasilnya, hanya sebagian mahasiswa yang mengerti. Sebagiannya lagi masih pusing (atau mungkin saya yang tidak bisa mengajar).
Bahasa pemrograman Java memang populer dan banyak digunakan di lapangan, oleh karena itu pihak kampus memilih bahasa ini untuk diajarkan pada semester I.
Bapak Endy Muhardin, dalam tulisan di blognya yang berjudul Java: Tidak untuk Pemula mengatakan: &amp;ldquo;Java memang bahasa yang mature. Sudah stabil (artinya tidak terlalu banyak perubahan fundamental) dan sudah teruji digunakan berbagai aplikasi besar dengan sukses.</description>
    </item>
    
    <item>
      <title>Apakah Perbedaan dari i&#43;&#43; dengan &#43;&#43;i?</title>
      <link>https://www.petanikode.com/perbedaan-i-increment-dengan-increment-i/</link>
      <pubDate>Wed, 16 Nov 2016 05:07:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/perbedaan-i-increment-dengan-increment-i/</guid>
      <description>Dalam materi-materi perluangan simbol ++ sering kita temukan.
Simbol tersebut termasuk dalam operator aritmatika dan penugasan untuk meningkatkan atau menambah satu (+1) sebuah variabel.
Kadang ditulis seperti ini i++ dan juga seperti ini ++i.
Apa sih perbedaanya?
Post-increment dan Pre-increment Penulisan simbol ++ di dibelakang vairbel disebut dengan post-incement, sedangkan bila ditulis di depan, disebut dengan pre-increment.
Contoh:
Post-increment:
for(int i = 1; i &amp;lt;= 10; i++){ System.out.print(i); }  Pre-increment:</description>
    </item>
    
    <item>
      <title>Trik Agar Jendela JFrame Selalu Tampil di Tengah Layar</title>
      <link>https://www.petanikode.com/java-swing-jendela-di-tengah-layar/</link>
      <pubDate>Fri, 29 Jul 2016 23:03:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-swing-jendela-di-tengah-layar/</guid>
      <description>(adsbygoogle = window.adsbygoogle || []).push({});  Saat kita membuat program GUI dengan Swing, jendelanya sering tampil pada pojok kiri atas atau pada titik (0,0).
Bagaimana caranya agar jendela selalu tampil di tengah-tengah layar?
Apakah kita harus mengatur manual posisi titiknya?
Ya perlu, untuk lebih jelasnya mari kita bahas&amp;hellip;
Class-class yang dibutuhkan Ada dua class yang kita butuhkan untuk membuat jendela JFrame tampil di tengah-tengah.
 Dimension untuk membuat objek dimensi Toolkit untuk mengambil ukuran layar  Kedua class tersebut berada dalam package java.</description>
    </item>
    
    <item>
      <title>Menghitung Akar Kuadrat dan Akar Kubik di Java</title>
      <link>https://www.petanikode.com/java-akar-kuadrad-dan-kubik/</link>
      <pubDate>Sun, 15 May 2016 11:42:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-akar-kuadrad-dan-kubik/</guid>
      <description>Pada pelajaran Matematika, kadang kita sering menemukan perhitungan akar.
Contoh, akar kuadrat dari 25 adalah 5, karena 5x5=25, bisa ditulis: $\sqrt{25} = 5$. Lalu kalau akar kubik dari 27 adalah 3, karena 3x3x3=27, bisa ditulis: $\sqrt[3]{27} = 3$.
Bagaimana cara kita membuat perhitungan tersebu di Java?
Perhitungan akar kuadrat dapat dilakukan dengan fungsi sqrt(). Fungsi ini terdapat dalam class Math. Jadi untuk menghitung akar seperti di atas dalam kode java dapat dilakukan dengan cara berikut ini:</description>
    </item>
    
    <item>
      <title>Konversi Bilangan Desimal ke Bilangan Biner di Java</title>
      <link>https://www.petanikode.com/java-desimal-biner/</link>
      <pubDate>Sat, 30 Apr 2016 16:00:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-desimal-biner/</guid>
      <description>Konversi bilangan desimal ke biner sangat mudah dilakukan di Java, karena ada method atau fungsi yang sudah disediakan untuk melakukannya. Berikut ini tampilan program konversi yang saya buat dengan Java (Swing).Terdapat dua tombol pada program tersebut. Tombol pertama berfungsi untuk menentukan tipe konversinya (Desi-ke-Bin atau Bin-ke-Desi). Kode yang dikerjakan di tombol tersebut adalah sebagai berikut.
private void btnTipeKonversiActionPerformed(java.awt.event.ActionEvent evt) { &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;</description>
    </item>
    
    <item>
      <title>Operator ^ (xor) di Java bukan untuk Membuat Pangkat</title>
      <link>https://www.petanikode.com/java-operator-xor/</link>
      <pubDate>Fri, 29 Apr 2016 06:25:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-operator-xor/</guid>
      <description>Sebuah kekeliruan saya temukan ketika memeriksa kode program milik teman. Dia mengimplementasikan rumus berikut ke dalam kode java.
y = x2 + 3
Potongan kode program yang dia tulis.
int x = 3;
int y = x^2 + 3;
Hasilnya pun 6; tidak sesuai harapan. Seharusnya menghasilkan 12.
Operator ^ (Exclusive Or) disingkat xor, merupakan operator bitwise. Operator bitwise merupakan operator untuk memanipulasi bilangan biner.
Contoh konversi bilangan desimal ke biner (8bit):</description>
    </item>
    
    <item>
      <title>Pemrograman Android di Linux dengan Eclipse</title>
      <link>https://www.petanikode.com/android-linux-eclipse/</link>
      <pubDate>Thu, 28 Apr 2016 06:54:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/android-linux-eclipse/</guid>
      <description>Awalnya Google menggunakan Eclipse sebagai IDE untuk pengembangan Android. Kemudian beralih ke Android Studio.
Eclipse memang lebih ringan daripada Android Studio, akan tetapi Eclipse tidak lagi didukung oleh Google.
Namun tidak ada salahanya menggunakan Eclipse untuk membuat aplikasi Android.
Bila kamu ingin mencobanya, silahkan ikuti langkah-langkah berikut untuk melakukan perisapan.
1. Install JDK JDK (Java Development Kit) merupakan peralatan dasar yang dibutuhkan untuk pemrograman Java.
Karena aplikasi Android menggunakan bahasa pemrograman Java, maka kita perlu menginstal JDK.</description>
    </item>
    
    <item>
      <title>Belajar Pemrograman Java: Prosedur dan Fungsi</title>
      <link>https://www.petanikode.com/java-prosedur-dan-fungsi/</link>
      <pubDate>Fri, 22 Apr 2016 20:31:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-prosedur-dan-fungsi/</guid>
      <description>Pada contoh program di pembahasan sebelumnya, kita hanya menulis kode intruksi pada fungsi main() saja.
Fungsi main() adalah fungsi utama dalam program Java. Semua kode yang kita tulis di dalamnya, akan langsung dieksekusi.
Tapi masalahnya sekarang:
&amp;ldquo;Bagaimana kalau kita membuat program yang cukup besar, apakah kita masih bisa menulis semua kodenya di dalam fungsi main()?&amp;rdquo;
Bisa-bisa saja, tapi kurang efektif dan akan menghabiskan banyak tenaga untuk mengetik kodenya.
Belum lagi kalau ada error&amp;hellip;</description>
    </item>
    
    <item>
      <title>Belajar Pemrograman Java: Cara Menggunakan Array untuk Menyimpan Banyak Hal</title>
      <link>https://www.petanikode.com/java-array/</link>
      <pubDate>Thu, 21 Apr 2016 22:34:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-array/</guid>
      <description>Apa yang akan kita lakukan bila memiliki banyak data yang akan disimpan dalam vairabel?
Misalkan kita ingin menyimpan nama-nama teman dalam variabel.
Maka mungkin kita akan melakukannya seperti ini:
String namaTeman1 = &amp;quot;Linda&amp;quot;; String namaTeman2 = &amp;quot;Santi&amp;quot;; String namaTeman3 = &amp;quot;Susan&amp;quot;; String namaTeman4 = &amp;quot;Mila&amp;quot;; String namaTeman5 = &amp;quot;Ayu&amp;quot;;  Hal ini sah-sah saja.
Akan tetapi&amp;hellip;
Masalahnya bagaimana kala datanya banyak, misalkan ada 100 data, pastinya capek donk membuat variabel sebanyak itu.</description>
    </item>
    
    <item>
      <title>Pemrograman Java Swing: Membuat Jendela dengan JFrame</title>
      <link>https://www.petanikode.com/java-swing-jframe/</link>
      <pubDate>Sun, 17 Apr 2016 22:39:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-swing-jframe/</guid>
      <description>Jendela merupakan komponen utama sebuah aplikasi GUI.
Di dalam jendela kita memasukan berbagai macam komponen seperti tombol, teks, combobox, dan lain-lain.
Jendela pada pemrograman Swing dapat kita buat dengan Class JFrame.
Pada kesempatan ini, kita akan belajar cara membuat jendela dengan dua metode:
 Hard Coding Drag and drop  Mari kita mulai&amp;hellip;
   (adsbygoogle = window.adsbygoogle || []).push({});  Membuat Proyek Baru Sebelum kita mulai mulai membuat jendela, buatlah proyek baru pada Netbeans.</description>
    </item>
    
    <item>
      <title>Pilihan Alternatif Java dan Symbolic Link yang Buntu</title>
      <link>https://www.petanikode.com/java-alternatif-symbolic-link/</link>
      <pubDate>Wed, 06 Apr 2016 22:50:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-alternatif-symbolic-link/</guid>
      <description>Ketika saya bermain-main dengan perintah update-alternative untuk menambahakan pilihan alternatif java, malah terjadi error.
Hal ini disebabkan karena saya salah memasukkan symbolic link ketika menambahkan pilihan alternatif.
Berikut ini perintah salah yang menyebabkan masalah:
sudo update-alternative --install /etc/alternatives/java java /opt/jdk1.8.0_77/bin/java Perhatikan teks yang berwarna merah. Teks tersebut merupakan symbolic link yang berlokasi di /etc/alternatives.
Symbolic link yang seharusnya dimasukkan adalah /usr/bin/java.
Akibatnya, error:
petanikode@imajinasi:~$ sudo update-alternatives --config java update-alternatives: error: cannot stat file &#39;/etc/alternatives/java&#39;: Too many levels of symbolic links  Tidak dapat memilih alternatif java, karena symbolic link java yang berada di /etc/alternatives buntu (broken).</description>
    </item>
    
    <item>
      <title>Cara Mengatasi JDK yang Lebih dari Satu di Linux agar tidak Bentrok</title>
      <link>https://www.petanikode.com/java-jdk-lebih-dari-satu/</link>
      <pubDate>Tue, 05 Apr 2016 22:49:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-jdk-lebih-dari-satu/</guid>
      <description>Saya menginstal lebih dari satu JDK di Linux (Xubuntu). Ada Open JDK 8, Open JDK 7, dan Oracle JDK 8. A
walnya saya hanya punya Open JDK 8. Kemudian setelah mengintal Gradle, Open JDK 7 juga ikut tersintal.
Selain itu, saya juga menginstal Oracle JDK 8 Secara manual di direktori /opt.
Saat ini JDK yang sedang aktif digunakan adalah Open JDK 7.
Beberapa IDE tidak mendukung bila menggunakan Open JDK 7.</description>
    </item>
    
    <item>
      <title>Apa Fungsi String[] args pada Pemrograman Java?</title>
      <link>https://www.petanikode.com/java-args/</link>
      <pubDate>Sat, 19 Mar 2016 22:04:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-args/</guid>
      <description>(adsbygoogle = window.adsbygoogle || []).push({});  Saat awal-awal beralajar Java, kita sering menuliskan String[] args pada fungsi main().
class Program { public static void main(String[] args){ //... } }  Tanpa String[] args program tidak akan bisa dieksekusi. Bahkan akan mendapatkan error seperti ini.
Fungsi main() tidak akan dikenali sebagai fungsi main() karena tidak memiliki parameter String[] args.
Apa sih kegunaan dari String[] args?
Kenapa kita harus menuliskannya?</description>
    </item>
    
    <item>
      <title>Belajar Pemrograman Java: Memahami Dua Jenis Perulangan dalam Java</title>
      <link>https://www.petanikode.com/java-perulangan/</link>
      <pubDate>Sun, 03 Jan 2016 18:28:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-perulangan/</guid>
      <description>Apa yang akan kita lakukan bila ingin menyuruh komputer mengerjakan perintah yang berulang-ulang?
Misalkan kita ingin menyuruh komputer menampilkan teks Petani Kode sebanyak 5x.
Maka kita bisa menyuruhnya seperti ini:
System.out.println(&amp;quot;Petani Kode&amp;quot;); System.out.println(&amp;quot;Petani Kode&amp;quot;); System.out.println(&amp;quot;Petani Kode&amp;quot;); System.out.println(&amp;quot;Petani Kode&amp;quot;); System.out.println(&amp;quot;Petani Kode&amp;quot;);  Tapi&amp;hellip; bagaimana kalau sebanyak 1000x, apa kita akan mampu mengetik kode sebanyak itu?
Tentunya tidak.
Karena itu, kita harus pakai perulangan.

Contoh perulangan:
for (int hitungan = 0; hitungan &amp;lt;= 1000; hitungan++) { System.</description>
    </item>
    
    <item>
      <title>Belajar Java: 3 Bentuk Percabangan yang Harus Dipahami</title>
      <link>https://www.petanikode.com/java-percabangan/</link>
      <pubDate>Sun, 25 Oct 2015 18:33:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-percabangan/</guid>
      <description>Kalau kita perhatikan, alur pengeksekusian sebuah kode program dikerjakan satu per satu dari atas sampai ke bawah.
Baris demi baris dibaca, kemudian komputer mengerjakan apa yang diperintahkan.
Misalnya seperti ini:
Alur programnya satu, tidak ada belokan atau percabangan.
Ngomong-ngomong apa itu percabangan?
Percabangan hanyalah sebuah istilah yang digunakan untuk menyebut alur program yang bercabang.
Percabangan juga dikenal dengan &amp;ldquo;Control Flow&amp;rdquo;, &amp;ldquo;Struktur Kondisi&amp;rdquo;, &amp;ldquo;Struktur IF&amp;rdquo;, &amp;ldquo;Decision&amp;rdquo;, dsb. Semuanya itu sama.</description>
    </item>
    
    <item>
      <title>Belajar java: Cara Menggunakan Pangkat</title>
      <link>https://www.petanikode.com/java-pangkat/</link>
      <pubDate>Sun, 18 Oct 2015 08:00:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-pangkat/</guid>
      <description>Pada contoh kasus program luas lingkaran kemarin, kita menggunakan pangkat dua untuk menghitung luas lingkaran. Pangkat dua dapat ditulis dengan membuat perkalian dengan variabel atau bilangan yang akan dipangkatkan dua. Contoh, r2 dapat ditulis r*r. Tapi, bagaiamana kalau pangkatnya banyak? misal 4112. Tidak mungkin kita akan melakukan perkalian sebanyak itu dalam kode. Oleh karena itu, kita membutuhkan fungsi pangkat untuk menghitungnya.
Java sudah menyediakan fungsi pangkat yang dapat digunakan kapan saja.</description>
    </item>
    
    <item>
      <title>Pemrograman Java Swing: Cara Menggunakan JOptionPane</title>
      <link>https://www.petanikode.com/java-swing-joptionpane/</link>
      <pubDate>Sat, 17 Oct 2015 21:34:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-swing-joptionpane/</guid>
      <description>Agar program yang kita mempu berinteraksi dengan pengguna, kita harus membuat sebuah dialog dengannya.
Pada Java Swing, terdapat sebuah komponen bernama JOptionPane untuk membuat dialog yang interakif.
Bagaimana cara menggunakan JOptionPane?
Mari kita simak pembahsannya&amp;hellip;
Mengenal JOptionPane JOptionPane merupakan sebuah kelas yang menyediakan jendela dialog.
JOptionPane bisa kita gunakan untuk mengambil input, menampilkan informasi, menampilkan pesan error, menampilkan dialog konfirmasi, dan lain-lain.
Sebelum menggunakan JOptionPane, kita harus mengimpornya terlebih dahulu ke dalam program:</description>
    </item>
    
    <item>
      <title>Belajar Pemrograman Java: 6 Jenis Operator yang Harus Dipahami</title>
      <link>https://www.petanikode.com/java-operator/</link>
      <pubDate>Sat, 17 Oct 2015 20:12:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-operator/</guid>
      <description>Operator dalam pemrograman digunakan untuk melakukan operasi tertentu.
Misalkan kita ingin menjumlahkan nilai dari variabel x dan y, maka kita bisa lakukan dengan operator penjumlahan (+).
x + y  Ada enam jenis kelompok operator dalam pemrograman Java:
 Operator Artimatika; Operator Penugasan; Operator Pembanding; Operator Logika; Operator Bitwise; dan Operator Ternary.  Bila digambarkan dalam mind map, akan terlihat seperti ini:
Ukuran penuh dari mind map ini dapat kamu lihat di: coggle.</description>
    </item>
    
    <item>
      <title>Belajar Java: Cara Mengambil Input dan Menampilkan Output</title>
      <link>https://www.petanikode.com/java-input-output/</link>
      <pubDate>Mon, 12 Oct 2015 09:35:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-input-output/</guid>
      <description>Seperti yang kita ketahui, program komputer terdiri dari tiga komponen utama, yaitu: input, proses, dan output.
 Input: nilai yang kita masukan ke program Proses: langkah demi langkah yang dilakukan untuk mengelola input menjadi sesuatu yang berguna Output: hasil pengolahan  Semua bahasa pemrograman telah menyediakan fungs-fungsi untuk melakukan input dan output.
Java sendiri sudah menyediakan tiga class untuk mengambil input:
 Class Scanner; Class BufferReader; dan Class Console.  Tiga class tersebut untuk mengambil input pada program berbasis teks (console).</description>
    </item>
    
    <item>
      <title>Belajar Pemrograman Java: Variabel dan Tipe Data</title>
      <link>https://www.petanikode.com/java-variabel-dan-tipe-data/</link>
      <pubDate>Sun, 11 Oct 2015 13:44:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-variabel-dan-tipe-data/</guid>
      <description>Variabel adalah tempat menyimpan nilai sementara.
Itu saja.
Serius?
Iya serius, kalau mau yang lebih panjang&amp;hellip;
&amp;hellip;coba kita lihat pengertiannya dari Wikipedia:
Variabel: (Lat) 1. berubah-ubah, tidak tetap; 2. deklarasi sesuatu yang memiliki variasi nilai 3. berbeda-beda dalam bahasa pemrograman disebut juga simbol yang mewakili nilai tertentu, variabel yang dikenal di sub program disebut variabel lokal. sedang yang di kenal secara umum/utuh dalam satu program disebut variabel global.
Nah, ngerti gak?</description>
    </item>
    
    <item>
      <title>Belajar Pemrograman Java: Program Java Pertama yang Harus Anda Buat</title>
      <link>https://www.petanikode.com/java-program-pertama/</link>
      <pubDate>Wed, 07 Oct 2015 21:50:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-program-pertama/</guid>
      <description>Setelah mempersiapkan alat-alat yang dibutuhkan, selanjutnya kita coba membuat program pertama.
Program yang akan dibuat sederhana, hanya menampilkan pesan ke Layar.
Program ini biasanya disebut program Hello World.
Siap&amp;hellip;?
Sebelum Memulai, Pahami Dulu Konsepnya Pemrograman java sebenarnya sangat sederhana.
Kita hanya melakukan hal ini:
 Tulis kode: Menulis kode dengan Netbeans maupun teks editor yang lain. Kompilasi: Mengubah kode menjadi bytecode. Eksekusi: Menjalankan program    Sekarang, Mari Kita Mulai&amp;hellip; Pertama kita harus membuat proyek dulu di Netbeans.</description>
    </item>
    
    <item>
      <title>Belajar Java di Linux: Inilah Persiapan yang Harus dilakukan</title>
      <link>https://www.petanikode.com/java-linux/</link>
      <pubDate>Sun, 11 Jan 2015 16:40:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-linux/</guid>
      <description>Ingin belajar pemrograman Java di Linux?
Maka ini adalah artikel yang tepat untukmu.
Pada artikel ini, saya akan membahas persiapan alat-alat yang digunakan untuk pemrograman Java di Linux.
Selain itu, nanti kita akan coba membuat program sederhana.
Siap&amp;hellip;?
Mari kita mulai.
Persiapan Alat Adapun alat-alat yang perlu dispersiapan untuk belajar pemrograman Java di Linux adalah sebagai berikut:
1. Teks Editor Teks editor digunakan untuk menulis kode.
Baca juga:
 6 Teks Editor Berbasis Teks di Linux untuk Menulis Kode  Silahkan gunakan teks editor favoritmu.</description>
    </item>
    
  </channel>
</rss>