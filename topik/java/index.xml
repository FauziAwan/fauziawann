<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Petani Kode</title>
    <link>http://petanikode.gitlab.io/topik/java/index.xml</link>
    <description>Recent content in Java on Petani Kode</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>id-id</language>
    <copyright>Copyright (c) 2017, Petani Kode; all rights reserved.</copyright>
    <atom:link href="http://petanikode.gitlab.io/topik/java/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Kenapa Bahasa Pemrograman Java Kurang Cocok untuk Pemula?</title>
      <link>http://petanikode.gitlab.io/2017/01/kenapa-bahasa-pemrograman-java-kurang-cocok-untuk-pemula/</link>
      <pubDate>Sat, 21 Jan 2017 16:45:00 +0000</pubDate>
      
      <guid>http://petanikode.gitlab.io/2017/01/kenapa-bahasa-pemrograman-java-kurang-cocok-untuk-pemula/</guid>
      <description>

&lt;p&gt;Sudah dua kali semester saya mengajar di praktikum pemrograman &lt;a href=&#34;http://petanikode.gitlab.io/topik/java&#34;&gt;Java&lt;/a&gt;. Hasilnya, hanya sebagian mahasiswa yang mengerti. Sebagiannya lagi masih pusing. Karena mereka belum pernah ada pengalaman &lt;em&gt;coding&lt;/em&gt; sebelumnya. Bahasa pemrograman Java memang populer, oleh karena itu pihak kampus memilih bahasa ini untuk diajarkan pada semester I.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
width=&#34;720&#34;
height=&#34;380&#34;
alt=&#34;Anak-anak ngoding di sawah&#34;
src=&#34;https://4.bp.blogspot.com/-JLEbu94zv1c/WGjrfTdQdrI/AAAAAAAADjg/OkDhW7IniKY5d21yGt-Nb4rChbTtSPE9gCK4B/s1600/Anak-anak%2Bcoding%2Bdi%2Bsawah%2BPetani%2BKode.jpg&#34;
layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Om Endy Muhardin, dalam tulisan di blognya yang berjudul &lt;a href=&#34;http://software.endy.muhardin.com/java/java-tidak-untuk-pemula/&#34;&gt;Java: Tidak untuk Pemula&lt;/a&gt; mengatakan: &amp;ldquo;Java memang bahasa yang &lt;em&gt;mature&lt;/em&gt;. Sudah stabil (artinya tidak terlalu banyak perubahan fundamental) dan sudah teruji digunakan berbagai aplikasi besar dengan sukses. Tetapi tidak berarti mudah bagi pemula.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Kemudian saya mencoba mengumpulkan beberapa alasan, kenapa bahasa pemrograman Java kurang cocok untuk pemula.&lt;/p&gt;

&lt;h2 id=&#34;1-sintak-susah-dihapal&#34;&gt;1. Sintak Susah Dihapal&lt;/h2&gt;

&lt;p&gt;Menurut saya, sintak Java agak susah dihapal/diingat. Karena sintaknya cukup panjang. Pembuatan program &lt;em&gt;Hello World&lt;/em&gt; saja sampai sepanjang ini.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;package com.petanikode.HelloWorld;

    public class HelloWorld {
        public static void main(String[] args){
        System.out.println(&amp;quot;Hello World&amp;quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pada pertemuan pertama, saya mengajarkan kode di atas. Besoknya tidak ada yang ingat, kalau tidak mencontek.&lt;/p&gt;

&lt;h2 id=&#34;2-belum-belajar-akses-level&#34;&gt;2. Belum Belajar Akses Level&lt;/h2&gt;

&lt;p&gt;Pada pemrograman berorientasikan objek, ada yang namanya akses level &lt;i&gt;(public, protected, &lt;/i&gt;dan&lt;i&gt; private)&lt;/i&gt;. Akses level ini untuk menentukan akses pada class, atribut, dan method. Bagaimana seorang yang tidak pernah &lt;i&gt;coding&lt;/i&gt; akan mengerti hal ini. Sedangkan mereka tidak pernah belajar OOP. Saya pun ikut bingung mau menjelaskannya seperti apa.&lt;/p&gt;

&lt;h2 id=&#34;3-belum-belajar-class&#34;&gt;3. Belum Belajar Class&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Class&lt;/em&gt;, apaan itu? &lt;em&gt;Class&lt;/em&gt; adalah rancangan dari sebuah objek. Objek, apaan lagi itu? Duh! Akhirnya saya menjelaskan &lt;em&gt;Class&lt;/em&gt; itu untuk membuat nama program. Meskipun itu bukan pengertian yang sesungguhnya.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;package com.petanikode.NamaProgram;

    public class NamaProgram {
        public static void main(String[] args){
            System.out.println(&amp;quot;Hello World&amp;quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;4-belum-belajar-array&#34;&gt;4. Belum Belajar Array&lt;/h2&gt;

&lt;p&gt;Lihat saja pada program &lt;em&gt;HelloWorld&lt;/em&gt; di atas, array sudah digunakan untuk menyimpan argumen atau parameter. Mereka lalu bertanya, &amp;ldquo;Kata om tadi &lt;code&gt;String[] args&lt;/code&gt; itu sebuah &lt;em&gt;array&lt;/em&gt; yang bertipe data &lt;em&gt;String&lt;/em&gt;. &lt;em&gt;String&lt;/em&gt; itu apa dan &lt;em&gt;Array&lt;/em&gt; itu apa?&amp;rdquo; Penjelasan teknikal saya pun tidak bisa dipahami, karena mereka belum belajar variabel, tipe data, dan &lt;em&gt;array&lt;/em&gt;. Mau tidak mau, kita harus mengabaikan dulu bagian ini.&lt;/p&gt;

&lt;h2 id=&#34;5-belum-tahu-method-instance-dan-static&#34;&gt;5. Belum Tahu Method Instance dan Static&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;Static void main&lt;/em&gt; itu maksudnya apa? Kenapa harus ada &lt;em&gt;static&lt;/em&gt;? &lt;em&gt;main&lt;/em&gt; adalah &lt;em&gt;method&lt;/em&gt; utama dalam program. &lt;em&gt;Method&lt;/em&gt; ini wajib ada agar program bisa dijalankan. Tunggu dulu, &lt;em&gt;method&lt;/em&gt; itu apa om?&lt;/p&gt;

&lt;p&gt;Karena belum memahami OOP, mereka pun tidak akan bisa mengerti bila saya jelakan dengan sudut pandang OOP.&lt;/p&gt;

&lt;h2 id=&#34;6-belum-paham-tentang-package&#34;&gt;6. Belum Paham Tentang Package&lt;/h2&gt;

&lt;p&gt;Apa maksud dari baris ini om?&lt;br&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;package com.petanikode.NamaProgram;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Itu untuk menandakan lokasi &lt;em&gt;namespace&lt;/em&gt; atau lokasi kodenya. Wah, &lt;em&gt;namespace&lt;/em&gt; itu apa lagi om?&lt;/p&gt;

&lt;p&gt;Jadi, itulah beberapa alasan kenapa bahasa &lt;a href=&#34;https://petanikode.com/search/label/Pemrograman&#34;&gt;pemrograman&lt;/a&gt; Java kurang cocok untuk pemula. Karena Java menggunakan paradigma OOP &lt;em&gt;(Object Oriented Programming)&lt;/em&gt;, sedangkan para pemula yang belum parnah &lt;em&gt;coding&lt;/em&gt; tidak pernah belajar tentang OOP. Namun, bukan berarti Java tidak boleh dipelajari oleh pemula. Silahkan dipelajari dengan tekun.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Apakah Perbedaan dari i&#43;&#43; dengan &#43;&#43;i?</title>
      <link>http://petanikode.gitlab.io/2016/11/apakah-perbedaan-dari-i&#43;&#43;-dengan-&#43;&#43;i/</link>
      <pubDate>Wed, 16 Nov 2016 05:07:00 +0000</pubDate>
      
      <guid>http://petanikode.gitlab.io/2016/11/apakah-perbedaan-dari-i&#43;&#43;-dengan-&#43;&#43;i/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-6j668XHTBQo/WCnfapitW3I/AAAAAAAADbA/9eERDIwxUTw4octKK6KfTBNb1E5I8KiBwCK4B/s1600/post-increment-vs-pre-increment-ptenikode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img alt=&#34;post-increment vs pre-increment&#34; border=&#34;0&#34; src=&#34;https://3.bp.blogspot.com/-6j668XHTBQo/WCnfapitW3I/AAAAAAAADbA/9eERDIwxUTw4octKK6KfTBNb1E5I8KiBwCK4B/s1600/post-increment-vs-pre-increment-ptenikode.png&#34; title=&#34;&#34; /&gt;&lt;/a&gt;Sebagai pemula, kita mungkin sedikit bingung dengan perbedaan dari &lt;code&gt;i++&lt;/code&gt; &lt;i&gt;(post increment)&lt;/i&gt; dengan &lt;code&gt;++i&lt;/code&gt; &lt;i&gt;(pre increment)&lt;/i&gt;. Simbol &lt;code&gt;++&lt;/code&gt; artinya tambah satu (&lt;code&gt;+1&lt;/code&gt;) atau &lt;i&gt;increment&lt;/i&gt;. &lt;code&gt;i++&lt;/code&gt; dan &lt;code&gt;++i&lt;/code&gt; sering kita temukan ketika membuat sebuah perulangan.&lt;br /&gt;&lt;br /&gt;Contoh:&lt;br /&gt;&lt;i&gt;Post-Increment &lt;/i&gt;&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;for(int i = 1; i &amp;lt;= 10; i++){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; System.out.print(i);&lt;br /&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;i&gt;Pre-Increment &lt;/i&gt;&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;for(int i = 1; i &amp;lt;= 10; ++i){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; System.out.print(i);&lt;br /&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;Kedua perulangan tersebut akan menghasilkan bilangan dari &lt;code&gt;1&lt;/code&gt; sampai &lt;code&gt;10&lt;/code&gt;.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;12345678910&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;&lt;code&gt;i++&lt;/code&gt; itu sama seperti &lt;code&gt;i = i + 1&lt;/code&gt;, jadi nilai variabel &lt;code&gt;i&lt;/code&gt; yang sebelumnya akan ditambah satu. Sedangkan &lt;code&gt;++i&lt;/code&gt; sama seperti &lt;code&gt;i = 1 + i&lt;/code&gt;, satu ditambah dengan nilai variabel &lt;code&gt;i&lt;/code&gt; yang sebelumnya. Apakah ada perbedaan? tentu saja ada, posisi &lt;code&gt;i&lt;/code&gt; dengan angka &lt;code&gt;1&lt;/code&gt; berbeda. Namun, meskipun begitu, hasilnya akan tetap sama. Lalu, di mana kah letak perbedaan yang sesungguhnya?&lt;br /&gt;&lt;br /&gt;Perbedaan &lt;code&gt;i++&lt;/code&gt; dan &lt;code&gt;++i&lt;/code&gt; dapat kita lihat pada sebuah ekspresi atau &lt;i&gt;statement&lt;/i&gt;. Misalkan, selain variabel &lt;code&gt;i&lt;/code&gt;, kita punya variabel &lt;code&gt;a&lt;/code&gt;. Kemudian variabel &lt;code&gt;a&lt;/code&gt; kita isi dengan &lt;code&gt;i++&lt;/code&gt; atau &lt;code&gt;++i&lt;/code&gt;.&lt;br /&gt;&lt;br /&gt;&lt;i&gt;Post-Increment&lt;/i&gt;&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;int a;&lt;br /&gt;int i = 1;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;a = i++;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;System.out.println(&amp;ldquo;a = &amp;rdquo; + a);&lt;br /&gt;System.out.println(&amp;ldquo;i = &amp;rdquo; + i);&lt;/code&gt;&lt;/pre&gt;Hasil output:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;a = 1&lt;br /&gt;i = 2&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;&lt;i&gt;Pre-Increment&lt;/i&gt;&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;int a;&lt;br /&gt;int i = 1;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;a = ++i;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;System.out.println(&amp;ldquo;a = &amp;rdquo; + a);&lt;br /&gt;System.out.println(&amp;ldquo;i = &amp;rdquo; + i);&lt;/code&gt;&lt;/pre&gt;Hasil output:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;a = 2&lt;br /&gt;i = 2&lt;/code&gt;&lt;/pre&gt;Perhatikanlah! apakah ada perbedaan sekarang? Pada &lt;i&gt;post-increment&lt;/i&gt;, nilai &lt;code&gt;a&lt;/code&gt; akan mengambil nilai &lt;code&gt;i&lt;/code&gt;, tanpa ditambah satu. Sedangkan pada p&lt;i&gt;re-increment&lt;/i&gt;, nilai &lt;code&gt;a&lt;/code&gt; akan mengambil nilai &lt;code&gt;i&lt;/code&gt; yang ditambah satu terlebih dahulu. Itulah perbedaan yang cukup terlihat dari &lt;i&gt;post-increment&lt;/i&gt; (&lt;code&gt;i++&lt;/code&gt;) dengan &lt;i&gt;pre-increment&lt;/i&gt; (&lt;code&gt;++i&lt;/code&gt;).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Trik Agar Jendela JFrame Tampil di Tengah Layar</title>
      <link>http://petanikode.gitlab.io/2016/07/trik-agar-jendela-jframe-tampil-di-tengah-layar/</link>
      <pubDate>Fri, 29 Jul 2016 23:03:00 +0000</pubDate>
      
      <guid>http://petanikode.gitlab.io/2016/07/trik-agar-jendela-jframe-tampil-di-tengah-layar/</guid>
      <description>&lt;p&gt;Pada pemrograman GUI dengan &lt;i&gt;Java Swing&lt;/i&gt;, kita sering membuat jendela dengan JFrame. Namun, selalu tampil di pojok kiri atas layar. Pojok kiri atas adalah titik (&lt;code&gt;0&lt;/code&gt;,&lt;code&gt;0&lt;/code&gt;) dalam koordinat layar (x,y). Pada kesempatan ini saya akan berbagi trik, agar setiap jendela yang dibuat dengan &lt;i&gt;JFrame&lt;/i&gt; tampil di tengah-tengah layar.&lt;br /&gt;&lt;h2&gt;1. Komposisi Pustaka&lt;/h2&gt;Ada dua pustaka yang diperlukan untuk membuat jendela &lt;i&gt;JFrame&lt;/i&gt; tampil di tengah-tengah. Silahkan diimpor:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;import java.awt.Dimension;&lt;br /&gt;import java.awt.Toolkit;&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;2. Kode Agar Tampil di Tengah&lt;/h2&gt;Letakan kode berikut di dalam konstruktor &lt;i&gt;JFrame&lt;/i&gt;.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();&lt;br /&gt;this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);&lt;/code&gt;&lt;/pre&gt;Pertama kita ambil ukuran layar dengan &lt;i&gt;Toolkit&lt;/i&gt;, kemudian ukuran tersebut dibuat menjadi objek dimensi. Kedua, membagi dua ukuran lebar dan tinggi layar dan dikurangi ukuran &lt;i&gt;JFrame&lt;/i&gt;. Kata kunci &lt;code&gt;this&lt;/code&gt; pada kode di atas merefrensi pada &lt;i&gt;JFrame&lt;/i&gt; (&lt;code&gt;this&lt;/code&gt; itu JFrame-nya). Hasil bagi dua dan pengurangan adalah titik tengah dan itu kita pakai sebagai lokasi awal &lt;i&gt;JFrame&lt;/i&gt;.&lt;br /&gt;&lt;h2&gt;3. Kode Lengkap&lt;/h2&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;&lt;span style=&#34;background-color: #b6d7a8;&#34;&gt;import java.awt.Dimension;&lt;br /&gt;import java.awt.Toolkit;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;public class JendelaPercobaan extends javax.swing.JFrame {&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; // konstruktor&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; public JendelaPercobaan() {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;span style=&#34;background-color: #b6d7a8;&#34;&gt;initComponents();&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);&lt;/span&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; @SuppressWarnings(&amp;ldquo;unchecked&amp;rdquo;)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; // &amp;lt;editor-fold defaultstate=&amp;ldquo;collapsed&amp;rdquo; desc=&amp;ldquo;Generated Code&amp;rdquo;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; private void initComponents() {&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; jLabel1 = new javax.swing.JLabel();&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; jLabel1.setText(&amp;ldquo;www.petanikode.com&amp;rdquo;);&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; getContentPane().setLayout(layout);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; layout.setHorizontalGroup(&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; .addGroup(layout.createSequentialGroup()&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; .addGap(138, 138, 138)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; .addComponent(jLabel1)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; .addContainerGap(143, Short.MAX_VALUE))&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; );&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; layout.setVerticalGroup(&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; .addGroup(layout.createSequentialGroup()&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; .addGap(134, 134, 134)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; .addComponent(jLabel1)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; .addContainerGap(149, Short.MAX_VALUE))&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; );&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; pack();&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }// &amp;lt;/editor-fold&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; public static void main(String args[]) {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; /* Set the Nimbus look and feel &lt;em&gt;/&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; //&amp;lt;editor-fold defaultstate=&amp;ldquo;collapsed&amp;rdquo; desc=&amp;rdquo; Look and feel setting code (optional) &amp;ldquo;&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; /&lt;/em&gt; If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; * For details see &lt;a href=&#34;http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html&#34;&gt;http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html&lt;/a&gt; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;em&gt;/&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; try {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; if (&amp;ldquo;Nimbus&amp;rdquo;.equals(info.getName())) {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; javax.swing.UIManager.setLookAndFeel(info.getClassName());&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; break;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; } catch (ClassNotFoundException ex) {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; java.util.logging.Logger.getLogger(JendelaPercobaan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; } catch (InstantiationException ex) {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; java.util.logging.Logger.getLogger(JendelaPercobaan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; } catch (IllegalAccessException ex) {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; java.util.logging.Logger.getLogger(JendelaPercobaan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; } catch (javax.swing.UnsupportedLookAndFeelException ex) {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; java.util.logging.Logger.getLogger(JendelaPercobaan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; //&amp;lt;/editor-fold&amp;gt;&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; /&lt;/em&gt; Create and display the form */&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; java.awt.EventQueue.invokeLater(new Runnable() {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; public void run() {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; new JendelaPercobaan().setVisible(true);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; });&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; // Variables declaration - do not modify&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; private javax.swing.JLabel jLabel1;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; // End of variables declaration&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;}&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;4. Uji Coba&lt;/h2&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-oK3kCCbzHY0/V5tur3iPgKI/AAAAAAAAAAQ/R3HSbAw1p5Uvj8AMnm9A02kUKzjnFpoMgCK4B/s1600/Jendela%2BJFrame%2Btampil%2Bdi%2Btengah%2Blayar%2B-%2Bpetanikode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://4.bp.blogspot.com/-oK3kCCbzHY0/V5tur3iPgKI/AAAAAAAAAAQ/R3HSbAw1p5Uvj8AMnm9A02kUKzjnFpoMgCK4B/s1600/Jendela%2BJFrame%2Btampil%2Bdi%2Btengah%2Blayar%2B-%2Bpetanikode.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Referensi: &lt;a href=&#34;http://stackoverflow.com/a/2442610&#34; target=&#34;_blank&#34;&gt;Stack Overflow&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Menghitung Akar Kuadrat dan Akar Kubik di Java</title>
      <link>http://petanikode.gitlab.io/2016/05/menghitung-akar-kuadrat-dan-akar-kubik-di-java/</link>
      <pubDate>Sun, 15 May 2016 11:42:00 +0000</pubDate>
      
      <guid>http://petanikode.gitlab.io/2016/05/menghitung-akar-kuadrat-dan-akar-kubik-di-java/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://2.bp.blogspot.com/-P_5MSHpv9zA/VyKK4CjK9ZI/AAAAAAAACxk/Ptclg7VEuNQija-Acz8opEyp71ejcFQcwCLcB/s1600/Matematika%2BJava%2B-%2BPetani%2BKode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://2.bp.blogspot.com/-P_5MSHpv9zA/VyKK4CjK9ZI/AAAAAAAACxk/Ptclg7VEuNQija-Acz8opEyp71ejcFQcwCLcB/s1600/Matematika%2BJava%2B-%2BPetani%2BKode.png&#34; /&gt;&lt;/a&gt;Pada pelajaran Matematika, kadang kita sering menemukan perhitungan akar. Contoh, akar kuadrat dari &lt;code&gt;25&lt;/code&gt; adalah &lt;code&gt;5&lt;/code&gt;, karena &lt;code&gt;5x5=25&lt;/code&gt;, bisa ditulis: $\sqrt{25} = 5$. Lalu kalau akar kubik dari &lt;code&gt;27&lt;/code&gt; adalah &lt;code&gt;3&lt;/code&gt;, karena &lt;code&gt;3x3x3=27&lt;/code&gt;, bisa ditulis: $\sqrt[3]{27} = 3$.&lt;br /&gt;&lt;br /&gt;Bagaimana cara kita membuat perhitungan tersebu di Java? Perhitungan akar kuadrat dapat dilakukan dengan fungsi &lt;code&gt;sqrt()&lt;/code&gt;. Fungsi ini terdapat dalam &lt;i&gt;class&lt;/i&gt; &lt;code&gt;Math&lt;/code&gt;. Jadi untuk menghitung akar seperti di atas dalam kode java dapat dilakukan dengan cara berikut ini:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;Math.sqrt(25);&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Fungsi tersebut akan menghasilkan: &lt;code&gt;5&lt;/code&gt;&lt;br /&gt;Sementara itu untuk perhitungan akar kubik dapat dilakukan dengan fungsi &lt;code&gt;cbrt()&lt;/code&gt;. Contoh:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;Math.cbrt(27);&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Akan menghasilkan: &lt;code&gt;3&lt;/code&gt;&lt;br /&gt;&lt;h2&gt;Kesimpulan&lt;/h2&gt;Jadi, untuk menghitung akar kuadrad dan akar kubik di java, kita gunakan fungsi &lt;code&gt;Math.sqrt()&lt;/code&gt; untuk akar kuadrat dan &lt;code&gt;Math.cbrt()&lt;/code&gt; untuk akar kubik.&lt;script type=&#34;text/x-mathjax-config&#34;&gt;MathJax.Hub.Config({   tex2jax: {inlineMath: [[&amp;lsquo;$&amp;rsquo;,&amp;lsquo;$&amp;rsquo;], [&amp;rsquo;\(&amp;lsquo;,&amp;rsquo;\)&amp;lsquo;]]} }); &lt;/script&gt;&lt;br /&gt;&lt;script async=&#34;&#34; src=&#34;https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML&#34; type=&#34;text/javascript&#34;&gt;&lt;/script&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Konversi Bilangan Desimal ke Bilangan Biner di Java</title>
      <link>http://petanikode.gitlab.io/2016/04/konversi-bilangan-desimal-ke-bilangan-biner-di-java/</link>
      <pubDate>Sat, 30 Apr 2016 16:00:00 +0000</pubDate>
      
      <guid>http://petanikode.gitlab.io/2016/04/konversi-bilangan-desimal-ke-bilangan-biner-di-java/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://2.bp.blogspot.com/-P_5MSHpv9zA/VyKK4CjK9ZI/AAAAAAAACxk/Ptclg7VEuNQija-Acz8opEyp71ejcFQcwCLcB/s1600/Matematika%2BJava%2B-%2BPetani%2BKode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://2.bp.blogspot.com/-P_5MSHpv9zA/VyKK4CjK9ZI/AAAAAAAACxk/Ptclg7VEuNQija-Acz8opEyp71ejcFQcwCLcB/s1600/Matematika%2BJava%2B-%2BPetani%2BKode.png&#34; /&gt;&lt;/a&gt;Konversi bilangan desimal ke biner sangat mudah dilakukan di Java, karena ada &lt;i&gt;method&lt;/i&gt; atau fungsi yang sudah disediakan untuk melakukannya. Berikut ini tampilan program konversi yang saya buat dengan Java (&lt;a href=&#34;http://petanikode.com/search/label/Android&#34; target=&#34;_blank&#34;&gt;Swing&lt;/a&gt;).&lt;a href=&#34;http://4.bp.blogspot.com/-yRpuezdZqlw/VyKc3J8no-I/AAAAAAAACx4/U5AojmPQXuQ0Zp9SztMpCexi24lbugbegCK4B/s1600/Program%2BKonversi%2BBilangan%2BDesimal%2Bke%2BBiner.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://4.bp.blogspot.com/-yRpuezdZqlw/VyKc3J8no-I/AAAAAAAACx4/U5AojmPQXuQ0Zp9SztMpCexi24lbugbegCK4B/s1600/Program%2BKonversi%2BBilangan%2BDesimal%2Bke%2BBiner.png&#34; /&gt;&lt;/a&gt;Terdapat dua tombol pada program tersebut. Tombol pertama berfungsi untuk menentukan tipe konversinya (Desi-ke-Bin atau Bin-ke-Desi). Kode yang dikerjakan di tombol tersebut adalah sebagai berikut.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;private void btnTipeKonversiActionPerformed(java.awt.event.ActionEvent evt) { &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if(btnTipeKonversi.getText().equals(&amp;ldquo;=&amp;gt;&amp;rdquo;)){&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; btnTipeKonversi.setText(&amp;rdquo;&amp;lt;=&amp;ldquo;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; btnTipeKonversi.setText(&amp;ldquo;=&amp;gt;&amp;rdquo;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if(btnTipeKonversi.getText().equals(&amp;ldquo;=&amp;gt;&amp;rdquo;)){&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; txtBiner.setEnabled(false);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; txtBiner.setText(&amp;ldquo;&amp;rdquo;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; txtDesimal.setEnabled(true);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; txtBiner.setEnabled(true);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; txtDesimal.setEnabled(false);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; txtDesimal.setText(&amp;ldquo;&amp;rdquo;);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;&amp;nbsp; &amp;nbsp; }&lt;/code&gt;&lt;/pre&gt;Sedangkan tombol berikutnya berfungsi untuk mengkonversi bilangan yang diinputkan. Kodenya sebagai berikut.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;private void btnKonversiActionPerformed(java.awt.event.ActionEvent evt) { &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; try { &amp;nbsp; &lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; if(txtBiner.getText().isEmpty()){&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int desi = Integer.valueOf(txtDesimal.getText());&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // konversi ke biner&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; String bin = Integer.toBinaryString(desi);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; txtBiner.setText(bin);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } else {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; String biner = txtBiner.getText();&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // konversi ke desimal&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; int des = Integer.parseInt(biner, 2);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; txtDesimal.setText(String.valueOf(des));&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } catch (Exception e) {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; JOptionPane.showMessageDialog(null, &amp;ldquo;Input tidak valid: &amp;ldquo; + e.getMessage());&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; } finally {&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; txtBiner.setEnabled(true);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; txtDesimal.setEnabled(true);&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; }&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; }&lt;code&gt;&lt;/code&gt;&lt;/code&gt;&lt;/pre&gt;&lt;i&gt;Method&lt;/i&gt; atau fungsi yang melakukan konversi adalah &lt;code&gt;Integer.toBinaryString()&lt;/code&gt; dan &lt;code&gt;Integer.parseInt()&lt;/code&gt;. Fungsi&amp;nbsp;&lt;span style=&#34;font-family: monospace;&#34;&gt;Integer.toBinaryString()&lt;/span&gt;&amp;nbsp;memiliki parameter dengan tipe &lt;i&gt;integer&lt;/i&gt;. Sedangkan fungsi&amp;nbsp;&lt;span style=&#34;font-family: monospace;&#34;&gt;Integer.parseInt()&lt;/span&gt;&amp;nbsp;memiliki parameter dengan tipe &lt;i&gt;string&lt;/i&gt; dan &lt;i&gt;integer&lt;/i&gt; untuk nilai basis bilangannya. Nilai &lt;code&gt;2&lt;/code&gt; diberikan untuk menentukan bilangan berbasis &lt;code&gt;2&lt;/code&gt;.&lt;br /&gt;&lt;br /&gt;Hasil uji coba:&lt;a href=&#34;https://2.bp.blogspot.com/-d2hVS5LUkHQ/VyKgxCofSBI/AAAAAAAACyA/h1rLws6TW5U19y_STI5zlGjC5-Cx-s5NACLcB/s1600/Hasil%2BUji%2BCoba%2BProgram%2BKonversi%2BBilangan%2BDesimal%2BKe%2BBiner.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://2.bp.blogspot.com/-d2hVS5LUkHQ/VyKgxCofSBI/AAAAAAAACyA/h1rLws6TW5U19y_STI5zlGjC5-Cx-s5NACLcB/s1600/Hasil%2BUji%2BCoba%2BProgram%2BKonversi%2BBilangan%2BDesimal%2BKe%2BBiner.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Kode sumbernya tersedia di github: &lt;a href=&#34;https://github.com/petanikode/desi2biner&#34; target=&#34;_blank&#34;&gt;petanikode/desi2biner&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Operator ^ (xor) di Java bukan untuk Membuat Pangkat</title>
      <link>http://petanikode.gitlab.io/2016/04/operator--xor-di-java-bukan-untuk-membuat-pangkat/</link>
      <pubDate>Fri, 29 Apr 2016 06:25:00 +0000</pubDate>
      
      <guid>http://petanikode.gitlab.io/2016/04/operator--xor-di-java-bukan-untuk-membuat-pangkat/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://2.bp.blogspot.com/-P_5MSHpv9zA/VyKK4CjK9ZI/AAAAAAAACxk/Ptclg7VEuNQija-Acz8opEyp71ejcFQcwCLcB/s1600/Matematika%2BJava%2B-%2BPetani%2BKode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://2.bp.blogspot.com/-P_5MSHpv9zA/VyKK4CjK9ZI/AAAAAAAACxk/Ptclg7VEuNQija-Acz8opEyp71ejcFQcwCLcB/s1600/Matematika%2BJava%2B-%2BPetani%2BKode.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Sebuah kekeliruan saya temukan ketika memeriksa kode program milik teman. Dia mengimplementasikan rumus berikut ke dalam kode java.&lt;br /&gt;&lt;pre&gt;&lt;code&gt;y = x&lt;sup&gt;2&lt;/sup&gt; + 3&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Potongan kode program yang dia tulis.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;int x = 3;&lt;br /&gt;int y = x^2 + 3;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Hasilnya pun &lt;code&gt;6&lt;/code&gt;; tidak sesuai harapan. Seharusnya menghasilkan &lt;code&gt;12&lt;/code&gt;.&lt;br /&gt;&lt;br /&gt;Operator &lt;code&gt;^&lt;/code&gt; &lt;i&gt;(Exclusive Or)&lt;/i&gt; disingkat &lt;code&gt;xor&lt;/code&gt;, merupakan operator &lt;i&gt;bitwise&lt;/i&gt;. Operator &lt;i&gt;bitwise&lt;/i&gt; merupakan operator untuk memanipulasi bilangan biner.&lt;br /&gt;Contoh konversi bilangan desimal ke biner (8bit):&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;code&gt;0 = 0000 0000&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;1 = 0000 0001&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;2 = 0000 0010&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;3 = 0000 0011&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;4 = 0000 0100&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;5 = 0000 0101&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;6 = 0000 0110&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;7 = 0000 0111&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;8 = 0000 1000&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;9 = 0000 1001&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;10 = 0000 1010&lt;/code&gt;&lt;/li&gt;&lt;/ul&gt;Kita tinjau lagi perhitungan kode di atas:&lt;br /&gt;&lt;pre&gt;&lt;code&gt;y = x^2 + 3&lt;br /&gt;y = 3^2 + 3&lt;br /&gt;y = 6&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Pada operasi &lt;code&gt;3^2&lt;/code&gt; akan menghasilkan &lt;code&gt;1&lt;/code&gt; (&lt;code&gt;0000 0001&lt;/code&gt;). Kemudian ditambah &lt;code&gt;3&lt;/code&gt; akan menghasilkan &lt;code&gt;6&lt;/code&gt;. Mengapa bisa menghasilkan &lt;code&gt;6&lt;/code&gt;, bukannya &lt;code&gt;1 + 3 = 4&lt;/code&gt;. Aneh ‘kan?&lt;br /&gt;&lt;br /&gt;Operator bitwise xor akan menhasilkan bilangan biner. Oleh sebab itu, penjumlahan yang dilakukan pada operasi di atas adalah penjumlahan bilangan biner, bukan penjumlahan bilangan desimal. Jadi &lt;code&gt;1 + 3 = 6&lt;/code&gt; itu sama dengan &lt;code&gt;00000001 + 00000011 = 000000110&lt;/code&gt;.&lt;br /&gt;&lt;h2 id=&#34;memahami-operator-^-(xor)&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#memahami-operator-^-(xor)&#34; name=&#34;memahami-operator-^-(xor)&#34;&gt;&lt;/a&gt;Memahami operator ^ (xor)&lt;/h2&gt;Jadi, megnapa &lt;code&gt;3^2&lt;/code&gt; menghasilkan &lt;code&gt;1&lt;/code&gt;? Silahkan tinjau lagi pelajaran logika matematika (&lt;code&gt;xor&lt;/code&gt;).&lt;br /&gt;&lt;table border=&#34;1&#34; cellpadding=&#34;10&#34; class=&#34;table table-responsive table bordered&#34; style=&#34;max-width: 100%; width: 100%;&#34;&gt;&lt;thead&gt;&lt;tr&gt; &lt;th style=&#34;text-align: center;&#34;&gt;a&lt;/th&gt; &lt;th style=&#34;text-align: center;&#34;&gt;b&lt;/th&gt; &lt;th style=&#34;text-align: center;&#34;&gt;a or b&lt;/th&gt; &lt;th style=&#34;text-align: center;&#34;&gt;a xor b&lt;/th&gt; &lt;/tr&gt;&lt;/thead&gt; &lt;tbody&gt;&lt;tr&gt; &lt;td style=&#34;text-align: center;&#34;&gt;1&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;1&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;1&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;tr&gt; &lt;td style=&#34;text-align: center;&#34;&gt;1&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;0&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;1&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;1&lt;/td&gt; &lt;/tr&gt;&lt;tr&gt; &lt;td style=&#34;text-align: center;&#34;&gt;0&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;1&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;1&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;1&lt;/td&gt; &lt;/tr&gt;&lt;tr&gt; &lt;td style=&#34;text-align: center;&#34;&gt;0&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;0&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;0&lt;/td&gt; &lt;td style=&#34;text-align: center;&#34;&gt;0&lt;/td&gt; &lt;/tr&gt;&lt;/tbody&gt; &lt;/table&gt;Sehingga,&lt;br /&gt;&lt;pre&gt;&lt;code&gt;  3 = 0000 0011&lt;br /&gt;  2 = 0000 0010&lt;br /&gt;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash;&amp;mdash; ^ (xor)&lt;br /&gt;3^2 = 0000 0001&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;bagaimana-membuat-pangkat-di-java?&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#bagaimana-membuat-pangkat-di-java?&#34; name=&#34;bagaimana-membuat-pangkat-di-java?&#34;&gt;&lt;/a&gt;Bagaimana membuat pangkat di Java?&lt;/h2&gt;Pangkat dapat dibuat dengan fungsi     &lt;code&gt;Math.pow()&lt;/code&gt;. Fungsi ini memiliki dua parameter. Parameter pertama adalah bilangan yang akan dipangkatkan. Parameter kedua adalah bilangan pangkatnya. Contoh: 3&lt;sup&gt;2&lt;/sup&gt;.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;Math.pow(3, 2);&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Akan menghasilkan &lt;code&gt;9&lt;/code&gt;.&lt;br /&gt;&lt;h2 id=&#34;kesimpulan&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#kesimpulan&#34; name=&#34;kesimpulan&#34;&gt;&lt;/a&gt;Kesimpulan&lt;/h2&gt;Operator &lt;i&gt;bitwise&lt;/i&gt; ^ (xor) bukan operator untuk pemangkatan. Operator &lt;i&gt;bitwise&lt;/i&gt; ^ (xor) digunakan untuk operasi bilangan biner.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Persiapan Pemrograman Android di Linux dengan Eclipse</title>
      <link>http://petanikode.gitlab.io/2016/04/persiapan-pemrograman-android-di-linux-dengan-eclipse/</link>
      <pubDate>Thu, 28 Apr 2016 06:54:00 +0000</pubDate>
      
      <guid>http://petanikode.gitlab.io/2016/04/persiapan-pemrograman-android-di-linux-dengan-eclipse/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://4.bp.blogspot.com/-whVGzAqrug0/VyE_fQ3y3pI/AAAAAAAACxY/XkZcdOHA2ZQymp-yJ90WzBSaR4CAkV0IgCLcB/s1600/Pemrograman%2BAndroid%2BEclipse%2BPetani%2BKode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://4.bp.blogspot.com/-whVGzAqrug0/VyE_fQ3y3pI/AAAAAAAACxY/XkZcdOHA2ZQymp-yJ90WzBSaR4CAkV0IgCLcB/s1600/Pemrograman%2BAndroid%2BEclipse%2BPetani%2BKode.png&#34; /&gt;&lt;/a&gt;Eclipse merupakan mesin yang digunakan untuk pemrograman Java, C/C++, PHP, Python, dsb. Awalnya Google menggunakan Eclipse sebagai IDE-nya dengan plugin ADT &lt;i&gt;(Android Development Tool)&lt;/i&gt;. Namun sekarang plugin itu sudah tidak didukung lagi, disarankan menggunakan &lt;a href=&#34;http://www.petanikode.com/2016/04/persiapan-pemrograman-android-di-linux_14.html&#34; target=&#34;_blank&#34;&gt;Android Studio&lt;/a&gt;. Tetapi, bila anda ingin masih tetap menggunakan Eclipse, itu masih bisa kok. Silahka ikuti langkah-langkah berikut ini.&lt;br /&gt;&lt;h2&gt;1. Install JDK&lt;/h2&gt;JDK &lt;i&gt;(Java Development Kit)&lt;/i&gt; merupakan peralatan dasar yang dibutuhkan untuk pemrograman Java. Gunakan perintah berikut untuk menginstal JDK.&lt;br /&gt;&lt;br /&gt;JDK versi 7:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;sudo apt-get install openjdk-7-jdk&lt;/code&gt;&lt;/pre&gt;JDK versi 8:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;sudo apt-get install openjdk-8-jdk&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;2. Install Eclipse&lt;/h2&gt;Eclipse, bisa kita ibaratkan seperti mesin untuk memproduksi aplikasi. Gunakan perintah berikut untuk menginstal Eclipse di ubuntu.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;code&#34;&gt;sudo apt-get install eclipse&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;3. Install SDK&lt;/h2&gt;Silahkan baca &lt;a href=&#34;https://www.blogger.com/2016/04/cara-instal-android-sdk-dan-android-ndk.html&#34; target=&#34;_blank&#34;&gt;cara instal SDK di sini&lt;/a&gt;.&lt;br /&gt;&lt;h2&gt;4. Update SDK&lt;/h2&gt;&lt;div&gt;Update SDK yang diperlukan. Gunakan perintah berikut untuk masuk ke SDK update manager.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;pre&#34;&gt;android update sdk&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;5. Buat Emulator&lt;/h2&gt;Silahkan buat Emulator untuk men-debug aplikasi, atau anda juga bisa menggunakan ponsel android yang anda miliki. Untuk membuat emulator, gunakan perintah berikut untuk masuk ke &lt;i&gt;Android Virtual Device&lt;/i&gt;.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;android avd&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2&gt;6. Install Plug-in ADT&lt;/h2&gt;ADT &lt;i&gt;(Android Development Tool)&lt;/i&gt; merupakan plug-in yang diperlukan di Eclipse agar dapat digunakan untuk pemrograman Android. Berikut ini cara instal Plug-in ADT di Eclipse:&lt;br /&gt;&lt;ol&gt;&lt;li&gt;Buka Eclipse&lt;/li&gt;&lt;li&gt;Masuk ke menu &lt;i&gt;Help&amp;gt;Instal New Software&amp;hellip;&lt;/i&gt;&lt;/li&gt;&lt;li&gt;Tambahkan Alamat Repositori ADT: &lt;i&gt;&lt;b&gt;&lt;a href=&#34;https://dl-ssl.google.com/android/eclipse/&#34;&gt;https://dl-ssl.google.com/android/eclipse/&lt;/a&gt;&lt;/b&gt;&lt;/i&gt;&lt;br /&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-ZS6dsYqZgYY/Vw-JsRo48pI/AAAAAAAACr4/oc5rGiz9nGMHyS9-hs5rIqaBNbWRvAFBgCK4B/s1600/Tambahkan%2Balamat%2Brepostitori%2Bplugin%2BADT.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://3.bp.blogspot.com/-ZS6dsYqZgYY/Vw-JsRo48pI/AAAAAAAACr4/oc5rGiz9nGMHyS9-hs5rIqaBNbWRvAFBgCK4B/s1600/Tambahkan%2Balamat%2Brepostitori%2Bplugin%2BADT.png&#34; /&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Pilih semua kemudian klik &lt;i&gt;Next.&lt;/i&gt;&lt;br /&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-N4w0emO3X7Y/Vw-J9k8cKmI/AAAAAAAACsA/KCXoIL9YDiMNQ7lqAuI80aGDsF5hpqRLQCK4B/s1600/Detail%2Binstalasi%2Bplugin.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://4.bp.blogspot.com/-N4w0emO3X7Y/Vw-J9k8cKmI/AAAAAAAACsA/KCXoIL9YDiMNQ7lqAuI80aGDsF5hpqRLQCK4B/s1600/Detail%2Binstalasi%2Bplugin.png&#34; /&gt;&lt;/a&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-EvaWoB8U5oo/Vw-KczeGN_I/AAAAAAAACsM/_RAxgmZXOsEwY-BcobIMCEDqpxJ2aDPHgCK4B/s1600/adt%2B3%2B-%2Bdetail%2Binstalasi.png&#34; imageanchor=&#34;1&#34;&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Klik &lt;i&gt;Next.&lt;/i&gt;&lt;br /&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-EvaWoB8U5oo/Vw-KczeGN_I/AAAAAAAACsM/_RAxgmZXOsEwY-BcobIMCEDqpxJ2aDPHgCK4B/s1600/adt%2B3%2B-%2Bdetail%2Binstalasi.png&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://3.bp.blogspot.com/-EvaWoB8U5oo/Vw-KczeGN_I/AAAAAAAACsM/_RAxgmZXOsEwY-BcobIMCEDqpxJ2aDPHgCK4B/s1600/adt%2B3%2B-%2Bdetail%2Binstalasi.png&#34; /&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Pilih &lt;i&gt;&amp;ldquo;I accept the term..&amp;rdquo;&lt;/i&gt;, kemudian klik &lt;i&gt;Next.&lt;/i&gt;&lt;br /&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-Dah31SsdK8g/Vw-KuXUjLvI/AAAAAAAACsY/UmjalrzUp5oDZqm1M370qEIug9Lvj2eRACK4B/s1600/adt%2B4%2B-%2BKetentuan%2Bdan%2Bpersetujuan.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://2.bp.blogspot.com/-Dah31SsdK8g/Vw-KuXUjLvI/AAAAAAAACsY/UmjalrzUp5oDZqm1M370qEIug9Lvj2eRACK4B/s1600/adt%2B4%2B-%2BKetentuan%2Bdan%2Bpersetujuan.png&#34; /&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&amp;nbsp;Klik &lt;i&gt;OK&lt;/i&gt;.&lt;br /&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-rsOQEeNq_r4/Vw-K8eaogXI/AAAAAAAACsg/QlN-wJ2JJYwhf6wDDtt1JJN9-3GUkxbfACK4B/s1600/adt%2B5%2B-%2BKonfirmasi%2Bkeamanan.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://3.bp.blogspot.com/-rsOQEeNq_r4/Vw-K8eaogXI/AAAAAAAACsg/QlN-wJ2JJYwhf6wDDtt1JJN9-3GUkxbfACK4B/s1600/adt%2B5%2B-%2BKonfirmasi%2Bkeamanan.png&#34; /&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Klik &lt;i&gt;OK&lt;/i&gt; untuk membuka kembali Eclipse&lt;br /&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-qFO9_y2FS7A/Vw-LGhUYdpI/AAAAAAAACss/vGIfb4wQqRga2pbPJ7GNL5b0EpWNWNOtgCK4B/s1600/adt%2B6%2B-%2Binstalasi%2Bselesai.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://4.bp.blogspot.com/-qFO9_y2FS7A/Vw-LGhUYdpI/AAAAAAAACss/vGIfb4wQqRga2pbPJ7GNL5b0EpWNWNOtgCK4B/s1600/adt%2B6%2B-%2Binstalasi%2Bselesai.png&#34; /&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;&lt;h2&gt;7. Tes Proyek&lt;/h2&gt;Buka Eclipse, buat sebuah proyek baru. Masuk ke menu &lt;i&gt;File&amp;gt;New&amp;gt;Other&lt;/i&gt; kemudian pilih &lt;i&gt;Android Application project.&lt;/i&gt;&lt;br /&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-e1dNBty7v5E/Vw-MlG0OQtI/AAAAAAAACs8/fUQXvkH_T6MmtkHU2s4FMbb8ABs0tZnjACK4B/s1600/proyek%2B-%2BBuat%2Bproyek%2Bbaru.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://4.bp.blogspot.com/-e1dNBty7v5E/Vw-MlG0OQtI/AAAAAAAACs8/fUQXvkH_T6MmtkHU2s4FMbb8ABs0tZnjACK4B/s1600/proyek%2B-%2BBuat%2Bproyek%2Bbaru.png&#34; /&gt;&amp;nbsp;&lt;/a&gt;&lt;br /&gt;Kemudian isi keterangan data proyek:&lt;br /&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-z4jYkgQPbWM/Vw-Mz-II50I/AAAAAAAACtE/3QMe64wWdjY3XNw44-iCUFNsKK6SxzBrwCK4B/s1600/proyek%2B-%2Bketerangan%2Bdata%2Bproyek.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://1.bp.blogspot.com/-z4jYkgQPbWM/Vw-Mz-II50I/AAAAAAAACtE/3QMe64wWdjY3XNw44-iCUFNsKK6SxzBrwCK4B/s1600/proyek%2B-%2Bketerangan%2Bdata%2Bproyek.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Lalu, tentukan lokasi dan ikon aplikasi, setelah itu klik &lt;i&gt;Next.&lt;/i&gt;&lt;br /&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-dv-xco6533s/Vw-NFahuo9I/AAAAAAAACtM/Swhz4BFrPMUrQTzqqsgkq1kpGqOF6fEFgCK4B/s1600/proyek%2B-%2Bkonfigurasi%2Bproyek.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://1.bp.blogspot.com/-dv-xco6533s/Vw-NFahuo9I/AAAAAAAACtM/Swhz4BFrPMUrQTzqqsgkq1kpGqOF6fEFgCK4B/s1600/proyek%2B-%2Bkonfigurasi%2Bproyek.png&#34; /&gt;&amp;nbsp;&lt;/a&gt;Tentukan ikon, setelah itu klik &lt;i&gt;Next&lt;/i&gt;.&lt;br /&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-KNvRefOelcM/Vw-NMtxdp1I/AAAAAAAACtY/3MgZIiOJ8WcpYHv_Uo0ZI2TszrqLcKbfACK4B/s1600/proyek%2B-%2Bkonfigurasi%2Bikon%2Baplikasi.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://1.bp.blogspot.com/-KNvRefOelcM/Vw-NMtxdp1I/AAAAAAAACtY/3MgZIiOJ8WcpYHv_Uo0ZI2TszrqLcKbfACK4B/s1600/proyek%2B-%2Bkonfigurasi%2Bikon%2Baplikasi.png&#34; /&gt;&lt;/a&gt; Buat &lt;i&gt;activity&lt;/i&gt;, Pilih saja &lt;i&gt;blank activity&lt;/i&gt;. Kemudian klik &lt;i&gt;Next&lt;/i&gt;.&lt;br /&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-MW-0VjI7OKw/Vw-NaaZRN0I/AAAAAAAACtk/ZujgA5hq8e88gw-OeHRZDs2UJwh5sfE5QCK4B/s1600/proyek%2B-%2Bmembuat%2Baktivity.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://4.bp.blogspot.com/-MW-0VjI7OKw/Vw-NaaZRN0I/AAAAAAAACtk/ZujgA5hq8e88gw-OeHRZDs2UJwh5sfE5QCK4B/s1600/proyek%2B-%2Bmembuat%2Baktivity.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Isi nama &lt;i&gt;activity&lt;/i&gt;, Biarkan saja namanya &lt;i&gt;MainActivity&lt;/i&gt;. Kemudian klik &lt;i&gt;Finish&lt;/i&gt;.&lt;br /&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-ONLqywZL3Kc/Vw-NljADolI/AAAAAAAACts/_Uop_Nn1vj0hMtBvbXHdzrmYIRl8GdrmACK4B/s1600/proyek%2B-%2Bnama%2Bactivity.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://3.bp.blogspot.com/-ONLqywZL3Kc/Vw-NljADolI/AAAAAAAACts/_Uop_Nn1vj0hMtBvbXHdzrmYIRl8GdrmACK4B/s1600/proyek%2B-%2Bnama%2Bactivity.png&#34; /&gt;&lt;/a&gt; Proyek pertama sudah jadi.&lt;br /&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-yEJF9sUkgpw/Vw-Nsww3r1I/AAAAAAAACt4/WOZo-2x2HxAsFRbHs0SUtHT1B_4dAk5ZQCK4B/s1600/proyek%2B-%2BProyek%2BSedang%2Bdikerjakan.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://4.bp.blogspot.com/-yEJF9sUkgpw/Vw-Nsww3r1I/AAAAAAAACt4/WOZo-2x2HxAsFRbHs0SUtHT1B_4dAk5ZQCK4B/s1600/proyek%2B-%2BProyek%2BSedang%2Bdikerjakan.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Klik kanan pada &lt;i&gt;TesProyek&amp;gt;Pilih Run As&amp;gt;Android Application&lt;/i&gt;.&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-y230elrlXco/Vw-N-_QT4FI/AAAAAAAACuE/-QnmzLLOIbIyHiRm2pzO9Vs7axgRcjq3wCK4B/s1600/proyek%2B-%2BRun%2BProyek%2BAndroid%2Bdi%2BEclipse.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://4.bp.blogspot.com/-y230elrlXco/Vw-N-_QT4FI/AAAAAAAACuE/-QnmzLLOIbIyHiRm2pzO9Vs7axgRcjq3wCK4B/s1600/proyek%2B-%2BRun%2BProyek%2BAndroid%2Bdi%2BEclipse.png&#34; /&gt;&lt;/a&gt;&lt;/div&gt;Proyek berhasil di-run pada emulator.&lt;br /&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-ZY_3F54_r2Y/Vw-OEh-sjPI/AAAAAAAACuQ/2ksqSTJLz9YoThlcnSXcy3_6XKAN2DmKwCK4B/s1600/Proyek%2BBerhasil%2Bdi%2Brun.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://4.bp.blogspot.com/-ZY_3F54_r2Y/Vw-OEh-sjPI/AAAAAAAACuQ/2ksqSTJLz9YoThlcnSXcy3_6XKAN2DmKwCK4B/s1600/Proyek%2BBerhasil%2Bdi%2Brun.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Referensi:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&#34;http://developer.android.com/tools/sdk/eclipse-adt.html&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://developer.android.com/tools/sdk/eclipse-adt.html&#34;&gt;http://developer.android.com/tools/sdk/eclipse-adt.html&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;http://software.endy.muhardin.com/android/persiapan-coding-android/&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://software.endy.muhardin.com/android/persiapan-coding-android/&#34;&gt;http://software.endy.muhardin.com/android/persiapan-coding-android/&lt;/a&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pemrograman Java di Lab (16): Fungsi dan Method</title>
      <link>http://petanikode.gitlab.io/2016/04/pemrograman-java-di-lab-16-fungsi-dan-method/</link>
      <pubDate>Fri, 22 Apr 2016 20:31:00 +0000</pubDate>
      
      <guid>http://petanikode.gitlab.io/2016/04/pemrograman-java-di-lab-16-fungsi-dan-method/</guid>
      <description>&lt;p&gt;&lt;img alt=&#34;Pemrograman Java di Lab Petani Kode&#34; src=&#34;https://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; /&gt;&lt;br /&gt;Fungsi dan &lt;i&gt;Method&lt;/i&gt; merupakan bagian dari program yang bertugas melakukan operasi tertentu. Pada teknik pemrograman prosedural seperti pemrograman Pascal, C, C++, PHP, dsb. Program dibentuk dari kumpulan fungsi atau prosedur yang saling bekerja sama. Fungsi-fungsi tersebut akan dipanggil pada fungsi &lt;code&gt;main&lt;/code&gt;. Fungsi &lt;code&gt;main&lt;/code&gt; merupakan fungsi utama dalam sebuah program.&lt;br /&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-LMvdR9YOW-U/VxnanA7PSJI/AAAAAAAACwE/rw65mXoukjoYuJ9yaeo8ershV1L82ixggCK4B/s1600/Program%2BKalkulator%2Bdibuat%2Bdari%2Bsekumpulan%2Bfungsi.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img alt=&#34;Ilustrasi komponen program yang dibangun dari fungsi-fungsi&#34; border=&#34;0&#34; src=&#34;https://3.bp.blogspot.com/-LMvdR9YOW-U/VxnanA7PSJI/AAAAAAAACwE/rw65mXoukjoYuJ9yaeo8ershV1L82ixggCK4B/s1600/Program%2BKalkulator%2Bdibuat%2Bdari%2Bsekumpulan%2Bfungsi.png&#34; title=&#34;&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Pada pemrograman Java, Fungsi atau prosedur dikenal dengan method (metode). Java sepenuhnya menerapkan paradigma pemrograman berorientasi objek (PBO), dalam bahasa inggris disebut OOP &lt;i&gt;(Object Oriented Programming)&lt;/i&gt;.&lt;br /&gt;&lt;br /&gt;Pada pertemuan pertama praktikum ini, kita memandang &lt;i&gt;class&lt;/i&gt; Java sebagai sebuah program. Di dalam kelas java tedapat atribut dan &lt;i&gt;method&lt;/i&gt;. Atribut merupakan sebuah variabel dan &lt;i&gt;method&lt;/i&gt; merupakan sebuah fungsi untuk melakukan operasi tertentu terhadap atribut.&lt;br /&gt;&lt;h2 id=&#34;membuat-fungsi-atau-method&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#membuat-fungsi-atau-method&#34; name=&#34;membuat-fungsi-atau-method&#34;&gt;&lt;/a&gt;Membuat Fungsi atau Method&lt;/h2&gt;Fungsi atau method, harus dibuat di dalam &lt;i&gt;class&lt;/i&gt;, format dasarnya:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;static TypeDataKembalian namaMethod(){&lt;br /&gt;    // statemen atau kode fungsi&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Contoh:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;static void ucapSalam(){&lt;br /&gt;    System.out.println(&amp;ldquo;Assalamualaykum&amp;rdquo;);&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Kita menggunakan kata kunci &lt;code&gt;static&lt;/code&gt; agar fungsi dapat dipanggil di dalam fungsi &lt;i&gt;main&lt;/i&gt;. Tipe data &lt;code&gt;void&lt;/code&gt; artinya kosong, fungsi tersebut tidak mengebalikan nilai apa-apa.&lt;br /&gt;&lt;h2 id=&#34;memanggil-fungsi&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#memanggil-fungsi&#34; name=&#34;memanggil-fungsi&#34;&gt;&lt;/a&gt;Memanggil Fungsi&lt;/h2&gt;Fungsi dapat dipanggil dari fungsi &lt;code&gt;main&lt;/code&gt; atau dari fungsi yang lain. Contoh pemanggilan fungsi dalam dalam funsgi &lt;code&gt;main&lt;/code&gt;.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;public static void main(String[] args){&lt;br /&gt;    ucapSalam();&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Akan menghasilkan output:&lt;br /&gt;&lt;pre&gt;&lt;code&gt;Assalamualaykum&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;fungsi-dengan-parameter&#34;&gt;Fungsi dengan Parameter&lt;/h2&gt;Parameter merupakan variabel yang akan diolah atau diproses di dalam fungsi. Contoh fungsi yang memiliki parameter:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;static void ucapin(String ucapan){&lt;br /&gt;    System.out.println(ucapan);&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Pemanggilannya:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;ucapin(&amp;ldquo;Hallo!&amp;rdquo;);&lt;br /&gt;ucapin(&amp;ldquo;Selamat datang di pemrograman Java&amp;rdquo;);&lt;br /&gt;ucapin(&amp;ldquo;Saya kira ini bagian terakhir&amp;rdquo;);&lt;br /&gt;ucapin(&amp;ldquo;Sampai jumpa lagi, ya!&amp;rdquo;);&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Hasil outputnya:&lt;br /&gt;&lt;pre&gt;&lt;code&gt;Hallo!&lt;br /&gt;Selamat datang di pemrograman Java&lt;br /&gt;Saya kira ini bagian terakhir&lt;br /&gt;Sampai jumpa lagi, ya!&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Tipe data dari parameter harus dituliskan. Untuk parameter yang lebih dari satu, dipisah dengan tanda koma (&lt;code&gt;,&lt;/code&gt;). Contoh:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;static void ucapin(String ucapan, String kepada){&lt;br /&gt;    //&amp;hellip;&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;div id=&#34;fungsi-yang-mengembalikan-nilai&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#fungsi-yang-mengembalikan-nilai&#34; name=&#34;fungsi-yang-mengembalikan-nilai&#34;&gt;&lt;/a&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-3LilJsKfgRM/VxnbVspOUDI/AAAAAAAACwQ/t6RCz2U4PJg8lvvkBmexayJWHOnsaEbwQCK4B/s1600/Contoh%2BFungsi%2Bdi%2BJava.png&#34;&gt;&lt;img alt=&#34;Contoh Fungsi pada Java&#34; border=&#34;0&#34; src=&#34;https://4.bp.blogspot.com/-3LilJsKfgRM/VxnbVspOUDI/AAAAAAAACwQ/t6RCz2U4PJg8lvvkBmexayJWHOnsaEbwQCK4B/s1600/Contoh%2BFungsi%2Bdi%2BJava.png&#34; title=&#34;&#34; /&gt;&lt;/a&gt; &lt;/div&gt;&lt;h2 id=&#34;fungsi-yang-mengembalikan-nilai&#34;&gt;Fungsi yang Mengembalikan Nilai&lt;/h2&gt;Setelah data yang diinputkan melalui parameter diproses, fungsi harus mengembalikan nilai agar dapat diolah di proses selanjutnya. Pengembalian nilai pada fungsi menggunakan kata kunci &lt;code&gt;return&lt;/code&gt;. Jangan lupa juga untuk menuliskan tipe data kembaliannya. Contoh fungsi yang mengembalikan nilai:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;static int luasPersegi(int sisi){&lt;br /&gt;    int luas = sisi * sisi;&lt;br /&gt;    return luas;&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Fungsi &lt;code&gt;luasPersegi()&lt;/code&gt; akan mengembalikan nilai berupa &lt;i&gt;integer&lt;/i&gt; (&lt;code&gt;int&lt;/code&gt;) dari hasil rumus &lt;code&gt;luas&lt;/code&gt; (persegi). Contoh pemanggilanya:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;System.out.println(&amp;ldquo;Luas Persegi dengan panjang sisi 5 adalah &amp;rdquo; + luasPersegi(5));&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Hasil Output:&lt;br /&gt;&lt;pre&gt;&lt;code&gt;Luas Persegi dengan panjang sisi 5 adalah 25&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;pemanggilan-fungsi-di-fungsi-lain&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#pemanggilan-fungsi-di-fungsi-lain&#34; name=&#34;pemanggilan-fungsi-di-fungsi-lain&#34;&gt;&lt;/a&gt;Pemanggilan Fungsi di Fungsi Lain&lt;/h2&gt;Fungsi-fungsi dapat saling memanggil untuk memproses data. Contoh, sebuah program Kalkulator Bangun Ruang memiliki fungsi-fungsi: &lt;code&gt;luasPersegi()&lt;/code&gt;, &lt;code&gt;luasPersegiPanjang()&lt;/code&gt;, &lt;code&gt;luasSegitiga()&lt;/code&gt;, &lt;code&gt;luasBalok()&lt;/code&gt;, &lt;code&gt;luasKubus()&lt;/code&gt; dsb. Fungsi-fungsi tersebut dapat saling membantu, contoh fungsi &lt;code&gt;luasKubus()&lt;/code&gt; membutuhkan fungsi &lt;code&gt;luasPersegi()&lt;/code&gt;.&lt;br /&gt;Rumus&lt;br /&gt;&lt;pre&gt;&lt;code&gt;Luas Kubus = 6 * luasPersegi;&lt;br /&gt;Luas Persegi = sisi * sisi;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Maka Bentuk programnya bisa seperti ini:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;public class BangunRuang {&lt;br /&gt;&lt;br /&gt;    public static void main(String[] args) {&lt;br /&gt;&lt;br /&gt;        int s = 12;&lt;br /&gt;        int luas = luasKubus(s);&lt;br /&gt;&lt;br /&gt;        System.out.println(luas);&lt;br /&gt;&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    static int luasPersegi(int sisi){&lt;br /&gt;        return sisi * sisi;&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;    static int luasKubus(int sisi){&lt;br /&gt;        return 6 * luasPersegi(sisi);&lt;br /&gt;    }&lt;br /&gt;&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Hasil output&lt;br /&gt;&lt;pre&gt;&lt;code&gt;864&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Itulah beberapa hal seputar fungsi atau method di Java. Jika anda membaca dan mengikuti serial artikel ini dari &lt;a href=&#34;http://www.petanikode.com/2015/10/pemrograman-java-di-lab-1-berkenalan.html&#34; target=&#34;_blank&#34;&gt;awal&lt;/a&gt;, saya kira anda sudah menguasai teknik dasar pemrograman java. Sekian dulu, mungkin artikel ini masih punya lanjutan. Ditunggu saja, ya!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pemrograman Java di Lab (15): Mengenal Array</title>
      <link>http://petanikode.gitlab.io/2016/04/pemrograman-java-di-lab-15-mengenal-array/</link>
      <pubDate>Thu, 21 Apr 2016 22:34:00 +0000</pubDate>
      
      <guid>http://petanikode.gitlab.io/2016/04/pemrograman-java-di-lab-15-mengenal-array/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; /&gt;&lt;/a&gt;Array memungkinkan kita menyimpan banyak data dalam satu variabel. Array memiliki indeks sebagai nomor yang digunakan untuk mengakses isinya. Indeks array dihitung mulai dari nol (&lt;code&gt;0&lt;/code&gt;).&lt;br /&gt;&lt;h2 id=&#34;cara-membuat-array-dan-mengisinya&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#cara-membuat-array-dan-mengisinya&#34; name=&#34;cara-membuat-array-dan-mengisinya&#34;&gt;&lt;/a&gt;Cara Membuat Array dan Mengisinya&lt;/h2&gt;Cara membuat sebuah array di java:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;String[] nama;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;atau bisa juga&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;String[] nama = new String[5];&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;* angka &lt;code&gt;5&lt;/code&gt; adalah batas atau ukuran array&lt;br /&gt;Kemudian untuk mengisi datanya, lakukan dengan operator pengisian untuk masing-masing indeks.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;nama[0] = &amp;ldquo;Linda&amp;rdquo;;&lt;br /&gt;nama[1] = &amp;ldquo;Santi&amp;rdquo;;&lt;br /&gt;nama[2] = &amp;ldquo;Susan&amp;rdquo;;&lt;br /&gt;nama[3] = &amp;ldquo;Mila&amp;rdquo;;&lt;br /&gt;nama[4] = &amp;ldquo;Ayu&amp;rdquo;;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Atau, untuk menghemat energi, bisa juga langsung mengisinya saat pembuatan. Contoh:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;String[] nama = {&amp;ldquo;Linda&amp;rdquo;, &amp;ldquo;Santi&amp;rdquo;, &amp;ldquo;Susan&amp;rdquo;, &amp;ldquo;Mila&amp;rdquo;, &amp;ldquo;Ayu&amp;rdquo;};&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;perbedaan-array-dengan-variabel-biasa&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#perbedaan-array-dengan-variabel-biasa&#34; name=&#34;perbedaan-array-dengan-variabel-biasa&#34;&gt;&lt;/a&gt;Perbedaan Array dengan Variabel Biasa&lt;/h2&gt;Kita ingin menyimpan nama-nama teman dalam variabel. Hal yang munkin kita lakukan, tampa menggunakan array adalah sebagai berikut.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;String teman1 = &amp;ldquo;Deni&amp;rdquo;;&lt;br /&gt;String teman2 = &amp;ldquo;Dodi&amp;rdquo;;&lt;br /&gt;String teman3 = &amp;ldquo;Dewi&amp;rdquo;;&lt;br /&gt;String teman4 = &amp;ldquo;Desi&amp;rdquo;;&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Kita baru saja membuat empat variabel untuk menyimpan masing-masing nama teman. Hal ini sepertinya kurang efektif, karena harus membuat banyak variabel. Sedangkan, kalau menggunakan array, kita dapat membuatnya seperti berikut ini.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;String[] teman = {&amp;ldquo;Deni&amp;rdquo;, &amp;ldquo;Dodi&amp;rdquo;, &amp;ldquo;Dewi&amp;rdquo;, &amp;ldquo;Desi&amp;rdquo;};&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Cukup satu variabel untuk menyimpan nama-nama teman.&lt;br /&gt;&lt;h2 id=&#34;mengambil-data-dari-array&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#mengambil-data-dari-array&#34; name=&#34;mengambil-data-dari-array&#34;&gt;&lt;/a&gt;Mengambil Data dari Array&lt;/h2&gt;Pengambilan data dari variabel array, dilakukan dengan indeks sebagai kunci. Contoh, saya ingin mengambil nama &lt;code&gt;Dewi&lt;/code&gt; dari array &lt;code&gt;teman&lt;/code&gt;:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;System.out.println(teman[2]);&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Nama &lt;code&gt;Dewi&lt;/code&gt; berada di indeks ke-2, karena indeks array dihitung dari &lt;code&gt;0&lt;/code&gt;.&lt;br /&gt;&lt;h2 id=&#34;menggunakan-perulangan&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#menggunakan-perulangan&#34; name=&#34;menggunakan-perulangan&#34;&gt;&lt;/a&gt;Menggunakan Perulangan&lt;/h2&gt;Mengambil data satu per satu dari array mungkin cukup melelahkan, karena kita harus mengtik ulang nama arraynya dengan indeks yang berbeda. Contoh:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;System.out.println(teman[0]);&lt;br /&gt;System.out.println(teman[1]);&lt;br /&gt;System.out.println(teman[2]);&lt;br /&gt;System.out.println(teman[3]);&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Bagaimana kalau data array-nya memiliki data sampai 1000, maka kita haru mengetik kode di atas ebanyak seribu kali. Kita dapat menggunakan perulangan untuk mengakses semua isi array. Contoh:&lt;br /&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-pXqVRCPTKn0/Vxjjx7C66lI/AAAAAAAACvo/jwQlQIf84SoJLlK-PwdAfjFi-Gwqa5F3ACK4B/s1600/Contoh%2BArray%2Bdi%2BJava%2B-%2BPetani%2BKode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img alt=&#34;Contoh Array yang diakses dengan perulangan&#34; border=&#34;0&#34; src=&#34;https://4.bp.blogspot.com/-pXqVRCPTKn0/Vxjjx7C66lI/AAAAAAAACvo/jwQlQIf84SoJLlK-PwdAfjFi-Gwqa5F3ACK4B/s1600/Contoh%2BArray%2Bdi%2BJava%2B-%2BPetani%2BKode.png&#34; title=&#34;&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Atribut &lt;code&gt;length&lt;/code&gt; untuk mengabil panjang array. Perulangan akan dilakukan sampai panjang array.&lt;br /&gt;&lt;h2 id=&#34;array-dua-dimensi&#34;&gt;&lt;a href=&#34;https://www.blogger.com/blogger.g?blogID=2407178719979772668#array-dua-dimensi&#34; name=&#34;array-dua-dimensi&#34;&gt;&lt;/a&gt;Array Dua Dimensi&lt;/h2&gt;Array dua dimensi adalah array yang berada di dalam array. Array dapat juga memiliki banyak dimensi (lebih dari dua). Contoh array dua dimensi:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;String[][] kontak = {{&amp;ldquo;Lili&amp;rdquo;,&amp;ldquo;08111&amp;rdquo;}, {&amp;ldquo;Lala&amp;rdquo;,&amp;ldquo;08122&amp;rdquo;}, {&amp;ldquo;Maya&amp;rdquo;,&amp;ldquo;08133&amp;rdquo;}};&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Indek ke-0 pada array &lt;code&gt;kontak&lt;/code&gt; berisi array &lt;code&gt;{&amp;ldquo;lili&amp;rdquo;,&amp;ldquo;08111&amp;rdquo;}&lt;/code&gt;. Untuk mengakses semua elemen dalam array dua dimensi, kita membutuhkan perulangan bersarang. Contoh:&lt;br /&gt;&lt;a href=&#34;http://4.bp.blogspot.com/--B8JIXhQjjU/Vxjj-XAAERI/AAAAAAAACvw/h3zXImrKeBg0pjgjAE5df7fi9iXETaQ5wCK4B/s1600/Array%2Bdua%2Bdimensi.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img alt=&#34;Contoh Array 2 Dimensi di Java&#34; border=&#34;0&#34; src=&#34;https://4.bp.blogspot.com/--B8JIXhQjjU/Vxjj-XAAERI/AAAAAAAACvw/h3zXImrKeBg0pjgjAE5df7fi9iXETaQ5wCK4B/s1600/Array%2Bdua%2Bdimensi.png&#34; title=&#34;Contoh Array 2 Dimensi di Java&#34; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pilihan Alternatif Java dan Symbolic Link yang Buntu</title>
      <link>http://petanikode.gitlab.io/2016/04/pilihan-alternatif-java-dan-symbolic-link-yang-buntu/</link>
      <pubDate>Wed, 06 Apr 2016 22:50:00 +0000</pubDate>
      
      <guid>http://petanikode.gitlab.io/2016/04/pilihan-alternatif-java-dan-symbolic-link-yang-buntu/</guid>
      <description>&lt;p&gt;Ketika saya bermain-main dengan perintah &lt;code&gt;update-alternative&lt;/code&gt; untuk menambahakan &lt;a href=&#34;http://www.petanikode.com/2016/04/cara-mengatasi-jdk-yang-lebih-dari-satu.html&#34; target=&#34;_blank&#34;&gt;pilihan alternatif java&lt;/a&gt;, malah terjadi error. Hal ini disebabkan karena saya salah memasukkan &lt;i&gt;symbolic link&lt;/i&gt; ketika menambahkan pilihan alternatif. Berikut ini perintah salah yang menyebabkan masalah:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;sudo update-alternative &amp;ndash;install &lt;span style=&#34;color: red;&#34;&gt;/etc/alternatives/java&lt;/span&gt; java /opt/jdk1.8.0_77/bin/java&lt;/code&gt;&lt;/pre&gt;Perhatikan teks yang berwarna merah. Tesk tersebut merupakan &lt;i&gt;symbolic link&lt;/i&gt; yang berlokasi di &lt;code&gt;/etc/alternatives&lt;/code&gt;. Symbolic link yang seharusnya dimasukkan adalah &lt;code&gt;/usr/bin/java&lt;/code&gt;. Akibatnya, error:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;petanikode@imajinasi:~$ &lt;b&gt;sudo update-alternatives &amp;ndash;config java&lt;/b&gt;&lt;br /&gt;update-alternatives: error: cannot stat file &amp;lsquo;/etc/alternatives/java&amp;rsquo;: Too many levels of symbolic links&lt;/code&gt;&lt;/pre&gt;Tidak dapat memilih alternatif java, karena symbolic link java yang berada di &lt;code&gt;/etc/alternatives&lt;/code&gt; buntu &lt;i&gt;(broken)&lt;/i&gt;. Berikut ini cara saya mengatasinya:&lt;br /&gt;&lt;ol&gt;&lt;li&gt;Hapus &lt;i&gt;symbolic link&lt;/i&gt; yang buntu tadi&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;sudo rm /etc/alternatives/java&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;Buat &lt;i&gt;symbolic link&lt;/i&gt; java dari JDK yang sudah terinstal&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;sudo ln -s /usr/lib/jvm/java-8-openjdk-amd64/bin/java /etc/alternatives/java&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;Hapus pilihan alternatif yang menyebabkan error tadi&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;sudo update-alternative &amp;ndash;remove java /opt/jdk1.8.0_77/bin/java&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;li&gt;Coba pilih alternatif lagi&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;sudo update-aternative &amp;ndash;config java&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;&lt;/ol&gt;Selanjutnya kita bisa tambahkan lagi alternatif java-nya dengan perintah yang benar. Silahkan baca caranya di: &lt;a href=&#34;http://www.petanikode.com/2016/04/cara-mengatasi-jdk-yang-lebih-dari-satu.html&#34; target=&#34;_blank&#34;&gt;Cara Mengatasi JDK yang Lebih dari Satu di Linux&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;Mengapa perintah yang salah di atas tadi bisa menyebabkan error? Mungkin karna &lt;i&gt;symbolic link&lt;/i&gt; yang ada di direktori &lt;code&gt;/etc/alternatives/&lt;/code&gt; adalah &lt;i&gt;link&lt;/i&gt; yang dipakai untuk menyambungkan &lt;i&gt;symbolic link&lt;/i&gt; &lt;code&gt;/usr/bin/java&lt;/code&gt; dengan java di JDK-nya yang asli. Berikut ini ilustrasi hubungan antar link dan file asli.&lt;a href=&#34;http://3.bp.blogspot.com/-16zBDAFnJlw/VwUcTv2xXVI/AAAAAAAACpo/WHzGc8mSm4IEweDR1zPkFh2RRuFQmPsfQ/s1600/Link%2BAlternatif%2BPilihan%2Bjava%2Bdengan%2Bbanyak%2BJDK.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://3.bp.blogspot.com/-16zBDAFnJlw/VwUcTv2xXVI/AAAAAAAACpo/WHzGc8mSm4IEweDR1zPkFh2RRuFQmPsfQ/s1600/Link%2BAlternatif%2BPilihan%2Bjava%2Bdengan%2Bbanyak%2BJDK.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;File java yang berada di dalam JDK pilihan alternatif merupakan file asli. Sedangkan, yang berada di luar adalah file link yang saling menyambung hingga ke file asli.&lt;br /&gt;&lt;br /&gt;Ketika kita mengetik perintah &lt;code&gt;java&lt;/code&gt; di terminal, file yang eksekusi adalah &lt;i&gt;symbolic link&lt;/i&gt; yang berada di &lt;code&gt;/usr/bin/java&lt;/code&gt;. File ini tersambung sampai ke file asli.&lt;a href=&#34;http://2.bp.blogspot.com/-PUncbwsFVE4/VwUhEeTdCQI/AAAAAAAACp0/fI9GjK-vlRscOdTqyflM5Rtff90F6m64w/s1600/Hubungan%2Bsymbolic%2Blink%2Bsampai%2Bke%2Bfile%2Basli.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://2.bp.blogspot.com/-PUncbwsFVE4/VwUhEeTdCQI/AAAAAAAACp0/fI9GjK-vlRscOdTqyflM5Rtff90F6m64w/s1600/Hubungan%2Bsymbolic%2Blink%2Bsampai%2Bke%2Bfile%2Basli.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Ternyata masalah kecil ini menambah pengalaman dan pengetahuan saya. Syukuri setiap masalah yang dihadapi. Di balik masalah selalu ada hikmah yang tersembunyi.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cara Mengatasi JDK yang Lebih dari Satu di Linux</title>
      <link>http://petanikode.gitlab.io/2016/04/cara-mengatasi-jdk-yang-lebih-dari-satu-di-linux/</link>
      <pubDate>Tue, 05 Apr 2016 22:49:00 +0000</pubDate>
      
      <guid>http://petanikode.gitlab.io/2016/04/cara-mengatasi-jdk-yang-lebih-dari-satu-di-linux/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-TlxFSzn2BzM/VwOQ3IRECxI/AAAAAAAACo4/nmj3R3qUhMAqMy7FuBZanJHQVrszb2Xiw/s1600/Instal%2BJDK%2BLebih%2Bdari%2BSatu%2Bdi%2BLinux.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://2.bp.blogspot.com/-TlxFSzn2BzM/VwOQ3IRECxI/AAAAAAAACo4/nmj3R3qUhMAqMy7FuBZanJHQVrszb2Xiw/s1600/Instal%2BJDK%2BLebih%2Bdari%2BSatu%2Bdi%2BLinux.png&#34; /&gt;&lt;/a&gt;Saya menginstal lebih dari satu JDK di Linux (Xubuntu). Ada Open JDK 8, Open JDK 7, dan Oracle JDK 8. Awalnya saya hanya punya Open JDK 8. Kemudian setelah mengintal &lt;i&gt;Gradle&lt;/i&gt;, Open JDK 7 juga ikut tersintal. Selain itu, saya juga menginstal Oracle JDK 8 Secara manual di direktori &lt;code&gt;/opt&lt;/code&gt;.&lt;br /&gt;&lt;br /&gt;Saat ini JDK yang sedang aktif digunakan adalah Open JDK 7. Beberapa IDE tidak mendukung bila menggunakan Open JDK 7. Seperti Android Studio, tidak dapat dibuka karena JDK-nya masih versi 7. Berikut ini pesan Error-nya.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;petanikode@imajinasi:/opt/android-studio/bin$ &lt;b&gt;bash studio.sh&lt;/b&gt; &lt;br /&gt;&lt;br /&gt;JDK Required: &amp;lsquo;tools.jar&amp;rsquo; seems to be not in Studio classpath.&lt;br /&gt;Please ensure JAVA_HOME points to JDK rather than JRE.&lt;/code&gt;&lt;/pre&gt;Bagaimanakah cara mengganti lagi ke Open JDK 8? Apakah harus instal ulang Open JDK 8 dan menghapus OpenJDK 7? Itu tidak perlu dilakukan, karena Linux sudah menyediakan sebuah perintah untuk memilih alternatif JDK. Perintah tersebut adalah:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;sudo update-alternatives &amp;ndash;config java&lt;/code&gt;&lt;/pre&gt;Berikut ini tampilan outputnya di komputer saya:&lt;br /&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-cG43izUiip0/VwJ0fa6UsKI/AAAAAAAACoI/7slZ-6hjwese84APex-UiPuio44nVOVJg/s1600/Ganti%2BAlternatif%2BJava%2BJDK.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://2.bp.blogspot.com/-cG43izUiip0/VwJ0fa6UsKI/AAAAAAAACoI/7slZ-6hjwese84APex-UiPuio44nVOVJg/s1600/Ganti%2BAlternatif%2BJava%2BJDK.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Saya pilih nomer &lt;code&gt;2&lt;/code&gt;, karena pilihan tersebut untuk memilih Open JDK 8. Setelah itu, ketika saya memeriksa versinya&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;petanikode@imajinasi:~$ &lt;b&gt;java -version&lt;/b&gt;&lt;br /&gt;openjdk version &amp;ldquo;1.8.0_72-internal&amp;rdquo;&lt;br /&gt;OpenJDK Runtime Environment (build 1.8.0_72-internal-b15)&lt;br /&gt;OpenJDK 64-Bit Server VM (build 25.72-b15, mixed mode)&lt;br /&gt;&lt;/code&gt;&lt;/pre&gt;Sekarang saya menggunakan Open JDK 8 dan Android Studio dapat berjalan dengan lancar.&lt;br /&gt;&lt;br /&gt;Sementara untuk Oracle JDK yang saya instal secara manual &lt;i&gt;(copy-paste)&lt;/i&gt; di direktori &lt;code&gt;/opt&lt;/code&gt; tidak terdaftar dalam pilihan alternatif. Untuk menambahkanya, ketik perintah berikut ini.&lt;br /&gt;&lt;pre&gt;sudo update-alternatives &amp;ndash;install /usr/bin/java java &lt;span style=&#34;color: #cc0000;&#34;&gt;/opt/jdk1.8.0_77/bin/java&lt;/span&gt; &lt;span style=&#34;color: blue;&#34;&gt;1080&lt;/span&gt;&lt;/pre&gt;Teks yang berwarna merah adalah lokasi saya menginstal Oracle JDK dan teks yang berwarna biru adalalah prioritas. Nilai prioritas &lt;code&gt;1080&lt;/code&gt; akan menjadikan Oracle JDK berada pada posisi teratas di pilihan alternatif, karena prioritas pilihan teratas adalah &lt;code&gt;1071&lt;/code&gt; (pada komputer saya). Berikut ini hasilnya:&lt;br /&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-JMGRIdE5TMA/VwKLKZJL31I/AAAAAAAACoY/4T8GjvtdmeAnx4CQc4CFf5k2HVL1QtkmA/s1600/Daftar%2Bpilihan%2Balternatif%2BJDK%2Bdi%2BLinux.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://1.bp.blogspot.com/-JMGRIdE5TMA/VwKLKZJL31I/AAAAAAAACoY/4T8GjvtdmeAnx4CQc4CFf5k2HVL1QtkmA/s1600/Daftar%2Bpilihan%2Balternatif%2BJDK%2Bdi%2BLinux.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Cek lagi versi java yang dipakai:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;petanikode@imajinasi:~$ &lt;b&gt;java -version&lt;/b&gt;&lt;br /&gt;java version &amp;ldquo;1.8.0_77&amp;rdquo;&lt;br /&gt;Java&amp;trade; SE Runtime Environment (build 1.8.0_77-b03)&lt;br /&gt;Java HotSpot&amp;trade; 64-Bit Server VM (build 25.77-b03, mixed mode)&lt;/code&gt;&lt;/pre&gt;Sekrang java yang dipakai adalah java dari Oracle JDK. Untuk menghapus Oracle JDK dari pilihan alternatif, ketik perintah:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;sudo update-alternatives &amp;ndash;remove java &lt;span style=&#34;color: #cc0000;&#34;&gt;/opt/jdk1.8.0_77/bin/java&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;Begitulah cara saya mengatasi JDK yang lebih dari satu di Linux. Tak maslah, berapapun JDK yang diinstal, asalkan mengerti menggunakan perintah &lt;code&gt;update-alternatives&lt;/code&gt;, kita bisa mengaturnya sesuai selera.&lt;br /&gt;&lt;br /&gt;Baca juga: &lt;a href=&#34;http://www.petanikode.com/2016/04/pilihan-alternatif-java-dan-symbolic.html&#34; target=&#34;_blank&#34;&gt;Pilihan Alternatif Java dan Symbolic Link yang Buntu &lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pemrograman Java di Lab (14): Perulangan While dan Do/While</title>
      <link>http://petanikode.gitlab.io/2016/03/pemrograman-java-di-lab-14-perulangan-while-dan-do/while/</link>
      <pubDate>Fri, 18 Mar 2016 16:52:00 +0000</pubDate>
      
      <guid>http://petanikode.gitlab.io/2016/03/pemrograman-java-di-lab-14-perulangan-while-dan-do/while/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;h2&gt;1. Perulangan While&lt;/h2&gt;Perulangan &lt;i&gt;while&lt;/i&gt; adalah salah satu bentuk perulangan yang tak tentu jumlah kali perulangannya. Perulangan &lt;i&gt;while&lt;/i&gt; memiliki sebuah persayarat kondisi untuk melakukan perulangan. Apabila kondisi tidak terpenuhi, perulangan tidak akan dikerjakan. Contoh bentuk perulanagan while pada java:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;while(keluar == false){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; mainProgram();&lt;br /&gt;}&lt;/code&gt;&lt;/pre&gt;Pada contoh di atas, fungsi &lt;code&gt;mainProgram()&lt;/code&gt; akan dieksekusi terus menerus sampai variabel keluar bernilai true. Untuk lebih jelasnya, silahkan coba contoh berikut ini.&lt;br /&gt;&lt;br /&gt;&lt;script src=&#34;https://gist.github.com/ardianta/4c603073712590683b60.js&#34;&gt;&lt;/script&gt;&lt;br /&gt;Pada contoh di atas, kita memubuat sebuah kalkulator sederhana. Perulangan &lt;i&gt;while&lt;/i&gt; akan mengecek kondisi nilai variabel &lt;i&gt;keluar&lt;/i&gt;. Karena pada awal, variabel &lt;i&gt;keluar&lt;/i&gt; bernilai &lt;i&gt;false&lt;/i&gt;, maka perulangan dilakukan.&lt;br /&gt;&lt;h2&gt;2. Perulangan Do/While&lt;/h2&gt;Perulangan &lt;i&gt;Do/While&lt;/i&gt; adalah perulangan yang tak tentu jumlah kali perulangannya. Perulangan ini memiliki satu kali perulangan yang harus dikerjakan pada awal perulangan. Contoh bentuk perulangan &lt;i&gt;Do/While&lt;/i&gt; dalam java:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;do {&lt;br /&gt;     belajar();&lt;br /&gt;} while (bisa == false);&lt;/code&gt;&lt;/pre&gt;Fungsi &lt;code&gt;belajar()&lt;/code&gt; akan terus dikerjakan atau diulangi selama belum bisa &lt;i&gt;(bisa == false)&lt;/i&gt;. Fungsi belajar akan berhenti dikerjakan sampai bisa &lt;i&gt;(bisa == true)&lt;/i&gt;. Perulangan &lt;i&gt;do/while&lt;/i&gt; akan mengerjakan fungsi belajar satu kali dulu, kemudian mengecek kondisinya, bila bisa maka berhenti. Tetapi, kalau masih belum bisa, lanjutkan ke perulangan selanjutnya.&lt;br /&gt;&lt;br /&gt;Contoh perulangan do/while dalam program kalkulator:&lt;br /&gt;&lt;br /&gt;&lt;script src=&#34;https://gist.github.com/ardianta/d64f5318480d3740f586.js&#34;&gt;&lt;/script&gt;&lt;br /&gt;&lt;h2&gt;Kesimpulan&lt;/h2&gt;Perualangan &lt;i&gt;While&lt;/i&gt; dan &lt;i&gt;Do/While&lt;/i&gt; adalah perulangan yang tak tentu jumlah kali perulangannya &lt;i&gt;(uncounted loop)&lt;/i&gt;. Perbedaan perulangan &lt;i&gt;While&lt;/i&gt; dengan &lt;i&gt;Do/While&lt;/i&gt; terletak pada awal perulangannya. Perulangan &lt;i&gt;Do/While&lt;/i&gt; memilki satu kali perulangan yang harus dikerjakan pada awal perulangan, sedangkan perulangan &lt;i&gt;while&lt;/i&gt; tidak.&lt;br /&gt;&lt;br /&gt;Baca juga: &lt;a href=&#34;http://www.petanikode.com/2015/09/perbedaan-perulangan-while-do-dan-do.html&#34; target=&#34;_blank&#34;&gt;Perbedaan Perulangan While dan Do/While&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pemrograman java di lab (13): Perulangan FOR</title>
      <link>http://petanikode.gitlab.io/2016/01/pemrograman-java-di-lab-13-perulangan-for/</link>
      <pubDate>Sun, 03 Jan 2016 18:28:00 +0000</pubDate>
      
      <guid>http://petanikode.gitlab.io/2016/01/pemrograman-java-di-lab-13-perulangan-for/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Perulangan merupakan intruksi yang dikerjakan berulang-ulang. Perulangan di pemrograman java ada dua jenis, perulangan terhitung dan perulangan tak terhitung (tidak tentu). Pada pertemuan ini, saya akan membahas perulangan for saja dulu. Nanti di pertemuan berikutinya, kita akan banyak bermain dengan perulangan &lt;i&gt;while (uncounted loop)&lt;/i&gt;.&lt;br /&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-Pab1ngEX31Y/VlToeaw3YnI/AAAAAAAACQM/te0QBK1U-VY/s1600/Flowchart%2Bperulangan%2B-%2Bpetani%2Bkode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://1.bp.blogspot.com/-Pab1ngEX31Y/VlToeaw3YnI/AAAAAAAACQM/te0QBK1U-VY/s1600/Flowchart%2Bperulangan%2B-%2Bpetani%2Bkode.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;h2&gt;Mengapa kita butuh perulangan?&lt;/h2&gt;Cobalah melakukan pencetakan teks sebanyak lima kali seperti beirkut ini:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;/code&gt;&lt;/pre&gt;Kemudian coba tambahkan 5 lagi, sehingga sekarang totalnya ada 10 perulangan dengan intruksi yang sama.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;br /&gt;System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;);&lt;/code&gt;&lt;/pre&gt;Lalu, bagaimana kalau mengulang sebanyak 1000 kali? Apakah kita akan menuliskan berulang-ualang sebanyak 1000 kali seperti di atas? Nah!, di siniliah kita perlu perulangan agar tidak menulis kode berulang-ulang. Kode di atas dapat ditulis dalam perulangan menjadi seperti berikut ini.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;for (int hitungan = 0; hitungan &amp;lt;= 1000; hitungan++) {&lt;br /&gt;&amp;nbsp; &amp;nbsp; System.out.println(&amp;ldquo;Petani Kode&amp;rdquo;); &lt;br /&gt;}&lt;/code&gt;&lt;/pre&gt;Maka, teks &amp;ldquo;Petani Kode&amp;rdquo; akan dicetak berulang-ulang sebanyak 1000 kali.&lt;br /&gt;&lt;h2&gt;Perulangan FOR&amp;nbsp;&lt;/h2&gt;Perulangan FOR merupakan perulangan yang terhitung jelas, bearpa banyak dia akan mengulang atau dalam bahasa inggris disebut &lt;i&gt;counted loop&lt;/i&gt;. Format penulisan perulangan for di java adalah sebagai berikut:&lt;br /&gt;&lt;pre&gt;for( int hitungan = 0; hitungan &amp;lt;= 10; hitungan++ ){&lt;br /&gt;&amp;nbsp; &amp;nbsp; // blok kode yang akan diulang &lt;br /&gt;}&lt;/pre&gt;variabel &lt;code&gt;hitungan&lt;/code&gt; berfungsi untuk menampung nilai hitungan perulangan. Pada awalnya di isi &lt;code&gt;0&lt;/code&gt; (nol). Kemudian, akan selalu bertambah satu karena ada penambahan (&lt;i&gt;increment)&lt;/i&gt; &lt;code&gt;hitungan++&lt;/code&gt;. Perulangan akan berhenti sampai hitungan mencapai 10.&lt;br /&gt;&lt;h2&gt;Contoh Program&lt;/h2&gt;Silahkan anda coba ketik sendiri program-program berikut ini:&lt;br /&gt;&lt;br /&gt;1. Program mencetak bintang&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;class Bintang{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; public static void main(String[] args){&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; for(int i=0; i &amp;lt;= 5; i++){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; System.out.println(&amp;rdquo;**&lt;strong&gt;&lt;em&gt;&amp;rdquo;);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;}&lt;/code&gt;&lt;/pre&gt;Hasil output:&lt;br /&gt;&lt;pre&gt;&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;&lt;br /&gt;&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;strong&gt;&lt;em&gt;&lt;br /&gt;&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;*&lt;strong&gt;&lt;/pre&gt;&lt;br /&gt;2. Program cetak angak 1—10&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;class CetakAngka{&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; public static void main(String[] argumen){&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; for(int i=0; i &amp;lt;= 10; i++){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; System.out.print( i + &amp;ldquo; &amp;rdquo; );&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; } &lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&lt;br /&gt;}&lt;/code&gt;&lt;/pre&gt;Hasil output:&lt;br /&gt;&lt;pre&gt;0 1 2 3 4 5 6 7 8 9 10 &lt;/pre&gt;&lt;br /&gt;3. Cetak bilangan ganjil saja&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;class CetakBilanganGanjil{&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; public static void main(String[] argumen){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; for(int i = 1; i &amp;lt;= 20; i += 2){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; System.out.print( i + &amp;ldquo; &amp;ldquo;);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&lt;br /&gt;}&lt;/code&gt;&lt;/pre&gt;Hasil output:&lt;br /&gt;&lt;pre&gt;1 3 5 7 9 11 13 15 17 19 &lt;/pre&gt;&lt;h2&gt;Tantangan&lt;/h2&gt;Kalau sudah paham dengan struktur perulangan FOR, mari mencoba sebuah tantangan. Buatlah kode dengan perulangan FOR. Anda juga bisa memanfaatkan &lt;a href=&#34;http://www.petanikode.com/2015/11/percabangan-if-esle-if-dan-switch-case-di-java.html&#34; target=&#34;_blank&#34;&gt;struktur IF&lt;/a&gt;. Silahkan dipikirkan, agar menghasilkan output seperti di bawah ini:&lt;br /&gt;&lt;br /&gt;1. Cetak bintang dengan pola bertambah&lt;br /&gt;&lt;pre&gt;*&lt;br /&gt;&lt;/strong&gt;&lt;br /&gt;&lt;strong&gt;&lt;em&gt;&lt;br /&gt;&lt;/em&gt;&lt;/strong&gt;*&lt;br /&gt;**&lt;strong&gt;&lt;em&gt;&lt;/pre&gt;2. Cetak bintagn dengan pola berkurang&lt;br /&gt;&lt;pre&gt;&lt;/em&gt;&lt;/strong&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;*&lt;br /&gt;&lt;strong&gt;&lt;br /&gt;&lt;em&gt;&lt;/pre&gt;3. Cetak bintang dengan pola bertambah lalu berkurang&lt;br /&gt;&lt;pre&gt;&lt;/em&gt;&lt;br /&gt;&lt;/strong&gt;&lt;br /&gt;&lt;strong&gt;&lt;em&gt;&lt;br /&gt;&lt;/em&gt;&lt;/strong&gt;*&lt;br /&gt;**&lt;strong&gt;&lt;em&gt;&lt;br /&gt;&lt;/em&gt;&lt;/strong&gt;*&lt;br /&gt;*&lt;strong&gt;&lt;br /&gt;&lt;/strong&gt;&lt;br /&gt;*&lt;/pre&gt;4. Cetak bilangan kelipatan dari 2&lt;br /&gt;&lt;pre&gt;2, 4, 8, 16, 32, &amp;hellip; 255&lt;/pre&gt;5. Cetak pola bilangan berikut&lt;br /&gt;&lt;pre&gt;1&lt;br /&gt;12&lt;br /&gt;123&lt;br /&gt;1234&lt;br /&gt;12345&lt;/pre&gt;Selamat mencoba, jangan lupa kirimkan tangkapan layar hasil output-nya di komentar.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pemrograman java di lab (12): percabangan bersarang</title>
      <link>http://petanikode.gitlab.io/2015/11/pemrograman-java-di-lab-12-percabangan-bersarang/</link>
      <pubDate>Fri, 13 Nov 2015 15:59:00 +0000</pubDate>
      
      <guid>http://petanikode.gitlab.io/2015/11/pemrograman-java-di-lab-12-percabangan-bersarang/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Percabangan bersarang bisa juga disebut &lt;code&gt;if&lt;/code&gt; di dalam &lt;code&gt;if&lt;/code&gt;, merupakan sebuah percabangan yang mimiliki percabangan di dalamnya atau bisa kita sebut percabangan dalam percabangan. Percabangan bersarang digunakan saat menemukan kasus dengan banyak hal yang harus dipertimbangkan. Sebagai contoh, coba perhatikan flowchart berikut ini.&lt;br /&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-6ZrqC9I8Nxs/VkBWekgFwUI/AAAAAAAACLk/tdhCo5np2lk/s1600/flowchart%2Bpercabangan%2Bbersarang%2Bjava.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://2.bp.blogspot.com/-6ZrqC9I8Nxs/VkBWekgFwUI/AAAAAAAACLk/tdhCo5np2lk/s1600/flowchart%2Bpercabangan%2Bbersarang%2Bjava.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Flowchart di atas merupakan flowchart program kasir. Program di atas berfungsi untuk menentukan diskon dengan berbagai pertimbangan. Bila dituliskan dalam algoritma, kira-kira akan menjadi seperti berikut ini.&lt;br /&gt;&lt;pre&gt;Apakah anda punya kartu member?&lt;br /&gt;   - ya&lt;br /&gt;       * Apakah belanjaan anda lebih dari 500rb?&lt;br /&gt;           # ya : mendapatkan diskon 50rb&lt;br /&gt;           # tidak : tidak mendapatkan diskon&lt;br /&gt;       * Apakah belanjaan anda lebih dari 100rb?&lt;br /&gt;           # ya : mendapatkan diskon 15rb&lt;br /&gt;           # tidak: tidak mendapatkan diskon&lt;br /&gt;&amp;nbsp;  - tidak&lt;br /&gt;       * Apakah belanjaan anda lebih dari 100rb?&lt;br /&gt;           # ya : mendapatkan diskon 10rb&lt;br /&gt;           # tidak: tidak mendapatkan diskon&lt;/pre&gt;Bila sudah paham dengan algoritma dan flowchartnya, maka akan mudah membut kode programnya. Berikut adalah kode program yang dihasilkan dari algoritma di atas.&lt;br /&gt;&lt;br /&gt;&lt;script src=&#34;https://gist.github.com/ardianta/5e2974b064b571b5975e.js&#34;&gt;&lt;/script&gt;&lt;br /&gt;Program di atas akan menghasilkan output seperti berikut ini.&lt;br /&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-pj9MLeIwViI/VkWUtMt7meI/AAAAAAAACL0/LRbROotYp14/s1600/hasil%2Boutput%2Bprogram%2Bkasir%2Bdengan%2Bjava.jpg&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;http://1.bp.blogspot.com/-pj9MLeIwViI/VkWUtMt7meI/AAAAAAAACL0/LRbROotYp14/s1600/hasil%2Boutput%2Bprogram%2Bkasir%2Bdengan%2Bjava.jpg&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Percabangan bersarang memang sedikit membingungkan, karena banyak kondisi yang harus dipertimbangkan. Pada program di atas, kita baru hanya menggunakan &lt;code&gt;if&lt;/code&gt; di dalam &lt;code&gt;if&lt;/code&gt; saja. Percabangan bersarang juga bisa dibuat dengan kombinasi &lt;code&gt;if&lt;/code&gt; dan &lt;code&gt;switch-case&lt;/code&gt;. Percabangan &lt;code&gt;if&lt;/code&gt; berada di dalam &lt;code&gt;case&lt;/code&gt; atau sebaliknya. Silahkan anda coba sendiri.&lt;br /&gt;&lt;br /&gt;Pembahasan tentang percabangan bersarang saya akhiri sampai di sini. Bila ada pertanyaan, silahkan kirimkan melalui komentar! Selamat berpikir.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pemrograman java di lab (11): Percabangan If/Else-If/Else dan Switch/Case</title>
      <link>http://petanikode.gitlab.io/2015/11/pemrograman-java-di-lab-11-percabangan-if/else-if/else-dan-switch/case/</link>
      <pubDate>Mon, 09 Nov 2015 14:37:00 +0000</pubDate>
      
      <guid>http://petanikode.gitlab.io/2015/11/pemrograman-java-di-lab-11-percabangan-if/else-if/else-dan-switch/case/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://2.bp.blogspot.com/-FXkb84tWS_Q/VhUetgpL57I/AAAAAAAAB6I/fvNLQwpVTxI/s1600/Lab%2BJava%2BPetani%2BKode.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Percabangan &lt;code&gt;if-else-if&lt;/code&gt; meurpakan pengembangan dari percabangan &lt;code&gt;if-else&lt;/code&gt;. Percabangan ini memiliki lebih dari dua (banyak) pilihan keputusan. Sementara itu, percabangan &lt;code&gt;switch-case&lt;/code&gt; merupakan percabangan bentuk lain. Namun, pada hakikatnya sama seperti percabangan &lt;code&gt;if-else-if&lt;/code&gt;.&lt;br /&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-9uS-c73seec/VkBISDA0AXI/AAAAAAAACLU/AsWtctwfCN0/s1600/flowchart%2Bpercabangan%2Byang%2Bmemiliki%2Bbanyak%2Bpilihan%2Bkeputusan.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://3.bp.blogspot.com/-9uS-c73seec/VkBISDA0AXI/AAAAAAAACLU/AsWtctwfCN0/s1600/flowchart%2Bpercabangan%2Byang%2Bmemiliki%2Bbanyak%2Bpilihan%2Bkeputusan.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;h2&gt;Percabangan If/Else-If/Else&lt;/h2&gt;Bentuk dasar percabangan &lt;code&gt;if-else-if&lt;/code&gt;&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;if (suatu kondisi) {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; // maka kerjakan ini&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; // kerjakan perintah ini juga&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; // &amp;hellip;&lt;br /&gt;} else if (kondisi lain) {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; // kerjakan ini&lt;br /&gt;&amp;nbsp; &amp;nbsp; // kerjakan ini juga&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; // &amp;hellip;&lt;br /&gt;} else if (kondisi yang lain lagi) {&lt;br /&gt;&amp;nbsp; &amp;nbsp; // kerjakan perintah ini&lt;br /&gt;&amp;nbsp; &amp;nbsp; // kerjakan ini juga&lt;br /&gt;&amp;nbsp; &amp;nbsp; // &amp;hellip; &lt;br /&gt;} esle {&lt;br /&gt;&amp;nbsp; &amp;nbsp; // kerjakan ini kalau&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; // semua kondisi di atas&lt;br /&gt;&amp;nbsp; &amp;nbsp; // tidak ada yang benar&lt;br /&gt;    // &amp;hellip;&lt;br /&gt;} &lt;/code&gt;&lt;/pre&gt;Jumlah &lt;code&gt;else-if&lt;/code&gt; tidak terbatas. Kita bisa membuat berapapun yang kita mau. Tapi, perlu diperhatikan. Jumlah &lt;code&gt;else-if&lt;/code&gt; bergantung dari kasus/masalah yang akan diselesaikan. Sebagai contoh, silahkan buat program untuk menghitung grade nilai.&lt;br /&gt;&lt;br /&gt;&lt;script src=&#34;https://gist.github.com/ardianta/2f90ec513c1264ca2f7b.js&#34;&gt;&lt;/script&gt;&lt;br /&gt;Ketetuan nilai akhir pada program di atas diperoleh dari 20% dari nilai harian ditambah 30% nilai UTS dan ditambah 50% nilai UAS.&lt;br /&gt;&lt;pre&gt;nilaiAkhir = (nilaiHarian * &lt;sup&gt;20&lt;/sup&gt;&amp;frasl;&lt;sub&gt;100&lt;/sub&gt;) + (nilaiUts * &lt;sup&gt;30&lt;/sup&gt;&amp;frasl;&lt;sub&gt;100&lt;/sub&gt;) + (nilaiUas * &lt;sup&gt;50&lt;/sup&gt;&amp;frasl;&lt;sub&gt;100&lt;/sub&gt;)&lt;/pre&gt;atau sama dengan&lt;br /&gt;&lt;pre&gt;nilaiAkhir = (nilaiHarian * 0.2) + (nilaiUts * 0.3) + (nilaiUas * 0.5)&lt;/pre&gt;maka, hasil output program di atas akan seperti berikut ini.&lt;br /&gt;&lt;br /&gt;Input nilai Harian&lt;br /&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-0HILcLQ8f68/Vj4E3RBr6vI/AAAAAAAACKM/ZMqSwlRTkMY/s1600/Input%2Bnilai%2Bharian%2Bprogram%2Bgrade%2Bnilai.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://2.bp.blogspot.com/-0HILcLQ8f68/Vj4E3RBr6vI/AAAAAAAACKM/ZMqSwlRTkMY/s1600/Input%2Bnilai%2Bharian%2Bprogram%2Bgrade%2Bnilai.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Input nilai UTS&lt;br /&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-lm3zFRf7pP8/Vj4E-Bv3iJI/AAAAAAAACKU/SA5e5b8xK4w/s1600/input%2Bnilai%2BUTS%2Bprogram%2Bgrade%2Bnilai.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://3.bp.blogspot.com/-lm3zFRf7pP8/Vj4E-Bv3iJI/AAAAAAAACKU/SA5e5b8xK4w/s1600/input%2Bnilai%2BUTS%2Bprogram%2Bgrade%2Bnilai.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Input nilai UAS&lt;br /&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-RN39ZBxqtjY/Vj4FDOAMwzI/AAAAAAAACKc/4OGNZF-Zoks/s1600/input%2Bnilai%2BUAS%2Bprogram%2Bgrade%2Bnilai%2Bjava.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://1.bp.blogspot.com/-RN39ZBxqtjY/Vj4FDOAMwzI/AAAAAAAACKc/4OGNZF-Zoks/s1600/input%2Bnilai%2BUAS%2Bprogram%2Bgrade%2Bnilai%2Bjava.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Output nilai akhir&lt;br /&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-QzwMvZYnaNA/Vj4FQ7K4g2I/AAAAAAAACKk/E2wLj8a7f2Y/s1600/Output%2Bnilai%2Bakhir%2Bprogram%2Bgrade%2Bjava.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://3.bp.blogspot.com/-QzwMvZYnaNA/Vj4FQ7K4g2I/AAAAAAAACKk/E2wLj8a7f2Y/s1600/Output%2Bnilai%2Bakhir%2Bprogram%2Bgrade%2Bjava.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Output nilai Grade&lt;br /&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-RrdvwGVitVA/Vj4FVBvkbMI/AAAAAAAACKs/wJ7fzE1lh1g/s1600/output%2Bhasil%2Bgrade%2Bdari%2Bnilai.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://1.bp.blogspot.com/-RrdvwGVitVA/Vj4FVBvkbMI/AAAAAAAACKs/wJ7fzE1lh1g/s1600/output%2Bhasil%2Bgrade%2Bdari%2Bnilai.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;&lt;h2&gt;Percabangan Switch/Case&lt;/h2&gt;Percabangan &lt;code&gt;switch-case&lt;/code&gt; pada hakikatnya sama seperti percabangan &lt;code&gt;if-else-if&lt;/code&gt;. Percabangan ini juga memiliki banayak alternatif pilihan. Bentuk dasar percabangan &lt;code&gt;switch-case&lt;/code&gt;:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;java&#34;&gt;switch(variabel){&lt;br /&gt;&amp;nbsp; &amp;nbsp; case 1:&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // kerjakan kode ini&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; // kode ini juga&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; break;&lt;br /&gt;&amp;nbsp; &amp;nbsp; case 2:&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // kerjakan kode ini&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; // kode ini juga&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; break;&lt;br /&gt;&amp;nbsp; &amp;nbsp; case 3:&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // kerjakan kode ini&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; // kode ini juga&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; break;&lt;br /&gt;&amp;nbsp; &amp;nbsp; default:&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // kerjakan kode ini&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; // kode ini juga&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; break;&lt;br /&gt;}&lt;/code&gt;&lt;/pre&gt;Percabangan &lt;code&gt;switch-case&lt;/code&gt; memiliki format yang berbeda dengan &lt;code&gt;if-else-if&lt;/code&gt;. Setiap kondisi di &lt;code&gt;switch-case&lt;/code&gt; diakhiri dengan titik dua (:) kemudian diikuti blok kode yang akan dikerjakan bila kondisinya benar. Setiap blok kode diakhiri dengan kata &lt;code&gt;break&lt;/code&gt;, fungsinya untuk menghentikan pengecekan kondisi berikutnya.&lt;br /&gt;&lt;br /&gt;Silahkan coba ikuti contoh program berikut. Sebuah program yang akan membandingkan inputan yang diberikan dengan case yang sudah ditentukan. Misalkan saya menginputkan &amp;ldquo;merah&amp;rdquo;, maka &lt;i&gt;case&lt;/i&gt; &amp;ldquo;merah&amp;rdquo; akan terpilih atau bernilai benar (true).&lt;br /&gt;&lt;br /&gt;&lt;script src=&#34;https://gist.github.com/anonymous/13c7c4590d689992d9fb.js&#34;&gt;&lt;/script&gt;&lt;br /&gt;Hasil output program di atas adalah sebagai berikut:&lt;br /&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-zmGNir8SR1g/VkA8t2BATZI/AAAAAAAACK8/6D9pgOa3LDY/s1600/hasil%2Boutput%2Bprogram%2BLampuLalulintas%2Bdengna%2Bswitch-case%2Bjava.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://1.bp.blogspot.com/-zmGNir8SR1g/VkA8t2BATZI/AAAAAAAACK8/6D9pgOa3LDY/s1600/hasil%2Boutput%2Bprogram%2BLampuLalulintas%2Bdengna%2Bswitch-case%2Bjava.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Cukup sekian pembahasan tentang &lt;code&gt;if-else-if&lt;/code&gt; dan &lt;code&gt;switch-case&lt;/code&gt;. Selanjutnya anda bisa berlatih dengan kasus lain. Selamat berpikir!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>