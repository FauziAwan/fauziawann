<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Petani Kode — Programmer Pengguna Linux</title>
    <link>https://www.petanikode.com/topik/java/</link>
    <description>Recent content in Java on Petani Kode — Programmer Pengguna Linux</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>id-id</language>
    <copyright>Copyright (c) 2017, Petani Kode; all rights reserved.</copyright>
    <lastBuildDate>Sat, 20 May 2017 18:01:48 +0800</lastBuildDate>
    
	<atom:link href="https://www.petanikode.com/topik/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Belajar Pemrograman Kotlin: Cara Mengambil Input dan Menampilkan Output</title>
      <link>https://www.petanikode.com/kotlin-input-dan-output/</link>
      <pubDate>Sat, 20 May 2017 18:01:48 +0800</pubDate>
      
      <guid>https://www.petanikode.com/kotlin-input-dan-output/</guid>
      <description>Bukan program komputer namanya kalau tidak memiliki input dan output. Input dan output merupakan komponen wajib setiap program komputer.
Pada kesempatan ini, kita akan belajar cara mengambil input dan Menampilkan output untuk program berbasis teks.
Kotlin telah menyediakan beberapa fungsi untuk mengambil input dan menampilkan output, diantaranya println(), print(), readLine(), Scanner(), dll.
Mari kita bahas semuanya&amp;hellip;
Menampilkan Output dengan Fungsi println/print Fungsi println() dan print() digunakan untuk menampilkan teks atau kalimat.</description>
    </item>
    
    <item>
      <title>Belajar Pemrograman Kotlin di Linux: Pengenalan dan Persiapan</title>
      <link>https://www.petanikode.com/kotlin-linux/</link>
      <pubDate>Fri, 19 May 2017 00:07:50 +0800</pubDate>
      
      <guid>https://www.petanikode.com/kotlin-linux/</guid>
      <description>Kotlin merupakan bahasa pemrograman yang berjalan di atas JVM (Java Virtual Machine) dan juga bisa dikompilasi ke dalam Javascript. Kotlin dikembangkan oleh JetBrains.
Pada acara Google IO&amp;rsquo;17 kemarin, Kotlin resmi didukung sebagai bahasa untuk pengembangan aplikasi Android dan akan mulai digunakan pada Android Studio 3.0.
Kotlin dianggap lebih mudah dan menyenangkan daripada Java, karena sintaksnya lebih sederhana.
Mudah diketik, mudah dipahami, dan menyenangkan&amp;hellip; membuat programmer menjadi lebih produktif.
Untuk tahu lebih lanjut, mari kita mulai belajar&amp;hellip;</description>
    </item>
    
    <item>
      <title>Kenapa Bahasa Pemrograman Java Kurang Cocok untuk Pemula?</title>
      <link>https://www.petanikode.com/kenapa-bahasa-pemrograman-java-kurang-cocok-untuk-pemula/</link>
      <pubDate>Sat, 21 Jan 2017 16:45:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/kenapa-bahasa-pemrograman-java-kurang-cocok-untuk-pemula/</guid>
      <description>Sudah dua kali semester saya mengajar di praktikum pemrograman Java. Hasilnya, hanya sebagian mahasiswa yang mengerti. Sebagiannya lagi masih pusing. Karena mereka belum pernah ada pengalaman coding sebelumnya. Bahasa pemrograman Java memang populer, oleh karena itu pihak kampus memilih bahasa ini untuk diajarkan pada semester I.

Om Endy Muhardin, dalam tulisan di blognya yang berjudul Java: Tidak untuk Pemula mengatakan: &amp;ldquo;Java memang bahasa yang mature. Sudah stabil (artinya tidak terlalu banyak perubahan fundamental) dan sudah teruji digunakan berbagai aplikasi besar dengan sukses.</description>
    </item>
    
    <item>
      <title>Apakah Perbedaan dari i&#43;&#43; dengan &#43;&#43;i?</title>
      <link>https://www.petanikode.com/perbedaan-i-increment-dengan-increment-i/</link>
      <pubDate>Wed, 16 Nov 2016 05:07:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/perbedaan-i-increment-dengan-increment-i/</guid>
      <description>Sebagai pemula, kita mungkin sedikit bingung dengan perbedaan dari i++ (post increment) dengan ++i (pre increment). Simbol ++ artinya tambah satu (+1) atau increment. i++ dan ++i sering kita temukan ketika membuat sebuah perulangan.
Contoh:
Post-Increment
for(int i = 1; i &amp;lt;= 10; i++){ System.out.print(i); }  Pre-Increment
for(int i = 1; i &amp;lt;= 10; ++i){ System.out.print(i); }  Kedua perulangan tersebut akan menghasilkan bilangan dari 1 sampai 10.
12345678910  i++ itu sama seperti i = i + 1, jadi nilai variabel i yang sebelumnya akan ditambah satu.</description>
    </item>
    
    <item>
      <title>Trik Agar Jendela JFrame Tampil di Tengah Layar</title>
      <link>https://www.petanikode.com/java-swing-jendela-di-tengah-layar/</link>
      <pubDate>Fri, 29 Jul 2016 23:03:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-swing-jendela-di-tengah-layar/</guid>
      <description>Pada pemrograman GUI dengan Java Swing, kita sering membuat jendela dengan JFrame. Namun, selalu tampil di pojok kiri atas layar. Pojok kiri atas adalah titik (0,0) dalam koordinat layar (x,y). Pada kesempatan ini saya akan berbagi trik, agar setiap jendela yang dibuat dengan JFrame tampil di tengah-tengah layar.
1. Komposisi PustakaAda dua pustaka yang diperlukan untuk membuat jendela JFrame tampil di tengah-tengah. Silahkan diimpor:
import java.awt.Dimension;
import java.awt.Toolkit;2. Kode Agar Tampil di TengahLetakan kode berikut di dalam konstruktor JFrame.</description>
    </item>
    
    <item>
      <title>Menghitung Akar Kuadrat dan Akar Kubik di Java</title>
      <link>https://www.petanikode.com/java-akar-kuadrad-dan-kubik/</link>
      <pubDate>Sun, 15 May 2016 11:42:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-akar-kuadrad-dan-kubik/</guid>
      <description>Pada pelajaran Matematika, kadang kita sering menemukan perhitungan akar.
Contoh, akar kuadrat dari 25 adalah 5, karena 5x5=25, bisa ditulis: $\sqrt{25} = 5$. Lalu kalau akar kubik dari 27 adalah 3, karena 3x3x3=27, bisa ditulis: $\sqrt[3]{27} = 3$.
Bagaimana cara kita membuat perhitungan tersebu di Java?
Perhitungan akar kuadrat dapat dilakukan dengan fungsi sqrt(). Fungsi ini terdapat dalam class Math. Jadi untuk menghitung akar seperti di atas dalam kode java dapat dilakukan dengan cara berikut ini:</description>
    </item>
    
    <item>
      <title>Konversi Bilangan Desimal ke Bilangan Biner di Java</title>
      <link>https://www.petanikode.com/java-desimal-biner/</link>
      <pubDate>Sat, 30 Apr 2016 16:00:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-desimal-biner/</guid>
      <description>Konversi bilangan desimal ke biner sangat mudah dilakukan di Java, karena ada method atau fungsi yang sudah disediakan untuk melakukannya. Berikut ini tampilan program konversi yang saya buat dengan Java (Swing).Terdapat dua tombol pada program tersebut. Tombol pertama berfungsi untuk menentukan tipe konversinya (Desi-ke-Bin atau Bin-ke-Desi). Kode yang dikerjakan di tombol tersebut adalah sebagai berikut.
private void btnTipeKonversiActionPerformed(java.awt.event.ActionEvent evt) { &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;</description>
    </item>
    
    <item>
      <title>Operator ^ (xor) di Java bukan untuk Membuat Pangkat</title>
      <link>https://www.petanikode.com/java-operator-xor/</link>
      <pubDate>Fri, 29 Apr 2016 06:25:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-operator-xor/</guid>
      <description>Sebuah kekeliruan saya temukan ketika memeriksa kode program milik teman. Dia mengimplementasikan rumus berikut ke dalam kode java.
y = x2 + 3
Potongan kode program yang dia tulis.
int x = 3;
int y = x^2 + 3;
Hasilnya pun 6; tidak sesuai harapan. Seharusnya menghasilkan 12.
Operator ^ (Exclusive Or) disingkat xor, merupakan operator bitwise. Operator bitwise merupakan operator untuk memanipulasi bilangan biner.
Contoh konversi bilangan desimal ke biner (8bit):</description>
    </item>
    
    <item>
      <title>Pemrograman Android di Linux dengan Eclipse</title>
      <link>https://www.petanikode.com/android-linux-eclipse/</link>
      <pubDate>Thu, 28 Apr 2016 06:54:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/android-linux-eclipse/</guid>
      <description>Awalnya Google menggunakan Eclipse sebagai IDE untuk pengembangan Android. Kemudian beralih ke Android Studio.
Eclipse memang lebih ringan daripada Android Studio, akan tetapi Eclipse tidak lagi didukung oleh Google.
Namun tidak ada salahanya menggunakan Eclipse untuk membuat aplikasi Android.
Bila kamu ingin mencobanya, silahkan ikuti langkah-langkah berikut untuk melakukan perisapan.
1. Install JDK JDK (Java Development Kit) merupakan peralatan dasar yang dibutuhkan untuk pemrograman Java.
Karena aplikasi Android menggunakan bahasa pemrograman Java, maka kita perlu menginstal JDK.</description>
    </item>
    
    <item>
      <title>Pemrograman Java di Lab (16): Fungsi dan Method</title>
      <link>https://www.petanikode.com/java-prosedur-dan-fungsi/</link>
      <pubDate>Fri, 22 Apr 2016 20:31:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-prosedur-dan-fungsi/</guid>
      <description>Fungsi dan Method merupakan bagian dari program yang bertugas melakukan operasi tertentu. Pada teknik pemrograman prosedural seperti pemrograman Pascal, C, C++, PHP, dsb. Program dibentuk dari kumpulan fungsi atau prosedur yang saling bekerja sama. Fungsi-fungsi tersebut akan dipanggil pada fungsi main. Fungsi main merupakan fungsi utama dalam sebuah program.

Pada pemrograman Java, Fungsi atau prosedur dikenal dengan method (metode). Java sepenuhnya menerapkan paradigma pemrograman berorientasi objek (PBO), dalam bahasa inggris disebut OOP (Object Oriented Programming).</description>
    </item>
    
    <item>
      <title>Belajar Pemrograman Java: Cara Menggunakan Array untuk Menyimpan Banyak Hal</title>
      <link>https://www.petanikode.com/java-array/</link>
      <pubDate>Thu, 21 Apr 2016 22:34:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-array/</guid>
      <description>Apa yang akan kita lakukan bila memiliki banyak data yang akan disimpan dalam vairabel?
Misalkan kita ingin menyimpan nama-nama teman dalam variabel.
Maka mungkin kita akan melakukannya seperti ini:
String namaTeman1 = &amp;quot;Linda&amp;quot;; String namaTeman2 = &amp;quot;Santi&amp;quot;; String namaTeman3 = &amp;quot;Susan&amp;quot;; String namaTeman4 = &amp;quot;Mila&amp;quot;; String namaTeman5 = &amp;quot;Ayu&amp;quot;;  Hal ini sah-sah saja.
Akan tetapi&amp;hellip;
Masalahnya bagaimana kala datanya banyak, misalkan ada 100 data, pastinya capek donk membuat variabel sebanyak itu.</description>
    </item>
    
    <item>
      <title>Pilihan Alternatif Java dan Symbolic Link yang Buntu</title>
      <link>https://www.petanikode.com/pilihan-alternatif-java-dan-symbolic-link-yang-buntu/</link>
      <pubDate>Wed, 06 Apr 2016 22:50:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/pilihan-alternatif-java-dan-symbolic-link-yang-buntu/</guid>
      <description>Ketika saya bermain-main dengan perintah update-alternative untuk menambahakan pilihan alternatif java, malah terjadi error.
Hal ini disebabkan karena saya salah memasukkan symbolic link ketika menambahkan pilihan alternatif.
Berikut ini perintah salah yang menyebabkan masalah:
sudo update-alternative --install /etc/alternatives/java java /opt/jdk1.8.0_77/bin/java Perhatikan teks yang berwarna merah. Teks tersebut merupakan symbolic link yang berlokasi di /etc/alternatives.
Symbolic link yang seharusnya dimasukkan adalah /usr/bin/java.
Akibatnya, error:
petanikode@imajinasi:~$ sudo update-alternatives --config java update-alternatives: error: cannot stat file &#39;/etc/alternatives/java&#39;: Too many levels of symbolic links  Tidak dapat memilih alternatif java, karena symbolic link java yang berada di /etc/alternatives buntu (broken).</description>
    </item>
    
    <item>
      <title>Cara Mengatasi JDK yang Lebih dari Satu di Linux agar tidak Bentrok</title>
      <link>https://www.petanikode.com/cara-mengatasi-jdk-yang-lebih-dari-satu-di-linux/</link>
      <pubDate>Tue, 05 Apr 2016 22:49:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/cara-mengatasi-jdk-yang-lebih-dari-satu-di-linux/</guid>
      <description>Saya menginstal lebih dari satu JDK di Linux (Xubuntu). Ada Open JDK 8, Open JDK 7, dan Oracle JDK 8. A
walnya saya hanya punya Open JDK 8. Kemudian setelah mengintal Gradle, Open JDK 7 juga ikut tersintal.
Selain itu, saya juga menginstal Oracle JDK 8 Secara manual di direktori /opt.
Saat ini JDK yang sedang aktif digunakan adalah Open JDK 7.
Beberapa IDE tidak mendukung bila menggunakan Open JDK 7.</description>
    </item>
    
    <item>
      <title>Belajar Pemrograman Java: Memahami Dua Jenis Perulangan dalam Java</title>
      <link>https://www.petanikode.com/pemrograman-java-perulangan/</link>
      <pubDate>Sun, 03 Jan 2016 18:28:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/pemrograman-java-perulangan/</guid>
      <description>Apa yang akan kita lakukan bila ingin menyuruh komputer mengerjakan perintah yang berulang-ulang?
Misalkan kita ingin menyuruh komputer menampilkan teks Petani Kode sebanyak 5x.
Maka kita bisa menyuruhnya seperti ini:
System.out.println(&amp;quot;Petani Kode&amp;quot;); System.out.println(&amp;quot;Petani Kode&amp;quot;); System.out.println(&amp;quot;Petani Kode&amp;quot;); System.out.println(&amp;quot;Petani Kode&amp;quot;); System.out.println(&amp;quot;Petani Kode&amp;quot;);  Tapi&amp;hellip; bagaimana kalau sebanyak 1000x, apa kita akan mampu mengetik kode sebanyak itu?
Tentunya tidak.
Karena itu, kita harus pakai perulangan.

Contoh perulangan:
for (int hitungan = 0; hitungan &amp;lt;= 1000; hitungan++) { System.</description>
    </item>
    
    <item>
      <title>Belajar Pemrograman Java: Inilah 3 Bentuk Percabangan yang Harus Dipahami</title>
      <link>https://www.petanikode.com/java-percabangan/</link>
      <pubDate>Sun, 25 Oct 2015 18:33:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-percabangan/</guid>
      <description>Kalau kita perhatikan, alur pengeksekusian sebuah kode program dikerjakan satu per satu dari atas sampai ke bawah.
Baris demi baris dibaca, kemudian komputer mengerjakan apa yang diperintahkan.
Misalnya seperti ini:
Alur programnya satu, tidak ada belokan atau percabangan.
Ngomong-ngomong apa itu percabangan?
Percabangan hanyalah sebuah istilah yang digunakan untuk menyebut alur program yang bercabang.
Percabangan juga dikenal dengan &amp;ldquo;Control Flow&amp;rdquo;, &amp;ldquo;Struktur Kondisi&amp;rdquo;, &amp;ldquo;Struktur IF&amp;rdquo;, &amp;ldquo;Decision&amp;rdquo;, dsb. Semuanya itu sama.</description>
    </item>
    
    <item>
      <title>Belajar java: Cara Menggunakan Pangkat</title>
      <link>https://www.petanikode.com/java-pangkat/</link>
      <pubDate>Sun, 18 Oct 2015 08:00:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-pangkat/</guid>
      <description>Pada contoh kasus program luas lingkaran kemarin, kita menggunakan pangkat dua untuk menghitung luas lingkaran. Pangkat dua dapat ditulis dengan membuat perkalian dengan variabel atau bilangan yang akan dipangkatkan dua. Contoh, r2 dapat ditulis r*r. Tapi, bagaiamana kalau pangkatnya banyak? misal 4112. Tidak mungkin kita akan melakukan perkalian sebanyak itu dalam kode. Oleh karena itu, kita membutuhkan fungsi pangkat untuk menghitungnya.
Java sudah menyediakan fungsi pangkat yang dapat digunakan kapan saja.</description>
    </item>
    
    <item>
      <title>Belajar Java-Swing: Cara Menggunakan JOptionPane</title>
      <link>https://www.petanikode.com/java-swing-joptionpane/</link>
      <pubDate>Sat, 17 Oct 2015 21:34:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-swing-joptionpane/</guid>
      <description>Sebelumnya, kita telah berkenalan dengan operator. Sekarang kita akan coba mengenal JOptionPane dan operator kondisi. Pembahasan sengaja dibuat terpisah, agar pembahasan operator tidak terlalu panjang.
JOptionPaneJOptionPane merupakan sebuah kelas yang menyediakan jendela dialog sebagai antarmuka. JOptionPane bisa digunakan untuk mendapatkan input, menampilkan informasi, menampilkan pesan error, menampilkan dialog konfirmasi, dan sebagainya.
Sebelum menggunakan JOptionPane, kita perlu mengimpornya ke dalam program:
import javax.swing.JOptionPane;Terdapat empat fungsi atau metode yang sering dipakai:</description>
    </item>
    
    <item>
      <title>Belajar Pemrograman Java: Inilah 6 Jenis Operator yang Harus Kamu Ketahui</title>
      <link>https://www.petanikode.com/pemrograman-java-operator/</link>
      <pubDate>Sat, 17 Oct 2015 20:12:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/pemrograman-java-operator/</guid>
      <description>Operator dalam pemrograman digunakan untuk melakukan operasi tertentu.
Misalkan kita ingin menjumlahkan nilai dari variabel x dan y, maka kita bisa lakukan dengan operator penjumlahan (+).
x + y  Ada enam jenis kelompok operator dalam pemrograman Java:
 Operator Artimatika; Operator Penugasan; Operator Pembanding; Operator Logika; Operator Bitwise; dan Operator Ternary.  Bila digambarkan dalam mind map, akan terlihat seperti ini:
Ukuran penuh dari mind map ini dapat kamu lihat di: coggle.</description>
    </item>
    
    <item>
      <title>Belajar Pemrograman Java: Cara Mengambil Input dan Menampilkan Output</title>
      <link>https://www.petanikode.com/java-input-output/</link>
      <pubDate>Mon, 12 Oct 2015 09:35:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-input-output/</guid>
      <description>Seperti yang kita ketahui, program komputer terdiri dari tiga komponen utama, yaitu: input, proses, dan output.
 Input: nilai yang kita masukan ke program Proses: langkah demi langkah yang dilakukan untuk mengelola input menjadi sesuatu yang berguna Output: hasil pengolahan  Semua bahasa pemrograman telah menyediakan fungs-fungsi untuk melakukan input dan output.
Java sendiri sudah menyediakan tiga class untuk mengambil input:
 Class Scanner; Class BufferReader; dan Class Console.</description>
    </item>
    
    <item>
      <title>Belajar Pemrograman Java: Variabel dan Tipe Data</title>
      <link>https://www.petanikode.com/pemrograman-java-variabel-dan-tipe-data/</link>
      <pubDate>Sun, 11 Oct 2015 13:44:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/pemrograman-java-variabel-dan-tipe-data/</guid>
      <description>Variabel adalah tempat menyimpan nilai sementara.
Itu saja.
Serius?
Iya serius, kalau mau yang lebih panjang&amp;hellip;
&amp;hellip;coba kita lihat pengertiannya dari Wikipedia:
Variabel: (Lat) 1. berubah-ubah, tidak tetap; 2. deklarasi sesuatu yang memiliki variasi nilai 3. berbeda-beda dalam bahasa pemrograman disebut juga simbol yang mewakili nilai tertentu, variabel yang dikenal di sub program disebut variabel lokal. sedang yang di kenal secara umum/utuh dalam satu program disebut variabel global.</description>
    </item>
    
    <item>
      <title>Belajar Pemrograman Java: Program Java Pertama yang Harus Anda Buat</title>
      <link>https://www.petanikode.com/pemrograman-java-program-pertama/</link>
      <pubDate>Wed, 07 Oct 2015 21:50:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/pemrograman-java-program-pertama/</guid>
      <description>Setelah mempersiapkan alat-alat yang dibutuhkan, selanjutnya kita coba membuat program pertama.
Program yang akan dibuat sederhana, hanya menampilkan pesan ke Layar.
Program ini biasanya disebut program Hello World.
Siap&amp;hellip;?
Sebelum Memulai, Pahami Dulu Konsepnya Pemrograman java sebenarnya sangat sederhana.
Kita hanya melakukan hal ini:
 Tulis kode: Menulis kode dengan Netbeans maupun teks editor yang lain. Kompilasi: Mengubah kode menjadi bytecode. Eksekusi: Menjalankan program    Sekarang, Mari Kita Mulai&amp;hellip; Pertama kita harus membuat proyek dulu di Netbeans.</description>
    </item>
    
    <item>
      <title>Belajar Java di Linux: Inilah Persiapan yang Harus dilakukan</title>
      <link>https://www.petanikode.com/java-linux/</link>
      <pubDate>Sun, 11 Jan 2015 16:40:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-linux/</guid>
      <description>Ingin belajar pemrograman Java di Linux?
Maka ini adalah artikel yang tepat untukmu.
Pada artikel ini, saya akan membahas persiapan alat-alat yang digunakan untuk pemrograman Java di Linux.
Selain itu, nanti kita akan coba membuat program sederhana.
Siap&amp;hellip;?
Mari kita mulai.
Persiapan Alat Adapun alat-alat yang perlu dispersiapan untuk belajar pemrograman Java di Linux adalah sebagai berikut:
1. Teks Editor Teks editor digunakan untuk menulis kode.

Baca juga:</description>
    </item>
    
  </channel>
</rss>