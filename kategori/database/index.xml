<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Database on Petani Kode</title>
    <link>http://petanikode.com/kategori/database/index.xml</link>
    <description>Recent content in Database on Petani Kode</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>id-id</language>
    <copyright>Copyright (c) 2017, Petani Kode; all rights reserved.</copyright>
    <atom:link href="http://petanikode.com/kategori/database/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Cara Termudah Menyimpan Graf pada Database Relasional</title>
      <link>http://petanikode.com/2016/12/cara-termudah-menyimpan-graf-pada-database-relasional/</link>
      <pubDate>Sat, 10 Dec 2016 15:53:00 +0000</pubDate>
      
      <guid>http://petanikode.com/2016/12/cara-termudah-menyimpan-graf-pada-database-relasional/</guid>
      <description>&lt;p&gt;Pada awalnya saya sangat bingung tentang kegunaan graf dalam komputer. Karena itu, saya tidak begitu memperhatikan materi graf pada matakuliah Kalkulus. Namun, semuanya berubah setelah saya mengenal matakuliah Kecerdasan Buatan, Analisa Algoritma, Struktur Data, dsb. Ternyata penggunaan Graf dan Pohon &lt;i&gt;(tree)&lt;/i&gt; di matakuliah tersebut cukup banyak.&lt;br /&gt;&lt;br /&gt;Saya menjadi cukup penasaran tentang cara komputasi graf. Akhirnya saya belajar dari Google dan menerbitkan sebuah tulisan di blog ini yang berjudul &lt;i&gt;&lt;a href=&#34;http://www.petanikode.com/2016/11/representasi-graf-dalam-kode-python.html&#34; target=&#34;_blank&#34;&gt;Representasi Graf dalam Kode Python&lt;/a&gt;. &lt;/i&gt;Namun, sekarang saya ingin grafnya disimpan dalam database relasional seperti MySQL.&lt;br /&gt;&lt;br /&gt;Memikirkan sendiri cara penyimpanan graf dalam MySQL membuat saya pusing. Akhirnya saya menemukan sebuah &lt;i&gt;slide&lt;/i&gt; milik bapak &lt;a href=&#34;http://www.slideshare.net/billkarwin&#34; target=&#34;_blank&#34;&gt;Karwin&lt;/a&gt;. Beliau menjelaskan empat metode penyimpanan graf pada database relasional dan pada akhirnya membandingkan setiap metode.&lt;br /&gt;&lt;iframe allowfullscreen=&#34;&#34; frameborder=&#34;0&#34; height=&#34;485&#34; marginheight=&#34;0&#34; marginwidth=&#34;0&#34; scrolling=&#34;no&#34; src=&#34;//www.slideshare.net/slideshow/embed_code/key/tI9jfoqFHAcQdn?startSlide=5&#34; style=&#34;border-width: 1px; border: 1px solid #ccc; margin-bottom: 5px; max-width: 100%;&#34; width=&#34;100%&#34;&gt; &lt;/iframe&gt; &lt;br /&gt;&lt;div style=&#34;margin-bottom: 5px;&#34;&gt;&lt;b&gt; &lt;a href=&#34;https://www.slideshare.net/billkarwin/models-for-hierarchical-data&#34; target=&#34;_blank&#34; title=&#34;Models for hierarchical data&#34;&gt;Models for hierarchical data&lt;/a&gt; &lt;/b&gt; from &lt;b&gt;&lt;a href=&#34;https://www.slideshare.net/billkarwin&#34; target=&#34;_blank&#34;&gt;Karwin Software Solutions LLC&lt;/a&gt;&lt;/b&gt; &lt;/div&gt;Perbandingan beliau pada slide tersebut, menentukan metode &lt;i&gt;Closeure Table&lt;/i&gt; terpilih sebagai yang termudah. Termudah yang saya maksudkan di sini adalah mudah untuk melakukan &lt;i&gt;Query&lt;/i&gt; CRUD &lt;i&gt;(Create, Read, Update, Delete)&lt;/i&gt;.&lt;br /&gt;&lt;br /&gt;Masing-masing metode memang memiliki kelebihan dan kekurangan. Contohnya metode &lt;i&gt;Path Enumerattion&lt;/i&gt;, bagus digunakan untuk membuat &lt;i&gt;breadcrums. Sedangkan Adjacency List &lt;/i&gt;tidak bagus digunakan untuk graf yang punya banyak&lt;i&gt; node.&lt;/i&gt;&lt;br /&gt;&lt;h2&gt;Metode &lt;i&gt;Closure Table&lt;/i&gt;&lt;/h2&gt;Mari kita pelajari cara penyimpanan graf dengan metode &lt;i&gt;Closure Table&lt;/i&gt;. Misalkan, kita memiliki graf seperti pada gambar ini.&lt;br /&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-dWgknbxEzmU/WCLzqncwFzI/AAAAAAAADag/6wDc7P2eC7IwFY3dOdmTXHpcaT-woBqFQCK4B/s1600/graf%2Bberarah%2B-%2Bpetanikode.jpg&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://3.bp.blogspot.com/-dWgknbxEzmU/WCLzqncwFzI/AAAAAAAADag/6wDc7P2eC7IwFY3dOdmTXHpcaT-woBqFQCK4B/s1600/graf%2Bberarah%2B-%2Bpetanikode.jpg&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Anggaplah semua titik-titik pada graf tersebut merupakan sebuah kota yang saling terhubung. Kemudian, yang kita harus lakukan adalah membuat tabel untuk menyimpan kota (titik) dan jalan yang menghubungkannya.&lt;br /&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-rCy4_zOhkfE/WDmI8o6D06I/AAAAAAAADdY/cttgx1o55l4VGyGvr-toyHGhEk8aP1qtACK4B/s1600/Relasi%2BTabel%2BGraf.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img alt=&#34;Diagram Relasi Tabel Graf&#34; border=&#34;0&#34; src=&#34;https://1.bp.blogspot.com/-rCy4_zOhkfE/WDmI8o6D06I/AAAAAAAADdY/cttgx1o55l4VGyGvr-toyHGhEk8aP1qtACK4B/s1600/Relasi%2BTabel%2BGraf.png&#34; title=&#34;&#34; /&gt;&amp;nbsp;&lt;/a&gt;&lt;br /&gt;Relasi yang akan tercipta adalah &lt;i&gt;Many-to-Many&lt;/i&gt;. Kolom &lt;code&gt;kota_asal&lt;/code&gt; dan &lt;code&gt;kota_tujuan&lt;/code&gt; akan menyimpan &lt;code&gt;id&lt;/code&gt; dari &lt;i&gt;kota&lt;/i&gt;. Kemudian kolom &lt;code&gt;panjang&lt;/code&gt; untuk menyimpan panjang jalannya.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;sql&#34;&gt;create table kota(&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; id int,&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; nama char,&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; PRIMARY KEY(id)&lt;br /&gt;);&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;create table jalan(&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; kota_asal int,&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; kota_tujuan int,&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; panjang int,&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; FOREIGN KEY(kota_asal) REFERENCES kota(id),&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; FOREIGN KEY(kota_tujuan) REFERENCES kota(id)&lt;br /&gt;);&lt;/code&gt;&lt;/pre&gt;Sekarang kita sudah punya dua tabel yang saling berelasi.&lt;br /&gt;&lt;br /&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-MpXwEwCU8Ek/WDmLo9QF4rI/AAAAAAAADdk/UsgJ7jVgr8IYkYm1GL7Vs2w-mTxw55HPACK4B/s1600/Relasi%2Btabel%2Bgraf%2Bdi%2Bdatabase%2Bmysql.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img alt=&#34;Relasi tabel database Graf&#34; border=&#34;0&#34; src=&#34;https://4.bp.blogspot.com/-MpXwEwCU8Ek/WDmLo9QF4rI/AAAAAAAADdk/UsgJ7jVgr8IYkYm1GL7Vs2w-mTxw55HPACK4B/s1600/Relasi%2Btabel%2Bgraf%2Bdi%2Bdatabase%2Bmysql.png&#34; title=&#34;&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Sekarang kita coba menambahkan semua titik pada graf:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;sql&#34;&gt;INSERT INTO kota (id,nama) VALUE (1,&amp;lsquo;A&amp;rsquo;);&lt;br /&gt;INSERT INTO kota (id,nama) VALUE (2,&amp;lsquo;B&amp;rsquo;);&lt;br /&gt;INSERT INTO kota (id,nama) VALUE (3,&amp;lsquo;C&amp;rsquo;);&lt;br /&gt;INSERT INTO kota (id,nama) VALUE (4,&amp;rsquo;D&amp;rsquo;);&lt;br /&gt;INSERT INTO kota (id,nama) VALUE (5,&amp;lsquo;E&amp;rsquo;);&lt;br /&gt;INSERT INTO kota (id,nama) VALUE (6,&amp;lsquo;F&amp;rsquo;);&lt;/code&gt;&lt;/pre&gt;Selanjutnya menambahkan data jalan:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;sql&#34;&gt;INSERT INTO jalan (kota_asal,kota_tujuan,panjang) VALUES (1,2,14);&lt;br /&gt;INSERT INTO jalan (kota_asal,kota_tujuan,panjang) VALUES (1,3,10);&lt;br /&gt;INSERT INTO jalan (kota_asal,kota_tujuan,panjang) VALUES (2,3,6);&lt;br /&gt;INSERT INTO jalan (kota_asal,kota_tujuan,panjang) VALUES (2,4,18);&lt;br /&gt;INSERT INTO jalan (kota_asal,kota_tujuan,panjang) VALUES (3,4,7);&lt;br /&gt;INSERT INTO jalan (kota_asal,kota_tujuan,panjang) VALUES (4,3,9);&lt;br /&gt;INSERT INTO jalan (kota_asal,kota_tujuan,panjang) VALUES (5,6,8);&lt;br /&gt;INSERT INTO jalan (kota_asal,kota_tujuan,panjang) VALUES (6,4,11);&lt;/code&gt;&lt;/pre&gt;Panjang jalan saya tentukan sendiri. Sekarang semuanya sudah masuk. Mari kita coba-coba melakukan &lt;i&gt;query&lt;/i&gt; yang lain. Misalnya, berapakah panjang jalan dari kota B menuju kota D?&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;sql&#34;&gt;SELECT panjang FROM &lt;code&gt;jalan&lt;/code&gt; WHERE kota_asal=2 AND kota_tujuan=4 &lt;/code&gt;&lt;/pre&gt;Hasilnya:&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;sql&#34;&gt;+&amp;mdash;&amp;mdash;&amp;mdash;+&lt;br /&gt;| panjang |&lt;br /&gt;+&amp;mdash;&amp;mdash;&amp;mdash;+&lt;br /&gt;|      18 |&lt;br /&gt;+&amp;mdash;&amp;mdash;&amp;mdash;+&lt;br /&gt;1 row in set (0,00 sec)&lt;/code&gt;&lt;/pre&gt;Sebenarnya ada dua jalan yang bisa dilewati dari kota B menuju kota D, yaitu &lt;code&gt;B-&amp;gt;D&lt;/code&gt; dan &lt;code&gt;B-&amp;gt;C-&amp;gt;D&lt;/code&gt;. Akan tetapi &lt;i&gt;query&lt;/i&gt; tersebut hanya memilih jalur &lt;code&gt;B-&amp;gt;D&lt;/code&gt; saja. Untuk query yang lebih rumit, mungkin kita bisa lakukan dengan membuat program. Misalnya, program untuk menentukan jalur terpedek.&lt;br /&gt;&lt;br /&gt;File SQL contoh di atas dapat anda download di: &lt;a href=&#34;https://gist.github.com/ardianta/7ae139c95570a35d3af9dc40b70f18db&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;https://gist.github.com/ardianta/7ae139c95570a35d3af9dc40b70f18db&#34;&gt;https://gist.github.com/ardianta/7ae139c95570a35d3af9dc40b70f18db&lt;/a&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Begitulah cara termudah menyimpan graf pada database relasional. Metode &lt;i&gt;Closure Table&lt;/i&gt; memang yang termudah, namun pasti memiliki kekurangan. Saya kira metode inilah yang paling terbaik di antara kawan-kawannya, bagaimana menurutmu?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Query MySQL untuk Menentukan Pemenang</title>
      <link>http://petanikode.com/2015/08/query-mysql-untuk-menentukan-pemenang/</link>
      <pubDate>Mon, 03 Aug 2015 05:53:00 +0000</pubDate>
      
      <guid>http://petanikode.com/2015/08/query-mysql-untuk-menentukan-pemenang/</guid>
      <description>&lt;p&gt;&lt;amp-img
    width=&#34;672&#34;
    height=&#34;397&#34;
    alt=&#34;Query-mysql-untuk-menentukan-pemenang-pada-e-voting-system.png&#34;
    src=&#34;http://1.bp.blogspot.com/-QG4Z1jestZs/Vb6MEZwnejI/AAAAAAAABpY/9Z6O4YtwjRw/s1600/Query-mysql-untuk-menentukan-pemenang-pada-e-voting-system.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Saya sedang mengembangkan aplikasi web untuk pemilihan ketua BEM dengan
framework CodeIgniter. Aplikasi ini hampir selesai. Namun, ada satu hal
yang masih membuat saya bingung, yaitu penentuan pemenang setelah pemilihan selesai.&lt;/p&gt;

&lt;p&gt;Query pertama&amp;ndash;menurut saya sesuai&amp;ndash;yang didapatkan dari pencarian di google adalah sebagai berikut:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT
    calon_idcalon,
    calon.nama AS nama,
    calon.foto AS foto,
    COUNT(calon_idcalon) AS jumlah
FROM
    kotak_suara,
    calon
WHERE
    calon_idcalon = calon.nim
GROUP BY calon_idcalon
ORDER BY jumlah
DESC LIMIT 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil yang didapatkan dari query tersebut, adalah satu orang pemenag dengan suara terbanyak. Tapi, bagaiaman kalau ada dua orang yang memiliki sura terbanyak. Kalau menggunakan query di atas, hasilnya tetap satu orang.&lt;/p&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;p&gt;Akhirnya, saya diberikan query manjur dari salah satu member &lt;a href=&#34;https://www.facebook.com/groups/mysql.indonesia/permalink/10153422674235996/&#34;&gt;group MySQL Indonesia&lt;/a&gt;. Query sakti ini dapat menampilkan semua pemenang dengan perolehan suara yang sama.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT
    calon_idcalon,
    calon.nama AS nama,
    calon.foto AS foto,
    COUNT(calon_idcalon) AS jumlah
FROM
    kotak_suara,
    calon
WHERE
    calon_idcalon = calon.nim
GROUP BY
    calon_idcalon
HAVING
    COUNT( calon_idcalon) &amp;gt;= (
        SELECT COUNT( calon_idcalon ) AS SUM
        FROM kotak_suara
        GROUP BY calon_idcalon
        ORDER BY SUM
        DESC LIMIT 1
    )
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;991&#34;
    height=&#34;503&#34;
    alt=&#34;Pemenang+yang+terpilih+dari+hasil+query.png&#34;
    src=&#34;http://3.bp.blogspot.com/-f9AQWcJ4J9s/Vb6PHq3oXpI/AAAAAAAABpk/WFAKYTdT-7w/s1600/Pemenang%2Byang%2Bterpilih%2Bdari%2Bhasil%2Bquery.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Instalasi MongoDB di Linux</title>
      <link>http://petanikode.com/2015/03/instalasi-mongodb-di-linux/</link>
      <pubDate>Mon, 09 Mar 2015 08:15:00 +0000</pubDate>
      
      <guid>http://petanikode.com/2015/03/instalasi-mongodb-di-linux/</guid>
      <description>&lt;p&gt;MongoDB adalah salah satu jenis basis data NoSQL. basis data ini berorientasi
dokumen. MongoDB dibuat dengan bahasa pemrograman C++. MongoDB memungkinkan
kita untuk menyimpan dokumen berbasis JSON dengan sekema dinamis secara sederhana.&lt;/p&gt;

&lt;p&gt;MongoDB tersedia dalam berbagai &lt;em&gt;platform&lt;/em&gt; seperti Windows, Linux, Solaris, dan Mac.
MongoDB dapat diunduh di &lt;a href=&#34;http://www.mongodb.org/downloads&#34;&gt;situs resminya&lt;/a&gt;.
Pada tulisan ini, kita akan menginstal MongoDB pada Ubuntu 14.10 melalui &lt;code&gt;apt&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;p&gt;Kita mulai saja, pertama-tama, untuk memastikan paket MongoDB tersedia di
repositori, kita lakukan pencarian dengan perintah:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ apt-cache search mongodb

...
mongodb - object/document-oriented database (metapackage)
mongodb-clients - object/document-oriented database (client apps)
mongodb-server - object/document-oriented database (server package)
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pada hasil pencarian paket bernama &lt;code&gt;mongodb&lt;/code&gt;, &lt;code&gt;mongodb-clients&lt;/code&gt;, dan &lt;code&gt;mongodb-server&lt;/code&gt;.
Kita akan menginstal paket &lt;code&gt;mongodb&lt;/code&gt;, karena, &lt;code&gt;mongodb-server&lt;/code&gt; dan &lt;code&gt;mongodb-clients&lt;/code&gt;
 sudah termasuk di dalamnya.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install mongodb
[sudo] password for ardianta:
Reading package lists... Done
Building dependency tree
Reading state information... Done
The following extra packages will be installed:
libboost-program-options1.55.0 libboost-thread1.55.0 libgoogle-perftools4
libsnappy1 libtcmalloc-minimal4 libyaml-cpp0.5 mongodb-clients
mongodb-server
The following NEW packages will be installed:
libboost-program-options1.55.0 libboost-thread1.55.0 libgoogle-perftools4
libsnappy1 libtcmalloc-minimal4 libyaml-cpp0.5 mongodb mongodb-clients
mongodb-server
0 upgraded, 9 newly installed, 0 to remove and 80 not upgraded.
Need to get 54,9 MB of archives.
After this operation, 182 MB of additional disk space will be used.
Do you want to continue? [Y/n] y
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ukuran paket yang diunduh lumayan besar, 54,9 MB.
Setelah berhasil tersintal, cobalah periksa, versi berapa yang terinstal.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mongo --version
MongoDB shell version: 2.6.3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Versi yang saya instal ternyata versi &lt;code&gt;2.6.3&lt;/code&gt;. Versi terbaru saat ini adalah versi &lt;code&gt;3.0.0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;739&#34;
    height=&#34;452&#34;
    alt=&#34;uji+coba+mongodb+di+ubuntu.png&#34;
    src=&#34;http://3.bp.blogspot.com/-tIvgX8MvGoY/VPw38Nw15sI/AAAAAAAABf8/pjtaeojcUmA/s1600/uji%2Bcoba%2Bmongodb%2Bdi%2Bubuntu.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>