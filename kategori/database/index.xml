<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Database on Petani Kode — Programmer Pengguna Linux</title>
    <link>https://www.petanikode.com/kategori/database/index.xml</link>
    <description>Recent content in Database on Petani Kode — Programmer Pengguna Linux</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>id-id</language>
    <copyright>Copyright (c) 2017, Petani Kode; all rights reserved.</copyright>
    <atom:link href="https://www.petanikode.com/kategori/database/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Cara Termudah Menyimpan Graf pada Database Relasional</title>
      <link>https://www.petanikode.com/cara-menyimpan-graf-dalam-database/</link>
      <pubDate>Sat, 10 Dec 2016 15:53:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/cara-menyimpan-graf-dalam-database/</guid>
      <description>

&lt;p&gt;Awalnya saya tidak begitu paham dengan kegunaan graf pada komputer.&lt;/p&gt;

&lt;p&gt;Namun, setelah
belajar beberapa teori seperti kecerdasan buatan, analisa algoritma, struktur data,
matematika diskrit, kalkulus, dan sebagainya. Saya mendapatkan sedikit pencerahan.&lt;/p&gt;

&lt;p&gt;Graf dapat digunakan untuk menyelesaikan berbagai permasalahan seperti pencarian
jalur terpendek, relasi hubungan sesuatu, representasi pengetahuan pada AI, dsb.&lt;/p&gt;

&lt;p&gt;Saya kemudian tertarik untuk mengetahui cara melakukan komputasi graf.&lt;/p&gt;

&lt;p&gt;Sebelumnya saya pernah membahas &lt;a href=&#34;https://www.petanikode.com/representasi-graf-dalam-kode-python/&#34;&gt;cara merepresentasikan graf ke dalam kode&lt;/a&gt;
program dengan bahasa pemrograman python.&lt;/p&gt;

&lt;p&gt;Sekarang, bagaimana caranya kita menyimpan graf di dalam database?&lt;/p&gt;

&lt;p&gt;mari kita bahas&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;cara-menyimpan-graf-di-dalam-database&#34;&gt;Cara Menyimpan Graf di dalam Database&lt;/h2&gt;

&lt;p&gt;Memikirkan sendiri cara penyimpanan graf dalam database membuat saya pusing.&lt;/p&gt;

&lt;p&gt;Tapi, pada akhirnya saya menemukan sebuah &lt;em&gt;slide&lt;/em&gt; milik bapak &lt;a href=&#34;http://www.slideshare.net/billkarwin&#34;&gt;Karwin&lt;/a&gt; yang sangat membantu.&lt;/p&gt;

&lt;p&gt;Beliau menjelaskan empat metode penyimpanan graf pada database relasional
dan membandingkan setiap metode.&lt;/p&gt;

&lt;iframe allowfullscreen=&#34;&#34; frameborder=&#34;0&#34; height=&#34;485&#34; marginheight=&#34;0&#34; marginwidth=&#34;0&#34; scrolling=&#34;no&#34; src=&#34;//www.slideshare.net/slideshow/embed_code/key/tI9jfoqFHAcQdn?startSlide=5&#34; style=&#34;border-width: 1px; border: 1px solid #ccc; margin-bottom: 5px; max-width: 100%;&#34; width=&#34;100%&#34;&gt;
&lt;/iframe&gt;

&lt;p&gt;Hasil perbandingannya metode &lt;em&gt;Closeure Table&lt;/em&gt; terpilih sebagai cara yang termudah. Termudah yang saya maksudkan di sini adalah mudah untuk melakukan &lt;em&gt;Query&lt;/em&gt; CRUD &lt;em&gt;(Create, Read, Update, Delete)&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Masing-masing metode memang memiliki kelebihan dan kekurangan.&lt;/p&gt;

&lt;p&gt;Contohnya metode &lt;em&gt;Path Enumerattion&lt;/em&gt;, bagus digunakan untuk membuat &lt;em&gt;breadcrums. Sedangkan Adjacency List&lt;/em&gt; tidak bagus digunakan untuk graf yang punya banyak &lt;em&gt;node.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;metode-closure-table&#34;&gt;Metode &lt;em&gt;Closure Table&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;Mari kita pelajari cara penyimpanan graf dengan metode &lt;em&gt;Closure Table&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Misalkan, kita memiliki graf seperti pada gambar ini.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-dWgknbxEzmU/WCLzqncwFzI/AAAAAAAADag/6wDc7P2eC7IwFY3dOdmTXHpcaT-woBqFQCK4B/s1600/graf%2Bberarah%2B-%2Bpetanikode.jpg&#34;&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-dWgknbxEzmU/WCLzqncwFzI/AAAAAAAADag/6wDc7P2eC7IwFY3dOdmTXHpcaT-woBqFQCK4B/s1600/graf%2Bberarah%2B-%2Bpetanikode.jpg&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Anggaplah semua titik-titik pada graf tersebut merupakan sebuah kota yang saling terhubung. Kemudian, yang kita harus lakukan adalah membuat tabel untuk menyimpan kota (titik) dan jalan yang menghubungkannya.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-rCy4_zOhkfE/WDmI8o6D06I/AAAAAAAADdY/cttgx1o55l4VGyGvr-toyHGhEk8aP1qtACK4B/s1600/Relasi%2BTabel%2BGraf.png&#34;&gt;&lt;img src=&#34;https://1.bp.blogspot.com/-rCy4_zOhkfE/WDmI8o6D06I/AAAAAAAADdY/cttgx1o55l4VGyGvr-toyHGhEk8aP1qtACK4B/s1600/Relasi%2BTabel%2BGraf.png&#34; alt=&#34;Diagram Relasi Tabel Graf&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Relasi yang akan tercipta adalah &lt;em&gt;Many-to-Many&lt;/em&gt;. Kolom &lt;code&gt;kota_asal&lt;/code&gt; dan &lt;code&gt;kota_tujuan&lt;/code&gt; akan menyimpan &lt;code&gt;id&lt;/code&gt; dari &lt;em&gt;kota&lt;/em&gt;. Kemudian kolom &lt;code&gt;panjang&lt;/code&gt; untuk menyimpan panjang jalannya.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;create table kota(
    id int,
    nama char,
    PRIMARY KEY(id)
);


create table jalan(
    kota_asal int,
    kota_tujuan int,
    panjang int,
    FOREIGN KEY(kota_asal) REFERENCES kota(id),
    FOREIGN KEY(kota_tujuan) REFERENCES kota(id)
);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sekarang kita sudah punya dua tabel yang saling berelasi.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-MpXwEwCU8Ek/WDmLo9QF4rI/AAAAAAAADdk/UsgJ7jVgr8IYkYm1GL7Vs2w-mTxw55HPACK4B/s1600/Relasi%2Btabel%2Bgraf%2Bdi%2Bdatabase%2Bmysql.png&#34;&gt;&lt;img src=&#34;https://4.bp.blogspot.com/-MpXwEwCU8Ek/WDmLo9QF4rI/AAAAAAAADdk/UsgJ7jVgr8IYkYm1GL7Vs2w-mTxw55HPACK4B/s1600/Relasi%2Btabel%2Bgraf%2Bdi%2Bdatabase%2Bmysql.png&#34; alt=&#34;Relasi tabel database Graf&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sekarang kita coba menambahkan semua titik pada graf:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;INSERT INTO kota (id,nama) VALUE (1,&#39;A&#39;);
INSERT INTO kota (id,nama) VALUE (2,&#39;B&#39;);
INSERT INTO kota (id,nama) VALUE (3,&#39;C&#39;);
INSERT INTO kota (id,nama) VALUE (4,&#39;D&#39;);
INSERT INTO kota (id,nama) VALUE (5,&#39;E&#39;);
INSERT INTO kota (id,nama) VALUE (6,&#39;F&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Selanjutnya menambahkan data jalan:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;INSERT INTO jalan (kota_asal,kota_tujuan,panjang) VALUES (1,2,14);
INSERT INTO jalan (kota_asal,kota_tujuan,panjang) VALUES (1,3,10);
INSERT INTO jalan (kota_asal,kota_tujuan,panjang) VALUES (2,3,6);
INSERT INTO jalan (kota_asal,kota_tujuan,panjang) VALUES (2,4,18);
INSERT INTO jalan (kota_asal,kota_tujuan,panjang) VALUES (3,4,7);
INSERT INTO jalan (kota_asal,kota_tujuan,panjang) VALUES (4,3,9);
INSERT INTO jalan (kota_asal,kota_tujuan,panjang) VALUES (5,6,8);
INSERT INTO jalan (kota_asal,kota_tujuan,panjang) VALUES (6,4,11);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Panjang jalan saya tentukan sendiri. Sekarang semuanya sudah masuk. Mari kita coba-coba melakukan &lt;em&gt;query&lt;/em&gt; yang lain. Misalnya, berapakah panjang jalan dari kota B menuju kota D?&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT panjang FROM `jalan` WHERE kota_asal=2 AND kota_tujuan=4
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasilnya:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;+---------+
| panjang |
+---------+
|      18 |
+---------+
1 row in set (0,00 sec)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sebenarnya ada dua jalan yang bisa dilewati dari kota B menuju kota D, yaitu &lt;code&gt;B-&amp;gt;D&lt;/code&gt; dan &lt;code&gt;B-&amp;gt;C-&amp;gt;D&lt;/code&gt;. Akan tetapi &lt;em&gt;query&lt;/em&gt; tersebut hanya memilih jalur &lt;code&gt;B-&amp;gt;D&lt;/code&gt; saja.&lt;/p&gt;

&lt;p&gt;Untuk query yang lebih rumit, mungkin kita bisa lakukan dengan membuat program. Misalnya, program untuk menentukan jalur terpedek.&lt;/p&gt;

&lt;p&gt;File SQL contoh di atas dapat anda download di: &lt;a href=&#34;https://gist.github.com/ardianta/7ae139c95570a35d3af9dc40b70f18db&#34;&gt;gist.github.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Begitulah cara termudah menyimpan graf pada database relasional menurut bapak Karwin.&lt;/p&gt;

&lt;p&gt;Metode &lt;em&gt;Closure Table&lt;/em&gt; memang yang termudah, namun pasti memiliki kekurangan.&lt;/p&gt;

&lt;p&gt;Bagaimana menurutmu?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tipe Data Datetime dan Timestamp di MySQL</title>
      <link>https://www.petanikode.com/tipe-data-datetime-dan-timestamp-di-mysql/</link>
      <pubDate>Mon, 07 Mar 2016 17:12:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/tipe-data-datetime-dan-timestamp-di-mysql/</guid>
      <description>&lt;p&gt;Beberapa hari yang lalu, saya melakukan downgrade sistem operasi, dari versi &lt;code&gt;15.10&lt;/code&gt; ke &lt;code&gt;14.04&lt;/code&gt;. Secara otomatis, versi server MySQL-nya juga ikut di-downgrade, dari versi &lt;code&gt;5.6.27&lt;/code&gt; ke  versi &lt;code&gt;5.5.47&lt;/code&gt;. Pada versi yang lebih lama (&lt;code&gt;5.5.47&lt;/code&gt;), tipe data &lt;i&gt;Datetime&lt;/i&gt; dengan nilai &lt;i&gt;default current_timestamp&lt;/i&gt; tidak diterima. Ketika saya mengimpor dari cadangan database, terjadi error.&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;bash sh&#34;&gt;$ mysql -u root -p &amp;lt; db_27_feb_2016.sql  &lt;br /&gt;Enter password:  &lt;br /&gt;ERROR 1067 (42000) at line 41: Invalid default value for &amp;lsquo;tanggal&amp;rsquo;&lt;/code&gt;&lt;/pre&gt;Saya pun mencoba menelusuri ke baris 41 dari file SQL cadangan. Ternyata benar, di sana terdapat tipe data &lt;i&gt;datetime&lt;/i&gt; dengan nilai &lt;i&gt;default current_timestamp&lt;/i&gt;.&lt;br /&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-l7VxSj8eYiM/Vt08p3RPCoI/AAAAAAAAChw/oRkXWqm08VE/s1600/Tipe%2Bdata%2Bdatetime%2Bdengan%2Bnilai%2Bdefault%2Btimestamp.png&#34; imageanchor=&#34;1&#34;&gt;&lt;img border=&#34;0&#34; src=&#34;https://2.bp.blogspot.com/-l7VxSj8eYiM/Vt08p3RPCoI/AAAAAAAAChw/oRkXWqm08VE/s1600/Tipe%2Bdata%2Bdatetime%2Bdengan%2Bnilai%2Bdefault%2Btimestamp.png&#34; /&gt;&lt;/a&gt;&lt;br /&gt;Berdasarkan tangkapan layar di atas, di sana terdapat kode SQL untuk membuat tabel artikel. Tabel ini merupakan tabel untuk proyek &lt;a href=&#34;https://github.com/petanikode/praktikum-blog&#34; target=&#34;_blank&#34;&gt;praktikum blog&lt;/a&gt; yang saya buat dulu. Saya mengganti semua tipe data &lt;i&gt;datetime&lt;/i&gt; yang bernilai &lt;i&gt;default current_timestamp&lt;/i&gt; ke &lt;i&gt;timestamp&lt;/i&gt; dan mencoba mengimpor lagi.&lt;code class=&#34;bash&#34;&gt; &lt;/code&gt;&lt;br /&gt;&lt;pre&gt;&lt;code class=&#34;bash&#34;&gt;ERROR 1064 (42000) at line 1866: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &amp;lsquo;STATS_PERSISTENT=0&amp;rsquo; at line 11&lt;/code&gt;&lt;/pre&gt;Fuh!, Error apa lagi ini? Sepertinya, ini masalah perbedaan versi saja. Tapi yang penting, sebagian dari database penting yang saya butuhkan sudah diimpor.&lt;br /&gt;&lt;br /&gt;Sepertinya ini sebuah kesalahan saya yang tidak memperhatikan tipe data dan nilai &lt;i&gt;default&lt;/i&gt; saat membuat database dulu. Jadi, menurut saya, sebaiknya tidak menggunakan nilai &lt;i&gt;default current_timestamp&lt;/i&gt; pada tipe data &lt;i&gt;datetime&lt;/i&gt; dan tipe data &lt;i&gt;datetime&lt;/i&gt; cocoknya digunakan untuk menyimpan data seperti tanggal lahir yang datanya diinputkan secara manual. Sementara untuk data yang tidak diinputkan langsung seperti tanggal log, tanggal terbit artikel, tanggal status, dsb sebaiknya menggunakan tipe data &lt;i&gt;timestamp&lt;/i&gt; dengan nilai default &lt;i&gt;current_timestamp&lt;/i&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tutorial Dasar SQLite di Linux</title>
      <link>https://www.petanikode.com/tutorial-dasar-sqlite-di-linux/</link>
      <pubDate>Fri, 13 Nov 2015 23:03:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/tutorial-dasar-sqlite-di-linux/</guid>
      <description>

&lt;p&gt;SQLite merupakan sebuah &lt;em&gt;Relational Database Management System&lt;/em&gt; (RDMS)
yang tidak memerlukan server untuk beroperasi. Bisa dibilang, SQLite adalah
database &lt;em&gt;portable&lt;/em&gt; yang bisa digunakan tanpa jaringan. Inilah yang membuatnya banyak digunakan
dalam berbagai aplikasi luring &lt;em&gt;(offline)&lt;/em&gt; seperti aplikasi &lt;a href=&#34;https://www.petanikode.com/topik/android&#34;&gt;Android&lt;/a&gt;, aplikasi
&lt;a href=&#34;https://www.petanikode.com/kategori/desktop&#34;&gt;desktop&lt;/a&gt;, &lt;a href=&#34;https://www.petanikode.com/topik/java&#34;&gt;java&lt;/a&gt;, VB.net, Game, dsb.&lt;/p&gt;

&lt;p&gt;Pada kesempatan ini, kita akan belajar dasar-dsar SQLite dengan menggunakan Linux.&lt;/p&gt;

&lt;h2 id=&#34;instalasi-sqlite-di-linux&#34;&gt;Instalasi SQLite di Linux&lt;/h2&gt;

&lt;p&gt;Pertama kita perlu menginstal SQLite-nya dulu, silahkan ketik perintah berikut.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install sqlite3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;659&#34;
    height=&#34;451&#34;
    alt=&#34;instalasi+SQLite+di+ubuntu+15.04.png&#34;
    src=&#34;http://2.bp.blogspot.com/-Slt2BbZRZmU/Vhy9Z_zueQI/AAAAAAAACAE/IeP3gnLpQJI/s1600/instalasi%2BSQLite%2Bdi%2Bubuntu%2B15.04.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;h2 id=&#34;membuat-database&#34;&gt;Membuat Database&lt;/h2&gt;

&lt;p&gt;Pembuatan database dapat dilakukan dengan perintah &lt;code&gt;sqlite3 nama.db&lt;/code&gt;. Ekstensi
database SQLite menggunakan &lt;code&gt;.db&lt;/code&gt;. Misalkan, kita akan membuat database
bernama &lt;code&gt;petani.db&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sqlite3 petani.db
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Maka kita akan dibawa masuk ke &lt;em&gt;console&lt;/em&gt;/&lt;em&gt;shell&lt;/em&gt; SQLite.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;655&#34;
    height=&#34;141&#34;
    alt=&#34;membuat+database+SQLite.png&#34;
    src=&#34;https://1.bp.blogspot.com/--LR50xki2ZE/WKwNKA79lpI/AAAAAAAAEHw/w1hUIJL8pZ0dcRpfyDMr2tl6ccEUWNLNQCPcB/s1600/membuat%2Bdatabase%2BSQLite.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;h2 id=&#34;membuat-tabel&#34;&gt;Membuat Tabel&lt;/h2&gt;

&lt;p&gt;Selanjutnya kita akan membuat tabel &lt;em&gt;anggota&lt;/em&gt; dengan &lt;em&gt;Query&lt;/em&gt; SQL berikut ini.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;create table anggota(
    id integer,
    nama varchar(20),
    alamat varchar(32)
);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Kalau tidak ada error, berarti pembuatan tabel berhasil.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;655&#34;
    height=&#34;157&#34;
    alt=&#34;membuat+tabel+anggota+di+database+petani.png&#34;
    src=&#34;https://1.bp.blogspot.com/-adf7TEp47BA/WKwOQoAPdOI/AAAAAAAAEII/WbVQG7pgYAASsowr1zMtQRDcYrUfjgu8gCPcB/s1600/membuat%2Btabel%2Banggota%2Bdi%2Bdatabase%2Bpetani.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;h2 id=&#34;mengisi-data-ke-tabel&#34;&gt;Mengisi Data ke Tabel&lt;/h2&gt;

&lt;p&gt;Sekarang kita akan coba mengisi 5 data ke tabel. Silahkan ketik perintah SQL
berikut di dalam &lt;em&gt;shell&lt;/em&gt; SQLite.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;insert into anggota values(1,&#39;Madun&#39;,&#39;Praya&#39;);
insert into anggota values(2,&#39;Sahdan&#39;,&#39;Cakra&#39;);
insert into anggota values(3,&#39;Iskandar&#39;,&#39;Sweta&#39;);
insert into anggota values(4,&#39;Zulfikar&#39;,&#39;Gunung Sari&#39;);
insert into anggota values(5,&#39;Samsudin&#39;,&#39;Narmada&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Kalau tidak ada error, berarti berhasil.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;655&#34;
    height=&#34;125&#34;
    alt=&#34;Insert+data+ke+tabel+di+SQLite.png&#34;
    src=&#34;https://3.bp.blogspot.com/-63HC2t12cdU/WKwP66dy0oI/AAAAAAAAEIk/a_F5GXqPWYggK-ToR2Yc4vM-mjmflJ6jwCPcB/s1600/Insert%2Bdata%2Bke%2Btabel%2Bdi%2BSQLite.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;h2 id=&#34;melihat-isi-tabel&#34;&gt;Melihat isi Tabel&lt;/h2&gt;

&lt;p&gt;Perintah SQL untuk melihat isi tabel adalah &lt;code&gt;select * from nama_tabel&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;sqlite&amp;gt; select * from anggota;
1|Madun|Praya
2|Sahdan|Cakra
3|Iskandar|Sweta
4|Zulfikar|Gunung Sari
5|Samsudin|Narmada
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;keluar-dari-shell-sqlite&#34;&gt;Keluar dari Shell SQLite&lt;/h2&gt;

&lt;p&gt;Tekan &lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;D&lt;/code&gt; untuk keluar dari &lt;em&gt;shell&lt;/em&gt; SQLite.&lt;/p&gt;

&lt;h2 id=&#34;membuka-kembali-database&#34;&gt;Membuka Kembali Database&lt;/h2&gt;

&lt;p&gt;Saat kita membuat database tadi, SQLite juga akan membuat sebuah file
bernama &lt;code&gt;petani.db&lt;/code&gt;. File ini menyimpan tabel dan data yang baru saja kita buat.
Untuk membuka kembali database-nya, kita tinggal ketik perintah seperti pembuatan
database tadi.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sqlite3 petani.db
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;penutup&#34;&gt;Penutup&lt;/h2&gt;

&lt;p&gt;Sekian tutorial SQLite di Linux ini. Mudah-mudahan bermanfaat. Terima kasih
sudah membaca sampai akhir. Tutorial lebih lanjut, bisa dipelajari di
&lt;a href=&#34;https://www.sqlite.org/docs.html&#34;&gt;dokumentasinya SQLite&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Query MySQL untuk Menentukan Pemenang</title>
      <link>https://www.petanikode.com/query-mysql-untuk-menentukan-pemenang/</link>
      <pubDate>Mon, 03 Aug 2015 05:53:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/query-mysql-untuk-menentukan-pemenang/</guid>
      <description>&lt;p&gt;&lt;amp-img
    width=&#34;672&#34;
    height=&#34;397&#34;
    alt=&#34;Query-mysql-untuk-menentukan-pemenang-pada-e-voting-system.png&#34;
    src=&#34;http://1.bp.blogspot.com/-QG4Z1jestZs/Vb6MEZwnejI/AAAAAAAABpY/9Z6O4YtwjRw/s1600/Query-mysql-untuk-menentukan-pemenang-pada-e-voting-system.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Saya sedang mengembangkan aplikasi web untuk pemilihan ketua BEM dengan
framework CodeIgniter. Aplikasi ini hampir selesai. Namun, ada satu hal
yang masih membuat saya bingung, yaitu penentuan pemenang setelah pemilihan selesai.&lt;/p&gt;

&lt;p&gt;Query pertama&amp;ndash;menurut saya sesuai&amp;ndash;yang didapatkan dari pencarian di google adalah sebagai berikut:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT
    calon_idcalon,
    calon.nama AS nama,
    calon.foto AS foto,
    COUNT(calon_idcalon) AS jumlah
FROM
    kotak_suara,
    calon
WHERE
    calon_idcalon = calon.nim
GROUP BY calon_idcalon
ORDER BY jumlah
DESC LIMIT 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil yang didapatkan dari query tersebut, adalah satu orang pemenag dengan suara terbanyak. Tapi, bagaiaman kalau ada dua orang yang memiliki sura terbanyak. Kalau menggunakan query di atas, hasilnya tetap satu orang.&lt;/p&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;p&gt;Akhirnya, saya diberikan query manjur dari salah satu member &lt;a href=&#34;https://www.facebook.com/groups/mysql.indonesia/permalink/10153422674235996/&#34;&gt;group MySQL Indonesia&lt;/a&gt;. Query sakti ini dapat menampilkan semua pemenang dengan perolehan suara yang sama.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sql&#34;&gt;SELECT
    calon_idcalon,
    calon.nama AS nama,
    calon.foto AS foto,
    COUNT(calon_idcalon) AS jumlah
FROM
    kotak_suara,
    calon
WHERE
    calon_idcalon = calon.nim
GROUP BY
    calon_idcalon
HAVING
    COUNT( calon_idcalon) &amp;gt;= (
        SELECT COUNT( calon_idcalon ) AS SUM
        FROM kotak_suara
        GROUP BY calon_idcalon
        ORDER BY SUM
        DESC LIMIT 1
    )
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;991&#34;
    height=&#34;503&#34;
    alt=&#34;Pemenang+yang+terpilih+dari+hasil+query.png&#34;
    src=&#34;http://3.bp.blogspot.com/-f9AQWcJ4J9s/Vb6PHq3oXpI/AAAAAAAABpk/WFAKYTdT-7w/s1600/Pemenang%2Byang%2Bterpilih%2Bdari%2Bhasil%2Bquery.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Instalasi MongoDB di Linux</title>
      <link>https://www.petanikode.com/instalasi-mongodb-di-linux/</link>
      <pubDate>Mon, 09 Mar 2015 08:15:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/instalasi-mongodb-di-linux/</guid>
      <description>&lt;p&gt;MongoDB adalah salah satu jenis basis data NoSQL. basis data ini berorientasi
dokumen. MongoDB dibuat dengan bahasa pemrograman C++. MongoDB memungkinkan
kita untuk menyimpan dokumen berbasis JSON dengan sekema dinamis secara sederhana.&lt;/p&gt;

&lt;p&gt;MongoDB tersedia dalam berbagai &lt;em&gt;platform&lt;/em&gt; seperti Windows, Linux, Solaris, dan Mac.
MongoDB dapat diunduh di &lt;a href=&#34;http://www.mongodb.org/downloads&#34;&gt;situs resminya&lt;/a&gt;.
Pada tulisan ini, kita akan menginstal MongoDB pada Ubuntu 14.10 melalui &lt;code&gt;apt&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;p&gt;Kita mulai saja, pertama-tama, untuk memastikan paket MongoDB tersedia di
repositori, kita lakukan pencarian dengan perintah:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ apt-cache search mongodb

...
mongodb - object/document-oriented database (metapackage)
mongodb-clients - object/document-oriented database (client apps)
mongodb-server - object/document-oriented database (server package)
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pada hasil pencarian paket bernama &lt;code&gt;mongodb&lt;/code&gt;, &lt;code&gt;mongodb-clients&lt;/code&gt;, dan &lt;code&gt;mongodb-server&lt;/code&gt;.
Kita akan menginstal paket &lt;code&gt;mongodb&lt;/code&gt;, karena, &lt;code&gt;mongodb-server&lt;/code&gt; dan &lt;code&gt;mongodb-clients&lt;/code&gt;
 sudah termasuk di dalamnya.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install mongodb
[sudo] password for ardianta:
Reading package lists... Done
Building dependency tree
Reading state information... Done
The following extra packages will be installed:
libboost-program-options1.55.0 libboost-thread1.55.0 libgoogle-perftools4
libsnappy1 libtcmalloc-minimal4 libyaml-cpp0.5 mongodb-clients
mongodb-server
The following NEW packages will be installed:
libboost-program-options1.55.0 libboost-thread1.55.0 libgoogle-perftools4
libsnappy1 libtcmalloc-minimal4 libyaml-cpp0.5 mongodb mongodb-clients
mongodb-server
0 upgraded, 9 newly installed, 0 to remove and 80 not upgraded.
Need to get 54,9 MB of archives.
After this operation, 182 MB of additional disk space will be used.
Do you want to continue? [Y/n] y
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ukuran paket yang diunduh lumayan besar, 54,9 MB.
Setelah berhasil tersintal, cobalah periksa, versi berapa yang terinstal.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mongo --version
MongoDB shell version: 2.6.3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Versi yang saya instal ternyata versi &lt;code&gt;2.6.3&lt;/code&gt;. Versi terbaru saat ini adalah versi &lt;code&gt;3.0.0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;739&#34;
    height=&#34;452&#34;
    alt=&#34;uji+coba+mongodb+di+ubuntu.png&#34;
    src=&#34;http://3.bp.blogspot.com/-tIvgX8MvGoY/VPw38Nw15sI/AAAAAAAABf8/pjtaeojcUmA/s1600/uji%2Bcoba%2Bmongodb%2Bdi%2Bubuntu.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>