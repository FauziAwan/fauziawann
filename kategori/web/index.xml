<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web on Petani Kode</title>
    <link>http://petanikode.com/kategori/web/index.xml</link>
    <description>Recent content in Web on Petani Kode</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>id-id</language>
    <copyright>Copyright (c) 2017, Petani Kode; all rights reserved.</copyright>
    <atom:link href="http://petanikode.com/kategori/web/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Animasi Gambar dengan Javascript</title>
      <link>http://petanikode.com/2017/02/animasi-gambar-dengan-javascript/</link>
      <pubDate>Tue, 21 Feb 2017 08:53:16 +0800</pubDate>
      
      <guid>http://petanikode.com/2017/02/animasi-gambar-dengan-javascript/</guid>
      <description>

&lt;p&gt;Saya sempat mengira, kalau animasi stiker di facebook menggunakan gif,
ternyata bukan. Animasi tersebut menggunakan javascript dengan mengubah
posisi backgound.&lt;/p&gt;

&lt;p&gt;Coba saja klik kanan pada stikernya, kemudian pilih &lt;a href=&#34;http://petanikode.com/2016/01/7-manfaat-inspect-element-bagi-web-developer/&#34;&gt;inspect element&lt;/a&gt;,
maka kita akan mendapatkan kode seperti ini.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;980&#34;
    height=&#34;312&#34;
    alt=&#34;inspect+element+stiker+facebook.png&#34;
    src=&#34;https://4.bp.blogspot.com/-SQfVn7m_aEc/WKuRWlddqjI/AAAAAAAAEFE/zhbfkLT-7tgQByj-tSOYzJz4rXntrpmbQCPcB/s1600/inspect%2Belement%2Bstiker%2Bfacebook.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Terlihat pada kode di atas, stikernya menggunakan backgound image.
Ketika kita membuka backgound tersebut, kita akan mendapatkan gambar seperti
berikut ini.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;720&#34;
    height=&#34;380&#34;
    alt=&#34;animasi-gambar-dengan-javascript.jpg&#34;
    src=&#34;https://2.bp.blogspot.com/-JaGQH_Fd7IA/WKuP-C-aNaI/AAAAAAAAEEs/5ZaEEc3eyIAk-gX28-t60Ea8GMDd6r9IACPcB/s1600/animasi-gambar-dengan-javascript.jpg&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Sekarang, bagaimana kalau kita coba membuatnya.&lt;/p&gt;

&lt;h2 id=&#34;kode-html&#34;&gt;Kode HTML&lt;/h2&gt;

&lt;p&gt;Buat kode HTML untuk menampilkan stikernya.&lt;/p&gt;

&lt;p&gt;&lt;amp-iframe width=&#34;600&#34; height=&#34;440&#34;
    layout=&#34;responsive&#34;
    sandbox=&#34;allow-forms allow-scripts allow-same-origin allow-modals allow-popups&#34;
    frameborder=&#34;0&#34;
    src=&#34;https://cdn.rawgit.com/petanikode/cdn-petanikode/3217e023/amp-gist.html?url=https://gist.github.com/ardianta/932578dbdaddd72cf36289923892101c&#34;&gt;
&lt;/amp-iframe&gt;&lt;/p&gt;

&lt;h2 id=&#34;kode-css&#34;&gt;Kode CSS&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-css&#34;&gt;.sticker {
    position: relative;
    height: 80px;
    width: 80px;
    background: url(burung.png);
    background-size: 320px 320px;
    cursor: default;
    background-position: 0px 0px;
    image-rendering: -webkit-optimize-contrast;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pada kode CSS di atas, terdapat background bernama &lt;code&gt;burung.png&lt;/code&gt;. Silahkan download
&lt;a href=&#34;https://2.bp.blogspot.com/-BBx70tsKzTQ/WKuUWrml-lI/AAAAAAAAEFk/EhAj_uISOV85dK1GHt1TuikfN2zAC9kVACPcB/s1600/burung.png&#34;&gt;di sini&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;h2 id=&#34;javascript&#34;&gt;Javascript&lt;/h2&gt;

&lt;p&gt;Javascript fungsinya untuk membuat animasi, mengubah posisi background.&lt;/p&gt;

&lt;p&gt;&lt;amp-iframe width=&#34;600&#34; height=&#34;610&#34;
    layout=&#34;responsive&#34;
    sandbox=&#34;allow-forms allow-scripts allow-same-origin allow-modals allow-popups&#34;
    frameborder=&#34;0&#34;
    src=&#34;https://cdn.rawgit.com/petanikode/cdn-petanikode/3217e023/amp-gist.html?url=https://gist.github.com/ardianta/abb5cf78e609202e614c34cc6fa6bad9&#34;&gt;
&lt;/amp-iframe&gt;&lt;/p&gt;

&lt;p&gt;Pada kode di atas kita menggunakan fungsi &lt;code&gt;setInterval()&lt;/code&gt; untuk melakukan animasi
dengan waktu 100 milidetik. Setiap rentang waktu tersebut, posisi background
akan berubah sesuai dengan nilai &lt;code&gt;x&lt;/code&gt; dan &lt;code&gt;y&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;demo&#34;&gt;Demo&lt;/h2&gt;

&lt;p&gt;&lt;amp-iframe width=&#34;600&#34; height=&#34;350&#34;
    layout=&#34;responsive&#34;
    sandbox=&#34;allow-forms allow-scripts allow-same-origin allow-modals allow-popups&#34;
    frameborder=&#34;0&#34;
    src=&#34;https://codepen.io/ardianta/embed/BpXoyz/?height=300&amp;theme-id=16572&amp;default-tab=result&amp;embed-version=2&#34;&gt;
&lt;/amp-iframe&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cara Menggunakan Dompdf di Codeigniter</title>
      <link>http://petanikode.com/2017/02/cara-menggunakan-dompdf-di-codeigniter/</link>
      <pubDate>Sun, 19 Feb 2017 16:48:58 +0800</pubDate>
      
      <guid>http://petanikode.com/2017/02/cara-menggunakan-dompdf-di-codeigniter/</guid>
      <description>

&lt;p&gt;Dompdf merupakan salah satu pustaka PHP untuk membuat PDF. Dompdf membuat
PDF dari HTML. Kita juga bisa menggunakan CSS di dalamnya. Saat ini Dompdf
mendukung CSS versi 2.1.&lt;/p&gt;

&lt;p&gt;Untuk menggunakan Dompdf di &lt;a href=&#34;http://petanikode.com/topik/codeigniter&#34;&gt;Codeigniter&lt;/a&gt;, silahkan ikuti langkah-langkah
berikut ini.&lt;/p&gt;

&lt;h2 id=&#34;1-aktifkan-autoload-composer&#34;&gt;1. Aktifkan Autoload Composer&lt;/h2&gt;

&lt;p&gt;Kita akan menggunakan &lt;a href=&#34;http://petanikode.com/topik/composer&#34;&gt;Composer&lt;/a&gt; untuk menginstal Dompdf di proyek Codeigniter.
Silahkan buka file &lt;code&gt;application/config/config.php&lt;/code&gt;, kemudian isi bagian &lt;em&gt;autoload&lt;/em&gt;
Composer seperti ini.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$config[&#39;composer_autoload&#39;] = &amp;quot;vendor/autoload.php&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;2-instal-dompdf&#34;&gt;2. Instal Dompdf&lt;/h2&gt;

&lt;p&gt;Setelah itu, sekarang kita instal &lt;code&gt;dompdf&lt;/code&gt; dengan perintah&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;composer require dompdf/dompdf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;767&#34;
    height=&#34;397&#34;
    alt=&#34;Instal+dompdf+di+proyek+codeigniter.png&#34;
    src=&#34;https://4.bp.blogspot.com/-s_nZmMzBxw4/WKloKD7bnsI/AAAAAAAAEDM/i43FYKNjq0UIDMEEpupojCfzFnekvkQdgCPcB/s1600/Instal%2Bdompdf%2Bdi%2Bproyek%2Bcodeigniter.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Baca juga: &lt;a href=&#34;http://petanikode.com/2016/12/cara-menggunakan-composer-pada-codeigniter/&#34;&gt;Cara Menggunakan Composer pada CodeIgniter&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;3-membuat-pustaka-sendiri&#34;&gt;3. Membuat Pustaka Sendiri&lt;/h2&gt;

&lt;p&gt;Agar lebih praktis, kita buat saja pustaka sendiri. Silahkan buat file baru
di direktori &lt;code&gt;application/libraries&lt;/code&gt; dengan nama &lt;code&gt;pdf.php&lt;/code&gt;. Isinya seperti berikut
ini.&lt;/p&gt;

&lt;p&gt;&lt;amp-iframe width=&#34;600&#34; height=&#34;1560&#34;
    layout=&#34;responsive&#34;
    sandbox=&#34;allow-forms allow-scripts allow-same-origin allow-modals allow-popups&#34;
    frameborder=&#34;0&#34;
    src=&#34;https://cdn.rawgit.com/petanikode/cdn-petanikode/3217e023/amp-gist.html?url=https://gist.github.com/ardianta/f4bfa696ca9a040677e87f2cde4d5887&#34;&gt;
&lt;/amp-iframe&gt;&lt;/p&gt;

&lt;p&gt;Kode di atas merupakan &lt;em&gt;class exstends&lt;/em&gt; dari &lt;em&gt;class&lt;/em&gt; Dompdf.&lt;/p&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;h2 id=&#34;4-membuat-controller&#34;&gt;4. Membuat Controller&lt;/h2&gt;

&lt;p&gt;Buat sebuah fungsi di dalam &lt;em&gt;Controller&lt;/em&gt; untuk menggunakan pustaka yang baru
saja kita buat.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;public function laporan_pdf(){

    $data = array(
        &amp;quot;dataku&amp;quot; =&amp;gt; array(
            &amp;quot;nama&amp;quot; =&amp;gt; &amp;quot;Petani Kode&amp;quot;,
            &amp;quot;url&amp;quot; =&amp;gt; &amp;quot;http://petanikode.com&amp;quot;
        )
    );

    $this-&amp;gt;load-&amp;gt;library(&#39;pdf&#39;);
    $this-&amp;gt;pdf-&amp;gt;setPaper(&#39;A4&#39;, &#39;potrait&#39;);
    $this-&amp;gt;pdf-&amp;gt;filename = &amp;quot;laporan-petanikode.pdf&amp;quot;;
    $this-&amp;gt;pdf-&amp;gt;load_view(&#39;laporan_pdf&#39;, $data);


}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;File view yang di-load bernama &lt;code&gt;laporan_pdf&lt;/code&gt;, berarti kita harus membuat
file view bernama &lt;code&gt;laporan_pdf.php&lt;/code&gt; di &lt;code&gt;application/views&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;5-membuat-view&#34;&gt;5. Membuat View&lt;/h2&gt;

&lt;p&gt;File: &lt;code&gt;application/views/laporan_pdf.php&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;pre&amp;gt;&amp;lt;?php print_r($dataku); ?&amp;gt;&amp;lt;/pre&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;6-percobaan&#34;&gt;6. Percobaan&lt;/h2&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;1123&#34;
    height=&#34;583&#34;
    alt=&#34;laporan-pdf-codeigniter-dengan-dompdf.png&#34;
    src=&#34;https://3.bp.blogspot.com/-kboJqCRNU4o/WKmUXJshcRI/AAAAAAAAEDw/EN3ddQNV6KAd7i8Am8rf2uyIluTFD-0eQCPcB/s1600/laporan-pdf-codeigniter-dengan-dompdf.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Begitulah cara menggunakan Dompdf di Codeigniter. Selebihnya anda bisa bereksperiman
sendiri. Kalau masih belum jelas, bisa cek repositori ini &lt;a href=&#34;https://github.com/ardianta/codeigniter-dompdf&#34;&gt;codeigniter-dompdf&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cara Membuat Halaman Github untuk Proyek atau Repositori</title>
      <link>http://petanikode.com/2017/02/cara-membuat-halaman-github-untuk-proyek-atau-repositori/</link>
      <pubDate>Mon, 06 Feb 2017 07:15:11 +0800</pubDate>
      
      <guid>http://petanikode.com/2017/02/cara-membuat-halaman-github-untuk-proyek-atau-repositori/</guid>
      <description>

&lt;p&gt;Pada tulisan sebelumnya, saya pernah membahas tentang &lt;a href=&#34;http://petanikode.com/2017/01/cara-membuat-halaman-github-kurang-dari-10-menit/&#34;&gt;cara membuat halaman
Github untuk profil individu dan organisasi&lt;/a&gt;.
Nah, kali ini kita akan membuat halaman github untuk proyek atau repositori.&lt;/p&gt;

&lt;p&gt;Jadi sebenarnya, setiap proyek atau respositori di Github itu bisa dijadikan
halaman Github &lt;em&gt;(Github Pages)&lt;/em&gt;. Pastikan di dalam proyek berisi file web statis
seperti HTML, CSS, dan Javascript.&lt;/p&gt;

&lt;h2 id=&#34;membuat-repositori&#34;&gt;Membuat repositori&lt;/h2&gt;

&lt;p&gt;Buatlah repositori dengan nama apa saja, kemudian di dalamnya berisi file web statis.
Setelah itu, upload ke github.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git init
git add .
git commit -m &amp;quot;commit pertama&amp;quot;
git add remote origin https://github.com/{username}/{nama-repo}
git push origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;pengaturan-repositori&#34;&gt;Pengaturan Repositori&lt;/h2&gt;

&lt;p&gt;Klik tombol &lt;em&gt;Settings&lt;/em&gt; pada repositori untuk masuk ke pengaturan repositori,
kemudian gulung ke bawah sampai menemukan bagian &lt;em&gt;Github Pages&lt;/em&gt;. Lalu pada
&lt;em&gt;Source&lt;/em&gt;, pilih cabang &lt;em&gt;(branch)&lt;/em&gt; yang akan menjadi halaman Github. Kemudian simpan.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
width=&#34;748&#34;
height=&#34;462&#34;
alt=&#34;Membuat halaman github untuk repositori.png&#34;
src=&#34;https://1.bp.blogspot.com/-wfzIqx9du78/WJe3rJKMs1I/AAAAAAAADxg/qleBmhPbOEggZ9EnYU_6-4hH_eIYYkC7gCPcB/s1600/Membuat%2Bhalaman%2Bgithub%2Buntuk%2Brepositori.png&#34;
layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Sebagai contoh, saya menggunakan cabang &lt;code&gt;master&lt;/code&gt;. Sebenarnya tidak disarankan
menggunakan cabang ini untuk halaman github. Kita disarankan menggunakan cabang lain, tapi
harus dibuat terlebih dahulu. Cara pembuatan cabang dapat dilakukan dengan perintah berikut.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git checkout -b nama-cabang
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;h2 id=&#34;percobaan&#34;&gt;Percobaan&lt;/h2&gt;

&lt;p&gt;Setelah itu, beberapa detik kemudian, halaman akan langsung jadi. Kita bisa
mengaksesnya melalui alamat &lt;code&gt;https://{username}.github.io/nama-repo&lt;/code&gt;. Karena
saya sudah menggunakan domain untuk halaman github, maka nanti saya akan
mengaksesnya melalui &lt;code&gt;http://petanikode.com/nama-repo&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Contoh yang sudah saya buat:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Halaman Github: &lt;a href=&#34;http://petanikode.com/amp-tools&#34;&gt;http://petanikode.com/amp-tools&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Repositorinya: &lt;a href=&#34;https://github.com/petanikode/amp-tools/&#34;&gt;https://github.com/petanikode/amp-tools/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Selain cara ini, ada juga cara lain, yaitu melalui direktori &lt;code&gt;docs&lt;/code&gt;. Mungkin
akan saya bahas pada kesempatan berikutnya. Tetap pantau blog ini ya, :smile:.&lt;/p&gt;

&lt;p&gt;Jadi, itulah cara membuat halaman
github untuk repositori atau proyek. Apakah kalian sudah pernah membuatnya?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Berkenalan dengan Vue.js</title>
      <link>http://petanikode.com/2017/02/berkenalan-dengan-vue.js/</link>
      <pubDate>Sun, 05 Feb 2017 19:25:26 +0800</pubDate>
      
      <guid>http://petanikode.com/2017/02/berkenalan-dengan-vue.js/</guid>
      <description>

&lt;p&gt;Hari ini saya baru berkenalan dengan Vue.js. Saya sudah mendengar tentang
Vue.js dari beberapa teman dan forum. Tapi, saya belum pernah mulai mencobanya.&lt;/p&gt;

&lt;p&gt;Awalnya saya ingin membuat sebuah alat untuk kebutuhan saya sendiri, yaitu alat
yang bisa membuat tag &lt;code&gt;amp-img&lt;/code&gt; secara otmatis melalui url gambar. Karena masih
banyak artikel di blog ini yang belum disunting dan belum valid AMP.&lt;/p&gt;

&lt;p&gt;Pembuatan tag &lt;code&gt;amp-img&lt;/code&gt; secara manual terasa sangat melelahkan, karena saya harus
menyesuiakan nilai atribut &lt;code&gt;width&lt;/code&gt; dan &lt;code&gt;height&lt;/code&gt; dengan ukuran gambarnya. Saya
kemudian berpikir untuk membuat alatnya agar bisa otomatis.&lt;/p&gt;

&lt;p&gt;Mungkin saya bisa menggunakan &lt;a href=&#34;http://petanikode.com/topik/jquer&#34;&gt;JQuery&lt;/a&gt; atau &lt;a href=&#34;http://petanikode.com/topik/javascript&#34;&gt;Javascript&lt;/a&gt; murni.
Namun, sepertinya JQuery sudah mulai ketingalan zaman dan kalau menggunakan js murni nanti
kodenya mungkin akan banyak. Kemudian saya ingin menggunakan &lt;a href=&#34;angularjs&#34;&gt;Angularjs&lt;/a&gt;,
tapi saya belum mendalami Angular. Akhirnya saya mencoba Vuejs.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
width=&#34;720&#34;
height=&#34;380&#34;
alt=&#34;vuejs-petanikode.png&#34;
src=&#34;https://2.bp.blogspot.com/-rEB8YCwAYss/WJcjDEfbCaI/AAAAAAAADw4/1etYO0NlG4s_KerO7cACm0fGYJuiXHt6QCPcB/s1600/vuejs-petanikode.png&#34;
layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;h2 id=&#34;instalasi&#34;&gt;Instalasi&lt;/h2&gt;

&lt;p&gt;Penggunaan Vuejs seperti JQuery, kita tinggal mengimpor skrip vuejs-nya ke dalam HTML.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;https://cdnjs.cloudflare.com/ajax/libs/vue/2.1.10/vue.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;h2 id=&#34;logika-program&#34;&gt;Logika Program&lt;/h2&gt;

&lt;p&gt;Sebelum mulai menggunakan Vuejs, saya memikirkan dulu apa yang akan dilakukan program ini.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Paste URL&lt;/li&gt;
&lt;li&gt;Ambil lebar dan tinggi dari URL&lt;/li&gt;
&lt;li&gt;Ambil nama file gambar untuk teks alternatif&lt;/li&gt;
&lt;li&gt;Buat tag &lt;code&gt;amp-img&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Itu saja, tinggal Googling dan bikin kodenya. :smile:&lt;/p&gt;

&lt;h2 id=&#34;declarative-rendering-vuejs&#34;&gt;Declarative Rendering Vuejs&lt;/h2&gt;

&lt;p&gt;Berdasarkan panduan yang diberikan di dokumentasi Vuejs, saya diberikan contoh
kode berikut.&lt;/p&gt;

&lt;p&gt;html:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div id=&amp;quot;app&amp;quot;&amp;gt;
  {{ message }}
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;javascript:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var app = new Vue({
  el: &#39;#app&#39;,
  data: {
    message: &#39;Hello Vue!&#39;
  }
})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Kode di atas akan menghasilkan output &lt;code&gt;Hello Vue!&lt;/code&gt;. Terilhat lebih mudah dari
Angular. Hmm, mungkin nanti saya akan mulai suka dan jatuh cinta dengan Vuejs. :heart_eyes:&lt;/p&gt;

&lt;h2 id=&#34;vue-model&#34;&gt;Vue Model&lt;/h2&gt;

&lt;p&gt;Setelah itu, saya berkenalan dengan Vue Model. Karena sebelumnya saya mencari di
Google tentang &lt;em&gt;event onchange&lt;/em&gt; di Vue, malah dikasi Vue Model. &lt;em&gt;Event onchange&lt;/em&gt;
saya butuhkan agar nanti ketika paste url, langsung dibuat tag &lt;code&gt;amp-img&lt;/code&gt;-nya.&lt;/p&gt;

&lt;p&gt;Untuk membuat model Vue dari komponen form seperti input, kita tinggal buat atribut
&lt;code&gt;v-model&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;input v-model=&amp;quot;src&amp;quot; type=&amp;quot;text&amp;quot; placeholder=&amp;quot;http://example.com/image.jpg&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nama model yang saya buat di atas adalah &lt;code&gt;src&lt;/code&gt;. Model ini untuk menampung url gambar.
Kemudian untuk mengambil nilai dari model tersebut caranya seperti ini.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;textarea rows=&amp;quot;8&amp;quot;&amp;gt;
&amp;amp;lt;amp-img
width=&amp;quot;&amp;quot;
height=&amp;quot;&amp;quot;
alt=&amp;quot;&amp;quot;
src=&amp;quot;{{ src }}&amp;quot;
layout=&amp;quot;&amp;quot;&amp;amp;gt;
&amp;amp;lt;/amp-img&amp;amp;gt;&amp;lt;/textarea&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Apapun yang kita ketik pada elemen model akan langsung di-render.&lt;/p&gt;

&lt;h2 id=&#34;vue-method&#34;&gt;Vue Method&lt;/h2&gt;

&lt;p&gt;Selanjutnya, karena saya ingin mengambil nilai tinggi dan lebar dari gambar.
Saya membutuhkan sebuah fungsi. Karena mungkin di Vue belum ada fungsi tersebut.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var app = new Vue({
  el: &#39;#app&#39;,
  data: {
    width: &#39;&#39;,
    height: &#39;&#39;,
    layout: &#39;responsive&#39;,
    alt: &#39;&#39;,
    src: &#39;&#39;
  },
  methods: {
    getImageData: function () {
        var img = new Image();
        img.onload = function(){
            // ambil ukuran gambar
            app.width = this.width
            app.height = this.height
        };
        img.src = this.src;
        console.log(this.src);

        var index = this.src.lastIndexOf(&amp;quot;/&amp;quot;) + 1;
        var filename = this.src.substr(index);
        this.alt = unescape(filename);
        console.log(filename);
    }
  }
})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pada kode di atas, saya membuat sebuah fungsi bernama &lt;code&gt;getImageData()&lt;/code&gt;. Isi
dari fungsi tersebut untuk mengambil tinggi, lebar, dan nama file gambar.
Fungsi ini saya dapatkan dari &lt;a href=&#34;http://stackoverflow.com/a/11442850/2658551&#34;&gt;Stack Overflow&lt;/a&gt;.
Lalu fungsi ini saya panggil pada &lt;em&gt;event keyup&lt;/em&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;input v-on:keyup=&amp;quot;getImageData()&amp;quot; v-model=&amp;quot;src&amp;quot; type=&amp;quot;text&amp;quot; placeholder=&amp;quot;http://example.com/image.jpg&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;selesai&#34;&gt;Selesai&lt;/h2&gt;

&lt;p&gt;Semua yang saya butuhkan sudah tercapai. Programnya bisa berjalan sesuai harapan.
Apakah itu saja? Ya benar cuma itu saja. Sebanarnya banyak error yang saya dapatkan,
tapi saya tidak akan ceritakan di sini hehehe :smile:.&lt;/p&gt;

&lt;p&gt;&lt;amp-twitter width=486 height=657
    layout=&#34;responsive&#34;
    data-tweetid=&#34;828231245591048198&#34;&gt;
&lt;/amp-twitter&gt;&lt;/p&gt;

&lt;p&gt;Dengan penuh percaya diri, saya pun merilisnya ke publik.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hasilnya: &lt;a href=&#34;http://petanikode.com/amp-tools/amp-img.html&#34;&gt;http://petanikode.com/amp-tools/amp-img.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Kode sumber: &lt;a href=&#34;https://github.com/petanikode/amp-tools&#34;&gt;https://github.com/petanikode/amp-tools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Artikel ini bukan tutorial yang dapat anda ikuti. Melaikan hanya untuk berbagi
pengalaman saja. Terima kasih sudah membaca.&lt;/p&gt;

&lt;p&gt;Baca juga: &lt;a href=&#34;http://petanikode.com/2017/01/saya-tidak-bisa-bahasa-pemrograman-go-terpaksa-ini-yang-saya-lakukan/&#34;&gt;Saya tidak Bisa Bahasa Pemrograman Go, Terpaksa ini yang Saya Lakukan&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Referensi: &lt;a href=&#34;https://vuejs.org/v2/guide/&#34;&gt;vuejs.org&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cara Hosting Hugo di Github</title>
      <link>http://petanikode.com/2017/01/cara-hosting-hugo-di-github/</link>
      <pubDate>Mon, 30 Jan 2017 20:14:28 +0800</pubDate>
      
      <guid>http://petanikode.com/2017/01/cara-hosting-hugo-di-github/</guid>
      <description>

&lt;p&gt;Hosting/deploy Hugo di Github tidaklah sulit, karena sebenarnya kita hanya perlu
mengunggah file yang ada di direktori &lt;code&gt;public&lt;/code&gt; saja. Ada empat cara hosting
Hugo di Github yang diberikan pada dokumentasi, diantaranya:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Hosting ke direktori &lt;code&gt;doc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Hosting ke cabang &lt;code&gt;gh-pages&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Hosting ke halaman personal/organisasi&lt;/li&gt;
&lt;li&gt;Hosting Github dengan Continuous Integration (CI)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Kita akan mencoba cara yang nomer 3, karena menurut saya cukup gampang. Kita
membutuhkan dua repositori untuk melakukan cara ini.&lt;/p&gt;

&lt;h2 id=&#34;1-membuat-repositori&#34;&gt;1. Membuat Repositori&lt;/h2&gt;

&lt;p&gt;Buatlah dua repositori di Github dengan nama seperti berikut ini.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;kontent-web-hugo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;username.github.io&lt;/code&gt; atau &lt;code&gt;organisasi.github.io&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Pertama, repositori &lt;code&gt;kontent-web-hugo&lt;/code&gt; fungsinya untuk menyimpan konten dari Web.
Sementara repositori &lt;code&gt;username.github.io&lt;/code&gt; untuk menyimpan file yang ada di &lt;code&gt;public&lt;/code&gt;
atau hasil &lt;em&gt;render&lt;/em&gt; dari Hugo. Nama repositori anda tidak harus &lt;code&gt;kontent-web-hugo&lt;/code&gt;,
Anda bisa menggunakan nama selain itu.&lt;/p&gt;

&lt;h2 id=&#34;2-persiapkan-repositori-lokal&#34;&gt;2. Persiapkan Repositori Lokal&lt;/h2&gt;

&lt;p&gt;Buatlah repositori baru di dalam proyek hugo. Lakukan inisialisasi git.
Silahkan ikuti perintah berikut ini.&lt;/p&gt;

&lt;p&gt;masuk ke direktori Hugo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd kontent-web-hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Inisialisasi Git:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git init
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hapus direktori &lt;code&gt;public&lt;/code&gt;, tenang nanti kita bisa buat lagi dengan perntah &lt;code&gt;hugo&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rm -rf public
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tambahkan repositori &lt;em&gt;remote&lt;/em&gt; (github):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git remote add origin https://github.com/{username}/{nama-repo}.git
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;3-upload-ke-github&#34;&gt;3. Upload ke Github&lt;/h2&gt;

&lt;p&gt;Repositori lokal sudah dipersiapkan, sekarang kita upload dulu ke github.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add .
git commit -m &amp;quot;commit pertama&amp;quot;
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;4-membuat-submodul&#34;&gt;4. Membuat Submodul&lt;/h2&gt;

&lt;p&gt;Submodul ini merupakan repositori anak dari repositori &lt;code&gt;kontent-web-hugo&lt;/code&gt;.
Repositori ini akan menggunakan repositori &lt;code&gt;username.github.io&lt;/code&gt; sebagai
repositori remote-nya.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git submodule add -b master https://github.com/{username}/{username}.github.io.git public
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;5-membuat-skrip-deploy-sh&#34;&gt;5. Membuat Skrip &lt;code&gt;deploy.sh&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Sebenarnya kita bisa langsung unggah semua file yang ada di direktori &lt;code&gt;public&lt;/code&gt;
dengan perintah&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd public
git add .
git commit -m &amp;quot;tes Deploy hugo&amp;quot;
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Agar kita tidak mengetik perintah di atas terus-menerus setiap mau deploy, maka
kita memerlukan skrip. Untungnya Hugo sudah menyediakannya. Silahkan ditambahkan
skrip ini di direktori Hugo-nya.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;#!/bin/bash

echo -e &amp;quot;\033[0;32mDeploying updates to GitHub...\033[0m&amp;quot;

# Build the project.
hugo # if using a theme, replace by `hugo -t &amp;lt;yourtheme&amp;gt;`

# Go To Public folder
cd public
# Add changes to git.
git add -A

# Commit changes.
msg=&amp;quot;rebuilding site `date`&amp;quot;
if [ $# -eq 1 ]
  then msg=&amp;quot;$1&amp;quot;
fi
git commit -m &amp;quot;$msg&amp;quot;

# Push source and build repos.
git push origin master

# Come Back
cd ..
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Berikan hak akses eksekusi untuk skrip ini.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;chmod +x deploy.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nah, kita bisa melakukan deploy dengan skrip tersebut. Setiap kali kita ingin
meng-update ke Github, kita cukup menjalankan skrip itu saja. Contohnya:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./deploy.sh &amp;quot;tes deploy web hugo ke github&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tuggulah beberapa saat, website kita akan segera mengudara di &lt;code&gt;username.github.io&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Cara ini sudah saya coba di blog saya,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Repositori konten &lt;a href=&#34;https://github.com/ardianta/ardianta-pargo&#34;&gt;https://github.com/ardianta/ardianta-pargo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Repositori hasil render &lt;a href=&#34;https://github.com/ardianta/ardianta.github.io&#34;&gt;https://github.com/ardianta/ardianta.github.io&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Sebenarnya kita tidak harus membuat repositori &lt;code&gt;kontent-web-hugo&lt;/code&gt;, karena webnya
sudah bisa langsung di-hosting di &lt;code&gt;username.github.io&lt;/code&gt;. Tapi untuk jaga-jaga
kalau suatu saat nanti repositori lokalnya hilang, maka kita bisa ambil dari sana lagi.&lt;/p&gt;

&lt;p&gt;Referensi: &lt;a href=&#34;https://gohugo.io/tutorials/github-pages-blog/&#34;&gt;https://gohugo.io/tutorials/github-pages-blog/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cara Membuat Halaman Github Kurang dari 10 Menit</title>
      <link>http://petanikode.com/2017/01/cara-membuat-halaman-github-kurang-dari-10-menit/</link>
      <pubDate>Wed, 25 Jan 2017 08:06:22 +0800</pubDate>
      
      <guid>http://petanikode.com/2017/01/cara-membuat-halaman-github-kurang-dari-10-menit/</guid>
      <description>

&lt;p&gt;Halaman Github &lt;em&gt;(Github Pages)&lt;/em&gt; merupakan layanan &lt;em&gt;hosting&lt;/em&gt;  web statis yang diberikan oleh Github.
Layanan ini diberikan secara gratis dan kita juga akan mendapatkan subdomain &lt;code&gt;.github.io&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
width=&#34;720&#34;
height=&#34;380&#34;
alt=&#34;Github Octocat&#34;
src=&#34;https://3.bp.blogspot.com/-f3NdPaAWgzs/WITOd9XOGUI/AAAAAAAADtY/s2eqhveYCsIcHO6gLlcERO7xGa4HuTmcQCPcB/s1600/github-octocat-petanikode.jpg&#34;
layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Bagaimanakah cara membuatnya?&lt;/p&gt;

&lt;p&gt;Baiklah, pastikan anda sudah punya akun &lt;a href=&#34;http://petanikode.com/topik/github&#34;&gt;Github&lt;/a&gt; dan sudah menginstal &lt;a href=&#34;http://petanikode.com/topik/git&#34;&gt;Git&lt;/a&gt;. Kemudian
silahkan ikuti langkah-langkah berikut, tidak sampai 10 menit kok.&lt;/p&gt;

&lt;h2 id=&#34;1-buat-repositori-baru&#34;&gt;1. Buat Repositori Baru&lt;/h2&gt;

&lt;p&gt;Buatlah repositori baru dengan nama &lt;code&gt;username.github.io&lt;/code&gt;. Gunakan username github Anda,
contoh &lt;code&gt;petanikode.github.io&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
height=&#34;539&#34;
width=&#34;656&#34;
alt=&#34;Membuat Repositori Baru di Github&#34;
src=&#34;https://1.bp.blogspot.com/-C7pZt2jjSSo/WITHtNFH8yI/AAAAAAAADso/f15grxfIIngnZHMliFwp9fwkRDOlzXieACPcB/s1600/Membuat%2BRepositori%2Bbaru%2Bdi%2Bgithub.png&#34;
layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;&lt;/p&gt;

&lt;h2 id=&#34;2-buat-repositri-di-komputer&#34;&gt;2. Buat Repositri di Komputer&lt;/h2&gt;

&lt;p&gt;Buka terminal atau CMD, kemudian buatlah repositori baru. Kita akan mengisi,
repositori ini dengan file &lt;code&gt;index.html&lt;/code&gt; saja. Silahkan ikuti perintah berikut ini.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;mkdir halaman-github
cd halaman-github
echo &amp;quot;Hello World! Welcome to my website&amp;quot; &amp;gt;&amp;gt; index.html
git init
git add index.html
git commit -m &amp;quot;first commit&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;3-tambahkan-url-remote-repository&#34;&gt;3. Tambahkan URL &lt;em&gt;Remote Repository&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;Silahkan ketik perintah berikut untuk menambahkan &lt;em&gt;remote repository&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git remote add origin https://github.com/petanikode/petanikode.github.io.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sesuaikan dengan URL repository anda.&lt;/p&gt;

&lt;h2 id=&#34;4-kirim-ke-github&#34;&gt;4. Kirim ke Github&lt;/h2&gt;

&lt;p&gt;Setelah itu, anda bisa sinkronkan repositori lokal dengan repositori remote di
Github.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git push -u origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;5-coba-lihat-hasilnya&#34;&gt;5. Coba Lihat Hasilnya&lt;/h2&gt;

&lt;p&gt;Coba buka alamat github yang anda buat, &lt;code&gt;petanikode.github.io&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
height=&#34;228&#34;
width=&#34;750&#34;
alt=&#34;Halaman Github Petani Kode&#34;
src=&#34;https://3.bp.blogspot.com/-IQKEvR-_QFg/WITLMJ4f67I/AAAAAAAADtE/rOJkP3e6tiEbogoxvucyQcby2zJFCIK1QCPcB/s1600/Halaman%2BGithub%2BPetani%2BKode.png&#34;
layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Nah! Bagaimana, tidak sampai 10 menit &amp;lsquo;kan? Selanjutnya anda bisa kembangkan sendiri
websitenya. Kalau cara di atas masih belum jelas, silahkan simak video berikut.&lt;/p&gt;

&lt;p&gt;&lt;amp-iframe
width=&#34;836&#34;
height=&#34;836&#34;
sandbox=&#34;allow-scripts allow-same-origin&#34;
src=&#34;https://asciinema.org/api/asciicasts/100278?&amp;speed=2&#34;
layout=&#34;responsive&#34;&gt;&lt;/amp-iframe&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>5 Alasan Petani Kode Migrasi ke Hugo</title>
      <link>http://petanikode.com/2017/01/5-alasan-petani-kode-migrasi-ke-hugo/</link>
      <pubDate>Wed, 18 Jan 2017 22:06:22 +0800</pubDate>
      
      <guid>http://petanikode.com/2017/01/5-alasan-petani-kode-migrasi-ke-hugo/</guid>
      <description>

&lt;p&gt;Minggu ini, Petani Kode melakukan migrasi dari Blogger ke Hugo.
Proses migrasi berjalan dengan lancar, meskipun masih banyak yang belum dikerjakan.
Ada beberapa alasan, kenapa Petani Kode melakukan migrasi ke Hugo.&lt;/p&gt;

&lt;h2 id=&#34;1-template-blogger-masih-menggunakan-xml&#34;&gt;1. Template Blogger Masih menggunakan XML&lt;/h2&gt;

&lt;p&gt;Salah satu produk Google yang jarang diperbaharui adalah Blogger. Buktinya,
ketika Google memperkenalkan konsep &lt;em&gt;Material Design&lt;/em&gt;, berbagai produknya kemudian
menerapkan material desain. Google Analytic, Adsense, Photo, Drive, GMail, dsb.
Lalu, bagaimana dengan Blogger? tampilannya masih begitu-begitu saja sejak tahun 2012. Aplikasi Androidnya juga kurang bagus.&lt;/p&gt;

&lt;p&gt;Begitu juga dengan template engine-nya, masih menggunakan XML.
XML membuat saya cukup lelah membuat template. Karena tidak bisa dibuat secara
offline. Selain itu juga, dokumentasinya kurang lengkap.&lt;/p&gt;

&lt;h2 id=&#34;2-menulis-di-blogger-kurang-efisien&#34;&gt;2. Menulis di Blogger Kurang Efisien&lt;/h2&gt;

&lt;p&gt;Menurut Saya sebagai programmer yang terbiasa menulis di teks editor,
menulis di Blogger itu kurang efisien. Karena ketika kita menulis di sana, lalu melakukan &lt;em&gt;preview&lt;/em&gt; kita akan membuka tab baru dan men-download hasil &lt;em&gt;preview&lt;/em&gt;.
Berapa waktu dan kuota yang dihabiskan?&lt;/p&gt;

&lt;p&gt;Dulu saya pernah mencoba menulis draf artikel dalam bentuk teks, html,
&lt;em&gt;markdown&lt;/em&gt;,  dan dokumen. Namun, ketika ingin diterbitkan, harus disunting
lagi di Blogger. Berbeda dengan Hugo, kita bisa menulis di teks editor mana saja
dengan format &lt;em&gt;markdown&lt;/em&gt; dan HTML. Sublime, Atom, Vim, mau pakai yang mana?&lt;/p&gt;

&lt;p&gt;Saya pilih Atom, karena bisa lihat preview-nya langsung.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
height=&#34;675&#34;
width=&#34;1245&#34;
alt=&#34;Tulis Artikel di Atom untuk Hugo&#34;
src=&#34;https://2.bp.blogspot.com/-5K1vDdxvIOE/WIAa-PInq_I/AAAAAAAADqQ/2hNl6Vmw_Po5NHOCQ5Kn__0iBefttOHHACPcB/s1600/Nulis%2Bartikel%2Bdi%2BAtom%2Buntuk%2BHugo.png&#34;
layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;&lt;/p&gt;

&lt;h2 id=&#34;3-amp-susah-valid&#34;&gt;3. AMP Susah Valid&lt;/h2&gt;

&lt;p&gt;Validator AMP sangat ketat dalam menilai web. Kita dilarang keras menggunakan
Javascript. Karena Javascript katanya dapat memperlambat web. Sementara,
di Blogger banyak menggunakan Javascript; dan parahnya lagi, di sana untuk &lt;em&gt;load&lt;/em&gt;
widget-nya pakai Javascript.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
height=&#34;380&#34;
width=&#34;720&#34;
alt=&#34;Validasi AMP&#34;
src=&#34;http://i.imgur.com/5sv5CXW.jpg&#34;
layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Pada Hugo, saya tidak menggunakan Javascript. Kecuali Javascript bawaan AMP.
Hasilnya pun valid tanpa error.&lt;/p&gt;

&lt;p&gt;&lt;amp-twitter width=&#34;486&#34; height=&#34;657&#34;
    layout=&#34;responsive&#34;
    data-tweetid=&#34;821021406854946816&#34;&gt;
&lt;/amp-twitter&gt;&lt;/p&gt;

&lt;h2 id=&#34;4-agar-terbiasa-menggunakan-git&#34;&gt;4. Agar Terbiasa Menggunakan Git&lt;/h2&gt;

&lt;p&gt;Saya harus melakukan &lt;em&gt;push&lt;/em&gt; atau upload ke server repository git untuk &lt;em&gt;update&lt;/em&gt; konten. Karena Hugo sebuah generator web statis. Oleh sebab itu, ini bisa jadi sarana untuk latihan git agar terbiasa.&lt;/p&gt;

&lt;h2 id=&#34;5-ingin-mencoba-teknologi-baru&#34;&gt;5. Ingin Mencoba Teknologi Baru&lt;/h2&gt;

&lt;p&gt;Hugo memang baru, dibangun dengan bahasa pemrograman Go. Versi Hugo saat tulisan
ini dibut adalah 0.18. Meski belum mencapai versi 1.0, tidak ada salahnya untuk dicoba.&lt;/p&gt;

&lt;p&gt;Ketika mengembangkan Petani Kode, saya sedikit kesulitan,
karena hasil pencarian Google hanya mengarah ke dokumentasi Hugo, Forum Hugo,
dan Isu Hugo di Github. Sangat jarang ke Stack Overflow. Namun, itu bukanlah kendala.&lt;/p&gt;

&lt;p&gt;Bahkan saya sampai dusuruh nulis kode dengan bahasa pemrograman Go. Sedangkan
Saya tidak pernah belajar bahasa pemrograman Go sama sekali.&lt;/p&gt;

&lt;p&gt;Baca juga: &lt;a href=&#34;http://petanikode.com/2017/01/saya-tidak-bisa-bahasa-pemrograman-go-terpaksa-ini-yang-saya-lakukan/&#34;&gt;Saya tidak Bisa Bahasa Pemrograman Go, Terpaksa ini yang Saya Lakukan&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Itulah lima alasan Petani Kode migrasi ke Hugo. Mungkin saja, Petani Kode menjadi web Indonesia yang pertama kali menggunakan Hugo. Karena saya lihat di &lt;a href=&#34;https://gohugo.io/showcase/&#34;&gt;Showcase Hugo&lt;/a&gt;, tidak ada web indonesia.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cara Impor Artikel Blogger ke Hugo Kurang dari 15 Menit</title>
      <link>http://petanikode.com/2017/01/cara-impor-artikel-blogger-ke-hugo-kurang-dari-15-menit/</link>
      <pubDate>Fri, 13 Jan 2017 21:08:45 +0800</pubDate>
      
      <guid>http://petanikode.com/2017/01/cara-impor-artikel-blogger-ke-hugo-kurang-dari-15-menit/</guid>
      <description>

&lt;p&gt;Dalam rangka migrasi Petani Kode ke Hugo, saya harus melakukan impor artikel dari Blogger ke Hugo. Untungnya Hugo sudah menyediakan skrip untuk impor konten dari blogger ke Hugo. Proses impor ini memakan waktu cukup cepat. Saya kira, tidak sampai 15 menit. Benar sekali, mungkin anda bisa melakukannya lebih cepat.&lt;/p&gt;

&lt;p&gt;Saya asumsikan, kita telah menginstal &lt;a href=&#34;https://golang.org&#34;&gt;Go (Golang)&lt;/a&gt; dan &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt;. Kemudian lakukan langkah-langkah berikut ini.&lt;/p&gt;

&lt;h2 id=&#34;1-ekspor-blog&#34;&gt;1. Ekspor Blog&lt;/h2&gt;

&lt;p&gt;Pertama, kita perlu mengekspor dulu konten yang ada di blogger. Masuk ke &lt;em&gt;Settings&amp;gt;Other&lt;/em&gt; kemudian klik &lt;em&gt;Back up Content&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    src=&#34;https://lh3.googleusercontent.com/8hFKhTL6Mxfi6L9ht8Zy1vGhnbrw-yX12l91QfUShBV9DJrqGfYYDjZgUB0-MKmwvL4OukfMqYBUyi4j7xh7aFPmpgMiRX8mIrNRTiPi1_uNr8dl-v7v-w0IL4ZhSs3kmjB8Moe6DykxLHtME2Ei6qj5_W0xL9BBHht7gErt5vSTaf2Q_sTwtc9eAhoiVkBRgrwFnRp8GwX1gDz9CVI_KT32DhFRMdyWKT-zeFJbIlH4UMbatDm_lGt_S7OtI22z0QbWEH7v1ZoLshqfXLBKrPjlBVneAOdmmV9E4Lbydx1AxHvNQjIGyoZOQLPOTRWQKXApYyTWMdgtdfZv0NqiX9IgQ-ld1lrC2DYTphdIWPvDv7QDcSok3prUz54Wep0AT98m9Y0UCaFIT1qnqIJa8J05JUEfHzsl-nXA43fBmk5J1Kt7JFP7ODlGQkzbSPazkEcxpkVxBVzB6KWQqqaysVad1A14cu-Caa86vP1HMIDxjXTl4RX54l15gIxfa6KpUY34ZCDR9Q8eoIyEuaTTlk70n48MYAvNCFNNUm95Uk1ZOrECYm9AB-xr2aLoCB-DDt2E335GkMzWLy6TOLFQfZhzJDtbIkgSr5pEKdB0C9VQKG8TPEG2=w796-h286-no&#34;
    width=&#34;796&#34;
    height=&#34;268&#34;
    layout=&#34;responsive&#34;
    alt=&#34;Ekspor kontent blog&#34;&gt;&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Kita akan mendapatkan file &lt;code&gt;.xml&lt;/code&gt;, nah file ini nanti yang akan kita ekstrak isinya menjadi format &lt;em&gt;markdown&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&#34;2-download-skrip&#34;&gt;2. Download skrip&lt;/h2&gt;

&lt;p&gt;Selanjutnya kita membutuhkan skrip untuk melakukan ekstrak terhadap file &lt;code&gt;.xml&lt;/code&gt; tadi. Silahkan klon skripnya di &lt;a href=&#34;https://github.com/natefinch/blogimport&#34;&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/natefinch/blogimport
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;3-impor-konten&#34;&gt;3. Impor Konten&lt;/h2&gt;

&lt;p&gt;Setelah kita mendapatkan skripnya, sekarang kita harus mengekstrak isi dari file &lt;code&gt;.xml&lt;/code&gt; menjadi file &lt;em&gt;markdown&lt;/em&gt;. Pertama, masuk dulu ke direktori skripnya.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd blogimpor
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Setelah itu buat direktori baru sebagai tempat menampung hasil ekstraksi.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir artikel
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Jalankan skrip:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;go run main.go ~/Downloads/blog-2017-01-13.xml artikel
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Setelah itu, coba periksa direktori artikel.
&lt;amp-img
    src=&#34;https://lh3.googleusercontent.com/I36HhwnAxaNYEouTOg7BpGwcbnhX-Gxjab8gCSGUj69Q2Kif1TyPiQbyLuHQ9zLzaoHy6pYS8lZivKFKWkBW69Gh5oNrrl797rBt3LN26t2nqtxXdqH5E95jFxGOUkAE7ule2FuxVEdqQTp3Uc9dEu8O1CldVHZ-5PdthwNCgux7t8R7yEEhvBVOyPZOCoYJLp6agg6Ckmq2sF8lP8P5C3_qxWXo9IcuDURRmn6qnpd0oRTdRtR9NGiR65-8nyQ-cEMbnGvPXer7HG2Nb65ramTqtZ27ycrJA-u8PqK79ZTryEsYj2gBOwRh5U3Yn3xbQkqc41ZnnUJ0qpQFy_M-54BEzHdU43cIgtsHaIRw7GYERk81xor3htxrOc-pF-1JNcq8IcbjWzYHSeDx17zlkiB9kedDhsBoluIjmTPHEWdgoYfsngylDRH8Eg_in4lE05XE9lUIe1S_sbHTik_1VdRp29SFujsfliQYRLfNDGhrHSomljnS8Vf_oM0P8aVvy27Y5ONkmNa-YYLGuYrDSBGonJ53VYVHVXN5gr900nnl7cVMmApjKL25SIlgsbGmX_RKZxKzAExmpOn7q2dsoKc4wR0gzpDFgXRmAEG-lypoeD68ouGj=w854-h457-no&#34;
    width=&#34;854&#34;
    height=&#34;457&#34;
    layout=&#34;responsive&#34;
    alt=&#34;Ekspor kontent blog&#34;&gt;&lt;/amp-img&gt;
Selanjutnya, kita bisa pindahkan semua file &lt;em&gt;markdown&lt;/em&gt; ini ke direktori &lt;em&gt;content&lt;/em&gt; di Hugo.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Migrasi Petani Kode dari Blogger ke Hugo</title>
      <link>http://petanikode.com/2017/01/migrasi-petani-kode-dari-blogger-ke-hugo/</link>
      <pubDate>Wed, 11 Jan 2017 22:06:22 +0800</pubDate>
      
      <guid>http://petanikode.com/2017/01/migrasi-petani-kode-dari-blogger-ke-hugo/</guid>
      <description>

&lt;p&gt;Tercatat pada tanggal 11 Januari 2017, website Petani Kode mulai dikembangkan
dengan mesin &lt;em&gt;(engine)&lt;/em&gt; Hugo. Hugo adalah salah satu mesin generator web statis
yang berusia cukup muda. Hugo ditulis dengan bahasa pemrograman Go dan diklaim
&lt;a href=&#34;https://www.youtube.com/watch?v=CdiDYZ51a2o&#34;&gt;lebih cepat&lt;/a&gt; dari mesin sejenisnya
 seperti &lt;a href=&#34;https://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt;, &lt;a href=&#34;https://middlemanapp.com/&#34;&gt;Middleman&lt;/a&gt;,
&lt;a href=&#34;http://octopress.org/&#34;&gt;Octopress&lt;/a&gt;, dsb.&lt;/p&gt;

&lt;p&gt;Baca juga: &lt;a href=&#34;http://petanikode.com/2017/01/5-alasan-petani-kode-migrasi-ke-hugo/&#34;&gt;5 Alasan Petani Kode Migrasi ke Hugo&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pengembangan website Petani Kode berlangsung cukup cepat. Meskipun bahasa
pemrograman Go belum pernah saya pelajari dan pahami. Namun, berkat kerja
keras dan semangat website ini bisa jadi dalam waktu sekejap. Ya, karena di
Hugo kita tidak menulis kode Go, melainkan hanya bermain pada template Go.&lt;/p&gt;

&lt;p&gt;Kesulitan saya rasakan ketika belum paham fungsi dan variabel dalam template Go.
Namun, itu bukanlah kendala. Karena Hugo sudah menyediakan
&lt;a href=&#34;https://gohugo.io/overview/introduction/&#34;&gt;dokumentasi&lt;/a&gt; dan
&lt;a href=&#34;http://discuss.gohugo.io&#34;&gt;forum disksui&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Saya tidak sadar sudah menulis kode CSS hampir 700 baris. Template ini jadi
dalam waktu dua setengah hari. Template ini menerapkan &lt;a href=&#34;http://petanikode.com/topik/amp&#34;&gt;AMP&lt;/a&gt; yang
dikembangkan dari temlpate &lt;a href=&#34;https://gohugo-amp.gohugohq.com/&#34;&gt;AMP Starter&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;proses-migrasi&#34;&gt;Proses Migrasi&lt;/h2&gt;

&lt;ul class=&#34;task-list&#34;&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; Pembuatan Template Hugo (11~13 Januari)&lt;/li&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; &lt;a href=&#34;http://petanikode.com/2017/01/cara-impor-artikel-blogger-ke-hugo-kurang-dari-15-menit/&#34;&gt;Impor Artikel dari Blogger ke Hugo&lt;/a&gt; (13~14 Januari)&lt;/li&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; Deploy ke domain utama petanikode.com (15~17 Januari)&lt;/li&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; checked disabled class=&#34;task-list-item&#34;&gt; &lt;a href=&#34;http://petanikode.com/2017/01/cara-redirect-domain-dengan-cloudflare/&#34;&gt;Redirect link lama ke link baru&lt;/a&gt; (17 Januari)&lt;/li&gt;
&lt;li&gt;&lt;input type=&#34;checkbox&#34; disabled class=&#34;task-list-item&#34;&gt; Edit Artikel (18 Januari [0.04%])&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;sebelum-dan-sesudah-migrasi&#34;&gt;Sebelum dan Sesudah Migrasi&lt;/h2&gt;

&lt;p&gt;Tabel perbandingan:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Item&lt;/th&gt;
&lt;th&gt;Sebelum&lt;/th&gt;
&lt;th&gt;Sesudah&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Hosting&lt;/td&gt;
&lt;td&gt;Blogger&lt;/td&gt;
&lt;td&gt;Gitlab&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Hosting Gambar&lt;/td&gt;
&lt;td&gt;Google/Blogger&lt;/td&gt;
&lt;td&gt;Google, Dropbox, Flickr, dll&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;DNS&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://member.idwebhost.com/aff.php?aff=7137&#34;&gt;Idwebhost&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Cloudflare&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Engine&lt;/td&gt;
&lt;td&gt;Blogger&lt;/td&gt;
&lt;td&gt;Hugo&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Template Engine&lt;/td&gt;
&lt;td&gt;XML Blogger&lt;/td&gt;
&lt;td&gt;Go Template, Ace&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Format Artikel&lt;/td&gt;
&lt;td&gt;HTML&lt;/td&gt;
&lt;td&gt;Markdown, HTML&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Font&lt;/td&gt;
&lt;td&gt;Open Sans, Roboto, Merriweather, Font-awesome&lt;/td&gt;
&lt;td&gt;Merriweather, Open Sans, Font-awesome&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Font Provider&lt;/td&gt;
&lt;td&gt;Google Font, Wordpress, CDN Bootstrap&lt;/td&gt;
&lt;td&gt;Google Font, CDN Bootstrap&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Sistem Komentar&lt;/td&gt;
&lt;td&gt;Disqus, Blogger, Facebook&lt;/td&gt;
&lt;td&gt;Disqus&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Petani Kode memilih hosting di Gitlab karena di sana bisa membuat &lt;em&gt;private&lt;/em&gt; repositori dan langsung terintegaris dengan CI. Sedangkan di Github, tidak bisa membuat repositori &lt;em&gt;private&lt;/em&gt; kalau menggunakan akun gratis. Kemudian, saya juga pernah mencoba di Bitbucket. Akan tetapi terbatas dengan deploy, minimal 5x deploy per hari.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Update&lt;/em&gt;: (01 Februari 2017) Petani kode migrasi ke Github, karena sering gagal
melakukan build di CI Gitlab.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Item&lt;/th&gt;
&lt;th&gt;Github&lt;/th&gt;
&lt;th&gt;Gitlab&lt;/th&gt;
&lt;th&gt;Bitbucket&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Maksimal Ruang Repositori&lt;/td&gt;
&lt;td&gt;1GB&lt;/td&gt;
&lt;td&gt;10Gb&lt;/td&gt;
&lt;td&gt;10GB&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Private Repository&lt;/td&gt;
&lt;td&gt;premium&lt;/td&gt;
&lt;td&gt;ya&lt;/td&gt;
&lt;td&gt;ya&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Dukungan HTTPS&lt;/td&gt;
&lt;td&gt;github.io&lt;/td&gt;
&lt;td&gt;ya&lt;/td&gt;
&lt;td&gt;ya&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Pages&lt;/td&gt;
&lt;td&gt;Github pages&lt;/td&gt;
&lt;td&gt;Gitlab Pages&lt;/td&gt;
&lt;td&gt;Aerobatic&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Sebelum migrasi, penulisan artikel dilakukan dengan membuka Blogger. Namun setelah migrasi, penulisan artikel bisa dilakukan di teks editor mana saja. Rasanya seperti menulis kode, dan kalau ingin diterbitkan tinggal melakukan &lt;em&gt;push&lt;/em&gt; ke repositori git.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
src=&#34;https://1.bp.blogspot.com/-z2_QdrUKmfE/WHx5QoVkwRI/AAAAAAAADok/AtwB9HQYNV4cxVuOFLlwgYCch_gi41rjQCK4B/s1600/tulisartikel-blogger-dan-hugo.jpg&#34;
width=&#34;720&#34;
height=&#34;380&#34;
layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Perbandingan skor kecepatan, &lt;a href=&#34;https://gtmetrix.com/compare/iHmjKf5p/OF52WEdH&#34;&gt;analisis gtmetrix&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
src=&#34;http://i.imgur.com/gyQ5t6a.png&#34;
width=&#34;1016&#34;
height=&#34;570&#34;
layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Validasi AMP&lt;/p&gt;

&lt;p&gt;&lt;amp-img
src=&#34;http://i.imgur.com/5sv5CXW.jpg&#34;
width=&#34;720&#34;
height=&#34;380&#34;
layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tutorial Web Responsif: Pengenalan RWD dan Viewport</title>
      <link>http://petanikode.com/2016/11/tutorial-web-responsif-pengenalan-rwd-dan-viewport/</link>
      <pubDate>Fri, 25 Nov 2016 15:19:00 +0000</pubDate>
      
      <guid>http://petanikode.com/2016/11/tutorial-web-responsif-pengenalan-rwd-dan-viewport/</guid>
      <description>

&lt;p&gt;Bagaimana cara membuat web responsif? itulah pertanyaan yang cukup sering ditanyakan
kepada saya. Pertanyaan ini membutuhkan jawaban yang cukup panjang,
karena itu saya tidak bisa langsung menjawab secara detail melalui
lisan maupun pesan instan, selain itu juga waktu yang tidak mendukung.
Berangkat dari keterbatasan itu, akhirnya saya menrebitkan tulisan ini.&lt;/p&gt;

&lt;h2 id=&#34;apakah-itu-rwd&#34;&gt;Apakah itu RWD?&lt;/h2&gt;

&lt;p&gt;RWD singkatan dari &lt;em&gt;Responsive Web Design&lt;/em&gt;. Responsif artinya webnya dapat
merespon atau menyesuaikan diri dengan perangkat yang digunakan.
Misalnya kita membuka webnya melalui ponsel, maka secara otomatis tampilan
webnya akan disesuikan dengan ukuran layar ponselnya.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;720&#34;
    height=&#34;380&#34;
    alt=&#34;web-responsif-petanikode.jpg&#34;
    src=&#34;http://1.bp.blogspot.com/-MCZ3AuXYuWE/WDfTTUPuYuI/AAAAAAAADbQ/aEiKsTSoRSA4umhvvQB4HbTMu90Te2HwgCK4B/s1600/web-responsif-petanikode.jpg&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Kemunculan teknologi-teknologi &lt;em&gt;mobile&lt;/em&gt; seperti saat ini, membuat kita harus
menggunakan RWD agar web kita dapat ditampilkan dengan baik di semua perangkat.&lt;/p&gt;

&lt;h2 id=&#34;mengenal-viewport&#34;&gt;Mengenal &lt;em&gt;ViewPort&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;ViewPort&lt;/em&gt; adalah area web yang terlihat dari perangkat &lt;em&gt;(visible area)&lt;/em&gt;.
Antara komputer dengan ponsel tentu saja memiliki ukuran &lt;em&gt;ViewPort&lt;/em&gt; yang berbeda.
Ponsel lebih sempit, sedangkan komputer lebih luas.&lt;/p&gt;

&lt;p&gt;Baca Juga: &lt;a href=&#34;http://petanikode.com/2016/01/tutorial-bootstrap-3---memahami-fungsi-viewport/&#34;&gt;Tutorial Bootstrap: Memahami Fungsi ViewPort&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;h2 id=&#34;cara-mengatur-viewport&#34;&gt;Cara Mengatur &lt;em&gt;ViewPort&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;Kita bisa mengatur &lt;em&gt;ViewPort&lt;/em&gt; sebuah web melalui tag &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt;,
tapi sebelum melakukan itu, cobalah untuk membuat halaman web dengan kode berikut ini.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;Belajar Web Responsif&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;
    &amp;lt;div&amp;gt;
        &amp;lt;p&amp;gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasilnya ketika dibuka melalui ponsel:&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;427&#34;
    height=&#34;637&#34;
    alt=&#34;Web+tanpa+viewport+di+Ponsel+Android.png&#34;
    src=&#34;http://1.bp.blogspot.com/-ELePoaNCte0/WDfgnP7nHRI/AAAAAAAADbg/SJ_eVKdDRGkHEWJtY0nz95zueUq3O29kACK4B/s1600/Web%2Btanpa%2Bviewport%2Bdi%2BPonsel%2BAndroid.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Sekarang, coba modifikasi kode tadi. Tambahkan tag &lt;code&gt;&amp;lt;meta&amp;gt;&lt;/code&gt; untuk mengatur &lt;em&gt;ViewPort&lt;/em&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;Belajar Web Responsif&amp;lt;/title&amp;gt;&amp;lt;br&amp;gt;
    &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1&amp;quot;&amp;gt;
&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;
    &amp;lt;div&amp;gt;
        &amp;lt;p&amp;gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.&amp;lt;/p&amp;gt;
    &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasilnya setelah ditambahkan &lt;em&gt;ViewPort&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;426&#34;
    height=&#34;635&#34;
    alt=&#34;Web+dengan+ViewPort+di+ponsel+android.png&#34;
    src=&#34;http://4.bp.blogspot.com/-HCvVviNGj8I/WDfi31o3sWI/AAAAAAAADbs/puaEgnZEocos4CX8Ki9LU1ykcguu2M51wCK4B/s1600/Web%2Bdengan%2BViewPort%2Bdi%2Bponsel%2Bandroid.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Nah, bagaimana? sudah tahu &amp;lsquo;kan perbedaanya. Kita baru saja mengetahui fungsi
dari &lt;em&gt;Viewport&lt;/em&gt; dalam RWD &lt;em&gt;(Responsive Web Design)&lt;/em&gt;. Cukup sampai di sini dulu,
selanjutnya kita akan pelajari satuan-satuan yang digunakan pada RWD.&lt;/p&gt;

&lt;p&gt;Selanjutnya: Satuan Ukuran untuk RWD (draf)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Eksekusi Perintah Command Line (CMD) melalui PHP</title>
      <link>http://petanikode.com/2016/10/eksekusi-perintah-command-line-cmd-melalui-php/</link>
      <pubDate>Sat, 15 Oct 2016 19:00:00 +0000</pubDate>
      
      <guid>http://petanikode.com/2016/10/eksekusi-perintah-command-line-cmd-melalui-php/</guid>
      <description>&lt;p&gt;Perintah-perintah dasar yang sering kita ketik di Terminal maupun CMD, dapat
juga kita eksekusi melalui web. Tentu saja dengan bantuan PHP. Pada artikel
sebelumnya, saya sudah pernah membahas fungsi-fungsi untuk operasi file
dan direktori. Nah, sekarang ini kita akan coba fungsi &lt;code&gt;system()&lt;/code&gt;.
Fungsi ini untuk mengeksekusi perintah-perintah Terminal atau CMD.&lt;/p&gt;

&lt;p&gt;Baca Juga:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://petanikode.com/2016/09/cara-menghapus-dan-mengubah-nama-direktori-dengan-php/&#34;&gt;Cara Menghapus dan Mengubah Nama Direktori dengan PHP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://petanikode.com/2016/09/membuat-dan-menampilkan-isi-direktori-dengan-php/&#34;&gt;Membuat dan Menampilkan isi Direktori dengan PHP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mari kita mulai dengan membuat sebuah file baru bernama &lt;code&gt;eksekusi_perintah.php&lt;/code&gt;,
kemudian isi dengan kode berikut.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
    &amp;lt;title&amp;gt;Eksekusi Perintah&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;

&amp;lt;body&amp;gt;

    &amp;lt;form&amp;gt;
    &amp;lt;label for=&amp;quot;cmd&amp;quot;&amp;gt;Perintah&amp;lt;/label&amp;gt;
    &amp;lt;input type=&amp;quot;text&amp;quot; name=&amp;quot;cmd&amp;quot; placeholder=&amp;quot;perintah (cmd)&amp;quot; /&amp;gt;
    &amp;lt;input type=&amp;quot;submit&amp;quot; value=&amp;quot;Eksekusi&amp;quot; /&amp;gt;
    &amp;lt;/form&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;

&amp;lt;?php

    if(isset($_GET[&#39;cmd&#39;])){
        echo &amp;quot;&amp;lt;pre&amp;gt;&amp;quot;;
        echo system($_GET[&#39;cmd&#39;]);
        echo &amp;quot;&amp;lt;/pre&amp;gt;&amp;quot;;
    }

?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;p&gt;Setelah itu, silahkan di simpan dalam direktori web server (&lt;code&gt;/var/www/html&lt;/code&gt;
atau &lt;code&gt;C:\xampp\htdocs&lt;/code&gt;). Pertahitkan lah kode di atas, di sana kita menggunakan
sebuah form untuk mendapatkan perintah. Kemudian perintah tersebut akan
ditampung dalam variabel &lt;code&gt;$_GET&lt;/code&gt;. Sebelum perintah itu dieksekusi,
kita periksa dulu, apakah sudah ada perintah atau belum dengan fungsi &lt;code&gt;isset()&lt;/code&gt;.
Terakhir, barulah kita eksekusi perinah dengan fungsi &lt;code&gt;system()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Hasilnya ketika dicoba dengan perintah &lt;code&gt;ls -l&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;890&#34;
    height=&#34;277&#34;
    alt=&#34;Eksekusi+Perintah+-+Mozilla+Firefox+%28Private+Browsing%29_024.png&#34;
    src=&#34;http://1.bp.blogspot.com/-hoTSReyAPxE/WAIJ5jDek4I/AAAAAAAADVg/qTUhDWE3EUgzUI_w5HhY-q7eoEw0LQ-aACK4B/s1600/Eksekusi%2BPerintah%2B-%2BMozilla%2BFirefox%2B%2528Private%2BBrowsing%2529_024.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Coba juga perintah Linux yang lainnya seperti &lt;code&gt;lspci&lt;/code&gt;, &lt;code&gt;date 2016&lt;/code&gt;, &lt;code&gt;uname -a&lt;/code&gt;,
&lt;code&gt;man ls&lt;/code&gt;, dan sebagainya. Bagaimanakah hasilnya?&lt;/p&gt;

&lt;p&gt;Itulah cara mengeksekusi perintah &lt;em&gt;command line&lt;/em&gt; melalui PHP.
Kita hanya memerlukan fungsi &lt;code&gt;system()&lt;/code&gt; untuk melakukannya.
Lalu hasil eksekusinya bisa kita tampilkan dengan perintah &lt;code&gt;echo&lt;/code&gt; atau &lt;code&gt;print&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cara Menggunakan Web Server dari PHP</title>
      <link>http://petanikode.com/2016/10/cara-menggunakan-web-server-dari-php/</link>
      <pubDate>Mon, 10 Oct 2016 10:16:00 +0000</pubDate>
      
      <guid>http://petanikode.com/2016/10/cara-menggunakan-web-server-dari-php/</guid>
      <description>

&lt;p&gt;Pada PHP versi &lt;code&gt;5.4.0&lt;/code&gt;, &lt;acronym title=&#34;Command Line Interpreter/Interface&#34;&gt;CLI&lt;/acronym&gt;
&lt;acronym title=&#34;Server Application Programming Interface&#34;&gt;SAPI&lt;/acronym&gt;
menyediakan fitur &lt;em&gt;build-in web server&lt;/em&gt; yang memungkinkan kita untuk membuat
server web dari perintah &lt;em&gt;command line&lt;/em&gt; (CLI). Namun, server tersebut hanya
bisa digunakan untuk pengembangan &lt;em&gt;(development)&lt;/em&gt; aplikasi saja.
Bila kita menggunakannya untuk server produksi, kemungkinan akan macet
karena terlalu banyak &lt;em&gt;request&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&#34;membuat-server-dari-commnd-line&#34;&gt;Membuat Server dari Commnd Line&lt;/h2&gt;

&lt;p&gt;Pastikan PHP sudah terinstal, kemudian buat sebuah server dengan perintah berikut ini.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;php -S localhost:8000
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Perhatikan argumen &lt;code&gt;-S&lt;/code&gt;, argumen tersebut menggunakan huruf kapital.
Kemudian argumen kedua adalah alamat server dan nomer &lt;em&gt;port&lt;/em&gt; yang akan digunakan.
Nomer &lt;em&gt;port&lt;/em&gt; bebas, asalkan tidak bentrok dengan nomer &lt;em&gt;port&lt;/em&gt; service lain.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;655&#34;
    height=&#34;189&#34;
    alt=&#34;Menjalankan+server+PHP+melalui+terminal.png&#34;
    src=&#34;http://4.bp.blogspot.com/-h7cY8GOTbl4/V_nnICrIa1I/AAAAAAAADUg/g65OMsk6eVkJO3zQigyTUeDz9H_K70iiQCK4B/s1600/Menjalankan%2Bserver%2BPHP%2Bmelalui%2Bterminal.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Gambar di atas menunjukkan, kalau servernya siap menerima request dari
alamat &lt;a href=&#34;http://localhost:8000&#34;&gt;http://localhost:8000&lt;/a&gt; dengan root dokumenya &lt;code&gt;/home/petanikode&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;862&#34;
    height=&#34;368&#34;
    alt=&#34;Uji+coba+server+web+build+in+php.png&#34;
    src=&#34;http://1.bp.blogspot.com/-a5zVUWb3pFk/V_no0tnn66I/AAAAAAAADUs/qzgltxRLU7gqTFWUdx3bGeH98EMTVgaeQCK4B/s1600/Uji%2Bcoba%2Bserver%2Bweb%2Bbuild%2Bin%2Bphp.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Kita akan mendapatkan &lt;em&gt;error 404&lt;/em&gt;, karena tidak ada file &lt;code&gt;index.php&lt;/code&gt; di &lt;em&gt;root&lt;/em&gt;
dokumen server tersebut. Berikut ini log yang akan tampil di terminal.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;petanikode@imajinasi ~ $ php -S localhost:8000
PHP 7.0.8-0ubuntu0.16.04.3 Development Server started at Sun Oct  9 14:43:04 2016
Listening on http://localhost:8000
Document root is /home/petanikode
Press Ctrl-C to quit.
[Sun Oct  9 14:49:15 2016] 127.0.0.1:40244 [404]: / - No such file or directory
[Sun Oct  9 14:49:15 2016] 127.0.0.1:40246 [404]: /favicon.ico - No such file or directory
[Sun Oct  9 14:49:15 2016] 127.0.0.1:40248 [404]: /favicon.ico - No such file or directory
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Untuk menghentikan server, tekan tombol &lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;c&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;h2 id=&#34;root-document&#34;&gt;Root Document&lt;/h2&gt;

&lt;p&gt;Root Document merupakan lokasi dari dokumen proyek atau web. Misalkan,
pada contoh percobaan di atas, root dokumennya berada di &lt;code&gt;/home/petanikode/&lt;/code&gt;.
Karena saya menjalankan perintah tersebut di home direktori.
Mari kita coba menggunakan root dokumen yang lain.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Buat sebuah direktori baru, kemudian masuk ke direktori tersebut&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  mkdir webku
  cd webku
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Buat sebuah file baru bernama &lt;code&gt;index.php&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  touch index.php
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Isi file tersebut dengan kode berikut ini&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;  &amp;lt;?php
  echo &amp;quot;Hallo, ini webku. Selamat datang ya&amp;quot;;
  ?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Keumudian jalankan servernya&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  php -S localhost:8000
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Berikut ini hasil output yang akan kita dapatkan.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;862&#34;
    height=&#34;368&#34;
    alt=&#34;Hasil+output+server+dengan+direktori+root+yang+berbeda.png&#34;
    src=&#34;http://2.bp.blogspot.com/-YkBn91rPNFo/V_nu52JjIeI/AAAAAAAADU8/XoCirCb8aUk8Lsv46LypT1AGxFjFvzEowCK4B/s1600/Hasil%2Boutput%2Bserver%2Bdengan%2Bdirektori%2Broot%2Byang%2Bberbeda.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Lokasi dokumen root juga dapat kita tentukan secara spesifik dengan arugmen &lt;code&gt;-t&lt;/code&gt;. Misalnya,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;php -S localhost:8000 -t /var/www/html/proyek-web/
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;menggunakan-skrip-router&#34;&gt;Menggunakan Skrip Router&lt;/h2&gt;

&lt;p&gt;Router fungsinya untuk mengatur arah dan tujuan. Misalkan,
sebuah permintaan &lt;em&gt;(request)&lt;/em&gt; dengan &lt;acronym title=&#34;Uniform Resource Identifier&#34;&gt;URI&lt;/acronym&gt;
&lt;code&gt;/profil&lt;/code&gt; maka arahkan atau buka halaman &lt;code&gt;profil.php&lt;/code&gt;.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Buatlah file baru pada direktori sebelumnya dengan nama &lt;code&gt;router.php&lt;/code&gt;, kemudian isi dengan kode berukut.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;  &amp;lt;?php // router.php
  switch ($_SERVER[&amp;quot;REQUEST_URI&amp;quot;]){

  case &amp;quot;/profil&amp;quot;:
    include(&amp;quot;profil.php&amp;quot;);
    break;
  case &amp;quot;/home&amp;quot;:
    echo &amp;quot;Ini halaman Home&amp;quot;;
    break;
  default:
    echo &amp;quot;404: Halaman tidak ditemukan&amp;quot;;

  }
  ?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Kemudian buatlah file bernama &lt;code&gt;profil.php&lt;/code&gt; dengan isi sebagai berikut.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;  &amp;lt;?php
  echo &amp;quot;Ini halaman profil&amp;quot;;
  ?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Jalankan servernya&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;  php -S localhost:8000 router.php
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hasil output yang akan kita dapatkan adalah seperti gambar ini.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;862&#34;
    height=&#34;368&#34;
    alt=&#34;Mozilla+Firefox_023.png&#34;
    src=&#34;https://3.bp.blogspot.com/-I0UD1uAfeec/V_pBrFH2nSI/AAAAAAAADVM/9hP64iz-PSg0MBxSgvP-CQ4-C8N-pYfwgCK4B/s1600/Mozilla%2BFirefox_023.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Nah, itulah cara menggunakan web server bawaan PHP. Lebih lengkapnya, bisa
dipelajari di dokumentasi PHP. Sekian tulisan kali ini, mudah-mudahan bermanfaat.&lt;/p&gt;

&lt;p&gt;Referensi: &lt;a href=&#34;http://php.net/manual/en/features.commandline.webserver.php&#34;&gt;php.net&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Apa Perbedaan Fungsi base_url() dengan fungsi site_url() di CodeIgniter?</title>
      <link>http://petanikode.com/2016/05/apa-perbedaan-fungsi-base_url-dengan-fungsi-site_url-di-codeigniter/</link>
      <pubDate>Sat, 28 May 2016 16:39:00 +0000</pubDate>
      
      <guid>http://petanikode.com/2016/05/apa-perbedaan-fungsi-base_url-dengan-fungsi-site_url-di-codeigniter/</guid>
      <description>

&lt;p&gt;&lt;amp-img
width=&#34;800&#34;
height=&#34;394&#34;
alt=&#34;codeigniter+-+petanikode.png&#34;
src=&#34;http://2.bp.blogspot.com/-r7g_YeB-NTQ/V0lW1e95hSI/AAAAAAAAC1o/bhW4YMd7ydQykOypeSd4xlfr15lhAvshACK4B/s1600/codeigniter%2B-%2Bpetanikode.png&#34;
layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Fungis &lt;code&gt;base_url()&lt;/code&gt; dan &lt;code&gt;site_url()&lt;/code&gt; merupakan dua fungsi untuk mengambil URL web pada framework CodeIgniter. Kedua fungsi ini dapat digunakan dengan mengaktifkan &lt;em&gt;helper&lt;/em&gt; &lt;code&gt;url&lt;/code&gt; terlebih dahulu.&lt;/p&gt;

&lt;h2 id=&#34;fungsi-base-url&#34;&gt;Fungsi &lt;code&gt;base_url()&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;fungsi &lt;code&gt;base_url()&lt;/code&gt; akan menghasilkan sebuah url dasar berdasarkan konfigurasi diisi pada &lt;code&gt;config.php&lt;/code&gt;. Misalkan konfigurasinya seperti ini.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;$config[&#39;base_url&#39;] = &#39;http://petanikode.com/&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Maka, ketika kita menggunakan fungsi &lt;code&gt;base_url()&lt;/code&gt;, akan mendapatkan nilai:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http://petanikode.com/
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;fungsi-site-url&#34;&gt;Fungsi &lt;code&gt;site_url()&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Seperti namanya, fungsi &lt;code&gt;site_url()&lt;/code&gt; akan menghasilkan URL atau alamat web beserta file index-nya. Misalkan konfigurasi webnya seperti berikut ini.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$config[&#39;base_url&#39;] = &#39;http://petanikode.com/&#39;;
$config[&#39;index_page&#39;] = &#39;index.php&#39;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Maka, ketika kita menggunakan fungsi &lt;code&gt;site_url()&lt;/code&gt;, akan mendapatkan nilai:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http://petanikode.com/index.php
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;h2 id=&#34;kapan-base-url-dan-site-url-dipakai&#34;&gt;Kapan &lt;code&gt;base_url()&lt;/code&gt; dan &lt;code&gt;site_url()&lt;/code&gt; dipakai?&lt;/h2&gt;

&lt;p&gt;Sesui hasil yang didapatkan dari fungsi tersebut, anda bisa menebak sendiri kapan waktu yang tepat menggunakan kedua fungsi tersebut. Fungsi &lt;code&gt;base_url()&lt;/code&gt; biasanya digunakan untuk membuat URL dari &lt;em&gt;resource&lt;/em&gt; yang berada di direktori awal &lt;em&gt;(root)&lt;/em&gt; web. Contohnya, sering dipakai untuk membuat URL &lt;em&gt;assets&lt;/em&gt; seperti berikut ini.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
width=&#34;1102&#34;
height=&#34;194&#34;
alt=&#34;Contoh+penggunaan+fungsi+base_url+codeigniter+-+petanikode.png&#34;
src=&#34;http://1.bp.blogspot.com/-EUamVuxQjSg/V0lS0Bkh_BI/AAAAAAAAC1E/KYwq8_MGsM4kNi-bIqY-jvWCVYLf1DtpACK4B/s1600/Contoh%2Bpenggunaan%2Bfungsi%2Bbase_url%2Bcodeigniter%2B-%2Bpetanikode.png&#34;
layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Baca juga: &lt;a href=&#34;http://petanikode.com/2016/08/mengapa-harus-menggunakan-fungsi-base_url-untuk-menyisipkan-file-aset/&#34;&gt;Mengapa Harus Menggunakan Fungsi base_url() untuk Menyisipkan File Aset?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Sementara itu, fungsi &lt;code&gt;site_url()&lt;/code&gt; sering digunakan untuk membuat URL ke &lt;em&gt;Controller&lt;/em&gt; atau dengan kata lain, fungsi ini dipakai untuk mengakses Controller tertentu. Contoh penggunaanya sebagai berikut.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
width=&#34;977&#34;
height=&#34;252&#34;
alt=&#34;Penggunaan+fungsi+site_url+untuk+mengakses+controller+CI+-+Petani+Kode.png&#34;
src=&#34;https://2.bp.blogspot.com/-HXg3x6Hj7uo/V62O31kbnyI/AAAAAAAADIs/HVEUePK8JTQK48MpMkpMFY2jXMG8p7jWgCK4B/s1600/Penggunaan%2Bfungsi%2Bsite_url%2Buntuk%2Bmengakses%2Bcontroller%2BCI%2B-%2BPetani%2BKode.png&#34;
layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Contoh lain penggunaan fungsi &lt;code&gt;site_url()&lt;/code&gt; untuk mengalihkan &lt;em&gt;(redirect)&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
width=&#34;825&#34;
height=&#34;255&#34;
alt=&#34;Penggunaan+fungsi+site_url+untuk+redirect.png&#34;
src=&#34;https://2.bp.blogspot.com/-aOcIvxTEusw/V62PbakJ2mI/AAAAAAAADI0/cLRBz_hE-YsXYVroi9shLYlmtxx4hmPFwCK4B/s1600/Penggunaan%2Bfungsi%2Bsite_url%2Buntuk%2Bredirect.png&#34;
layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;h2 id=&#34;kesimpulan&#34;&gt;Kesimpulan&lt;/h2&gt;

&lt;p&gt;Fungsi &lt;code&gt;base_url()&lt;/code&gt; dan fungsi &lt;code&gt;site_url()&lt;/code&gt; adalah fungsi bantuan dari &lt;em&gt;url helper&lt;/em&gt;. Fungsi ini digunakan untk mengambil URL dasar dan URL web. fungsi &lt;code&gt;base_url()&lt;/code&gt; digunakan untuk membangun url untuk mengakses resource yang barada di direktori &lt;em&gt;root&lt;/em&gt; web. Sedangkan fungsi &lt;code&gt;site_url()&lt;/code&gt; digunakan untuk mengakses &lt;em&gt;Controller&lt;/em&gt; tertentu.&lt;/p&gt;

&lt;p&gt;Kurang-lebih, begitulah kesimpulan dari saya. Mungkin ada yang kurang tepat, silahkan ditambahakan.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Kode CRUD dalam Satu File PHP</title>
      <link>http://petanikode.com/2016/03/kode-crud-dalam-satu-file-php/</link>
      <pubDate>Thu, 31 Mar 2016 18:21:00 +0000</pubDate>
      
      <guid>http://petanikode.com/2016/03/kode-crud-dalam-satu-file-php/</guid>
      <description>&lt;p&gt;Pernah mebayangkan, tidak? Membuat CRUD &lt;em&gt;(Create, Read, Update, Delete)&lt;/em&gt; dalam
satu file PHP. Biasanya, membuat CRUD dilakukan dengan membuat file terpisah.
Masing-masing file mewakili CRUD. Misalkan file &lt;em&gt;create.php&lt;/em&gt; untuk menambahkan
data, &lt;em&gt;read.php&lt;/em&gt; untuk menampikan data, &lt;em&gt;update.php&lt;/em&gt; untuk mengubah data, dan
&lt;em&gt;delete.php&lt;/em&gt; untuk menghapus data. Bagaimana kalau, semuanya digabungkan ke
dalam satu file PHP?&lt;/p&gt;

&lt;p&gt;Pada kesempatan ini, saya ingin membagikan sebuah kode CRUD yang ditulis dalam
satu file PHP. Kode ini, saya buat dengan koneksi database menggunakan API &lt;em&gt;mysqli&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Dalam kode, terdapat empat fungsi yang mewakili CRUD. Pertama fungsi &lt;code&gt;tambah()&lt;/code&gt;
untuk menambahkan data. Kedua fungsi &lt;code&gt;tampil_data()&lt;/code&gt; untuk membaca data dan
menampilkanya dalam bentuk tabel. Ketiga fungsi &lt;code&gt;ubah()&lt;/code&gt; untuk mengubah data.
Terakhir ada fungsi &lt;code&gt;hapus()&lt;/code&gt; untuk menghapus data.&lt;/p&gt;

&lt;p&gt;Fungsi-fungsi tersebut dipanggil pada fungsi (program) utama. Program utama
bertindak sebagai router yang mengatur pemanggilan fungsi. Misalkan, pada
halaman Home, fungsi yang dipanggil adalah &lt;code&gt;tambah_data()&lt;/code&gt; dan &lt;code&gt;tampil_data()&lt;/code&gt;.
Hal ini bisa dilakukan dengan stuktur pemilihan &lt;em&gt;Switch/Case&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Kode lengkapnya bisa dicek di &lt;a href=&#34;https://github.com/petanikode/curd-pertanian&#34;&gt;github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;amp-iframe width=&#34;600&#34; height=&#34;700&#34;
    layout=&#34;responsive&#34;
    sandbox=&#34;allow-forms allow-scripts allow-same-origin allow-modals allow-popups&#34;
    frameborder=&#34;0&#34;
    src=&#34;https://cdn.rawgit.com/petanikode/cdn-petanikode/3217e023/amp-gist.html?url=https://gist.github.com/ardianta/83d60cd7f3c5adb060fd804a206f2158&#34;&gt;
&lt;/amp-iframe&gt;&lt;/p&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;p&gt;Sementara untuk database yang digunakan bernama pertanian. Database ini memiliki
sebuah tabel bernama _tabel&lt;em&gt;panen&lt;/em&gt;. Tabel panen digunakan untuk menyimpan data
panen pertanian. Berikut ini stuktur _tabel&lt;em&gt;penen&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;1352&#34;
    height=&#34;602&#34;
    alt=&#34;Struktur+tabel+pertanian+-+crud+dalam+satu+file+php+-+petani+kode.png&#34;
    src=&#34;https://4.bp.blogspot.com/-9wONg1kdO3Q/Vvug9hW9cuI/AAAAAAAAClQ/agQVDbVLlyAG4FvyPPYuMLS5AScjSizuQ/s1600/Struktur%2Btabel%2Bpertanian%2B-%2Bcrud%2Bdalam%2Bsatu%2Bfile%2Bphp%2B-%2Bpetani%2Bkode.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;File SQL-nya tersedia di github: &lt;a href=&#34;https://github.com/petanikode/curd-pertanian/blob/master/pertanian.sql&#34;&gt;pertanian.sql&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Tampilan atau hasil output kode masih dalam bentuk polos. Saya tidak menggunakan
CSS maupun Javascript. Hanya terdapat PHP dan HTML saja. Berikut ini cuplikan tampilannya.&lt;/p&gt;

&lt;p&gt;Halaman &lt;em&gt;Home&lt;/em&gt; atau halaman utama &lt;em&gt;(index.php)&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;923&#34;
    height=&#34;600&#34;
    alt=&#34;Halaman+Home+-+CRUD+dalam+satu+file+php.png&#34;
    src=&#34;http://4.bp.blogspot.com/-209OSDN5vUI/Vvz05Tf8W_I/AAAAAAAAClk/DfR1UcrDTUgYndpuvZIdGYkxyT5oBMkuQ/s1600/Halaman%2BHome%2B-%2BCRUD%2Bdalam%2Bsatu%2Bfile%2Bphp.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Halaman &lt;em&gt;(form)&lt;/em&gt; tambah data:&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;923&#34;
    height=&#34;386&#34;
    alt=&#34;Halaman+Create+-+CRUD+dalam+satu+file+php.png&#34;
    src=&#34;http://3.bp.blogspot.com/-h8GF2O3srqI/Vvz1C3zl7XI/AAAAAAAACls/4en9pJoAzQc-tuosZkRsQLXOfiqktMorw/s1600/Halaman%2BCreate%2B-%2BCRUD%2Bdalam%2Bsatu%2Bfile%2Bphp.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Halaman tampil data:&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;923&#34;
    height=&#34;386&#34;
    alt=&#34;Halaman+Read+Data+-+CRUD+dalam+satu+file+php.png&#34;
    src=&#34;http://2.bp.blogspot.com/-hQ-1ygzfj8M/Vvz1MMzrDFI/AAAAAAAACl0/Un_t5yYpsIoYHR46clTHfK3t4Z37srKpA/s1600/Halaman%2BRead%2BData%2B-%2BCRUD%2Bdalam%2Bsatu%2Bfile%2Bphp.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Halaman &lt;em&gt;(form)&lt;/em&gt; ubah data:&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;923&#34;
    height=&#34;386&#34;
    alt=&#34;Halaman+Update+-+CRUD+dalam+satu+file+php.png&#34;
    src=&#34;http://2.bp.blogspot.com/-lsrvTMidEvc/Vvz1THw_ZsI/AAAAAAAACl8/zMbyn_7J9zIRl_zsfiGEAuVIjoH9NG9QQ/s1600/Halaman%2BUpdate%2B-%2BCRUD%2Bdalam%2Bsatu%2Bfile%2Bphp.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Demo:&lt;/p&gt;

&lt;p&gt;&lt;amp-youtube
    data-videoid=&#34;hND_ycfi1d0&#34;
    layout=&#34;responsive&#34;
width=&#34;480&#34; height=&#34;270&#34;&gt;&lt;/amp-youtube&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>7 Manfaat Inspect Element Bagi Web Developer</title>
      <link>http://petanikode.com/2016/01/7-manfaat-inspect-element-bagi-web-developer/</link>
      <pubDate>Thu, 14 Jan 2016 11:03:00 +0000</pubDate>
      
      <guid>http://petanikode.com/2016/01/7-manfaat-inspect-element-bagi-web-developer/</guid>
      <description>

&lt;p&gt;Inspect Element merupakan fitur browser yang dibuat untuk memudahkan web developer dalam mengembangkan web. Inspect Element dapat kita akses dengan klik kanan, kemudian memilih Inspect Element, atau bisa juga dengan menekan tombol &lt;code&gt;F12&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Adapun manfaat dari Inspect Element untuk web Developer adalah sebagai berikut.&lt;/p&gt;

&lt;h2 id=&#34;1-tempat-eksperimen-css&#34;&gt;1. Tempat Eksperimen CSS&lt;/h2&gt;

&lt;p&gt;Selain ada console Javascript, bisa dibilang di Inspect Elemen juga ada console-nya CSS. Ya, di sana kita bisa eksperimen kode CSS.&lt;/p&gt;

&lt;p&gt;Sebelum kita menulis kode CSS, sebaiknya gunakan Inspect Element terlebih dahulu. Karena saat kita menulis kode CSS di Inspect Elemen, browser akan langsung mengeksekusinya. Selain itu, kita diberikan fitur yang memudahkan penulisan CSS seperti autocomplete, colorpicker, filter, visual model box, dll.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;1366&#34;
    height=&#34;768&#34;
    alt=&#34;Edit CSS d iInspect Element&#34;
    src=&#34;https://4.bp.blogspot.com/-YA3lbRkw6z0/WKhR5OizENI/AAAAAAAAEAU/vxaVOYaLjBExO0cpMeCw1vnzf3lbMbrswCPcB/s1600/Edit%2BCSS%2Bdi%2BInspect%2BElement.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Kode CSS yang ditulis di Inspect Element bersifat temporer. Kita harus menyalinnya ke kode CSS di teks editor agar tersimpan.&lt;/p&gt;

&lt;h2 id=&#34;2-pengujian-web-responsif&#34;&gt;2. Pengujian Web Responsif&lt;/h2&gt;

&lt;p&gt;Kita tidak perlu punya banyak perangkat untuk pengujian responsif. Cukup manfaatkan Inspect Element, kita sudah bisa menggunakan berbagai jenis perangkat mobile.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;1270&#34;
    height=&#34;679&#34;
    alt=&#34;Pengujian+tampilan+responsif+web+di+inspect+element+-+petanikode.png&#34;
    src=&#34;https://3.bp.blogspot.com/-F0ipNxOxWnU/WKhTDjXhQzI/AAAAAAAAEAs/dASGP5AdMRgNdTrkNAd2JEkCZpBVom6rgCPcB/s1600/Pengujian%2Btampilan%2Bresponsif%2Bweb%2Bdi%2Binspect%2Belement%2B-%2Bpetanikode.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;h2 id=&#34;3-mengukur-kecepatan-web&#34;&gt;3. Mengukur Kecepatan Web&lt;/h2&gt;

&lt;p&gt;Kita dapat mengetahui seberapa lama web diunduh oleh browser dan berapa kecepatan dan ukuran kapasitas webnya? Silahkan gunakan fitur Network atau Timeline untuk melakukannya.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;1364&#34;
    height=&#34;678&#34;
    alt=&#34;Mengukur+kecepatan+web+di+inspect+element+-+petanikode.png&#34;
    src=&#34;https://4.bp.blogspot.com/-LDis0GBfR9s/WKhT0iA4nHI/AAAAAAAAEBA/XLqopt_G0nEd1pTUQGHrTMvBhfwTOGYAACPcB/s1600/Mengukur%2Bkecepatan%2Bweb%2Bdi%2Binspect%2Belement%2B-%2Bpetanikode.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;h2 id=&#34;4-debugging-javascript&#34;&gt;4. Debugging Javascript&lt;/h2&gt;

&lt;p&gt;Ada yang bilang, belajar javascript itu susah karena kita tidak tahu tempat error-nya.
Kadang, browser hanya menampilkan halaman kosong saat error.&lt;/p&gt;

&lt;p&gt;&lt;amp-twitter width=&#34;486&#34; height=&#34;657&#34;
    layout=&#34;responsive&#34;
    data-tweetid=&#34;818038227143561218&#34;&gt;
&lt;/amp-twitter&gt;&lt;/p&gt;

&lt;p&gt;Sebenarnya pendapat itu salah, karena kita bisa melihat pesan error javascript pada console-nya. Dimana console-nya? ya di dalam Inspect Elemen. Silahkan buka menu Console.&lt;/p&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;h2 id=&#34;5-alat-untuk-audit-web&#34;&gt;5. Alat untuk Audit Web&lt;/h2&gt;

&lt;p&gt;Audit perlu kita lakukan untuk meningkatkan kinerja web. Pada Inspect Elemen milik Google Chrome, kita disediakan fitur audit untuk mengetahui apa saja resource yang digunakan dan yang tidak digunakan.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;945&#34;
    height=&#34;500&#34;
    alt=&#34;Audit+web+di+Inspect+element+-+petanikode.png&#34;
    src=&#34;https://4.bp.blogspot.com/-vNQJtWwp3iM/WKhVV2r5KoI/AAAAAAAAEBU/7LlDpgbnLRYoPhmrJcpUIN2GUEBGK1oJwCPcB/s1600/Audit%2Bweb%2Bdi%2BInspect%2Belement%2B-%2Bpetanikode.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;h2 id=&#34;6-mengambil-screenshot-dengan-mudah&#34;&gt;6. Mengambil Screenshot dengan Mudah&lt;/h2&gt;

&lt;p&gt;Khusus di Firefox, kita disediakan fitur untuk mengambil screenshot web. Caranya, klik kanan pada elemen yang ingin di-screenshot, kemudian pilih &lt;em&gt;Screenshot Node&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;917&#34;
    height=&#34;525&#34;
    alt=&#34;mengambil+screenshoot+di+Inspect+element+firefox.png&#34;
    src=&#34;https://2.bp.blogspot.com/-xPgOdZAg8YY/WKhWPl_wGdI/AAAAAAAAEBs/K-eZEeDd8PMljRx03SLpEfkHFPj6LaJBgCPcB/s1600/mengambil%2Bscreenshoot%2Bdi%2BInspect%2Belement%2Bfirefox.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;h2 id=&#34;7-mengukur-performa-memori-dan-cpu&#34;&gt;7. Mengukur Performa Memori dan CPU&lt;/h2&gt;

&lt;p&gt;Semakin banyak tab yang kita buka di browser, semakin banyak pula memori yang akan dimakan. Selain itu, skrip-skrip pada web juga membuat CPU berkerja semakin keras. Untuk melihat performa memori dan CPU ketika membuka web, silahkan masuk ke menu &lt;em&gt;Timeline&lt;/em&gt; pada Google Chrome. Sedangkan di Firefox, masuk ke &lt;em&gt;Performance&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;861&#34;
    height=&#34;680&#34;
    alt=&#34;Mengukur+Performa+Web.png&#34;
    src=&#34;https://4.bp.blogspot.com/-FFcmZfK42IM/WKhWgp7E1bI/AAAAAAAAEB0/ATHEopUYKrww2uDAKimbKK8B-OlZfiLzACPcB/s1600/Mengukur%2BPerforma%2BWeb.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Itulah 7 manfaat Inspect Element bagi web developer. Sebanarnya masih banyak lagi manfaat dari Inspect Element yang belum kita ketahui. Selebihnya silahkan cari sendiri atau jika mau menambahkan silahkan corat-coret di komentar.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>