<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Belajar Git on Petani Kode — Programmer Pengguna Linux</title>
    <link>https://www.petanikode.com/seri/belajar-git/index.xml</link>
    <description>Recent content in Belajar Git on Petani Kode — Programmer Pengguna Linux</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>id-id</language>
    <copyright>Copyright (c) 2017, Petani Kode; all rights reserved.</copyright>
    <atom:link href="https://www.petanikode.com/seri/belajar-git/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Tutorial Git 07 - Percabangan</title>
      <link>https://www.petanikode.com/tutorial-git-07---percabangan/</link>
      <pubDate>Mon, 27 Feb 2017 19:20:26 +0800</pubDate>
      
      <guid>https://www.petanikode.com/tutorial-git-07---percabangan/</guid>
      <description>

&lt;p&gt;Bayangkan anda sedang bekerja dengan tim pada suatu repositori Git.
Repositori ini dikerjakan secara bersama-sama.&lt;/p&gt;

&lt;p&gt;Kadang&amp;hellip; akan terjadi konflik, karena kode yang kita tulis berbeda
dengan yang lain.&lt;/p&gt;

&lt;p&gt;Misalnya, Si A menulis kode untuk fitur X dengan algoritma yang ia ketahui.
Sedangkan si B menulis dengan algoritma yang berbeda.&lt;/p&gt;

&lt;p&gt;Lalu mereka melakukan &lt;em&gt;commit&lt;/em&gt;, dan kode sumber jadi berantakan. Anggota tim yang
lain menjadi pusing.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;697&#34;
    height=&#34;464&#34;
    alt=&#34;konflik pada repositori git&#34;
    src=&#34;https://2.bp.blogspot.com/-DEigCiYJJfY/WLMaWoeoONI/AAAAAAAAELQ/qvDUmoiDWQMElIHdl8y4qkT0ZsjDk6TzQCPcB/s1600/konflik-branch-repositori-git.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Agar tidak terjadi hal yang seperti ini, kita harus membuat cabang &lt;em&gt;(branch)&lt;/em&gt;
tersendiri.&lt;/p&gt;

&lt;p&gt;Misalnya, si A akan mengerjakan fitur X, maka dia harus membuat cabang
sendiri. Si A akan bebas melakukan apapun di cabangnya tanpa menggangu
cabang utama &lt;em&gt;(master)&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&#34;cara-membuat-cabang-baru&#34;&gt;Cara Membuat Cabang Baru&lt;/h2&gt;

&lt;p&gt;Perintah untuk membuat cabang adalah &lt;code&gt;git branch&lt;/code&gt;, kemudian diikuti dengan
nama cabangnya.&lt;/p&gt;

&lt;p&gt;Contoh:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git branch fitur_register
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Maka Git akan membuat cabang bernama &lt;code&gt;fitur_register&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;697&#34;
    height=&#34;376&#34;
    alt=&#34;percabganan-di-repositori-git.png&#34;
    src=&#34;https://4.bp.blogspot.com/-A8Ps8Hfz-Wg/WLMdwfZK7WI/AAAAAAAAELg/n2TAtUoTztIa_mk2ldClsO0Vy_5dJuJgQCPcB/s1600/percabganan-di-repositori-git.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Sekarang setiap orang memiliki cabangnya masing-masing. Mereka bebas bereksperimen.&lt;/p&gt;

&lt;p&gt;Untuk melihat cabang apa saja yang ada di repositori, gunakan perintah &lt;code&gt;git branch&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Contoh:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git branch
  halaman_login
* master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tanda bintang (&lt;code&gt;*&lt;/code&gt;) artinya cabang yang sedang aktif atau Kita sedang berada di sana.&lt;/p&gt;

&lt;h2 id=&#34;latihan&#34;&gt;Latihan&lt;/h2&gt;

&lt;p&gt;Untuk memantapkan pemahaman tentang percabangan Git, mari kita coba
praktik.&lt;/p&gt;

&lt;p&gt;Pada repositori, buatlah sebuah cabang baru.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git branch halaman_login
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Setelah itu, pindah ke cabang yang baru saja kita buat dengan perintah:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git checkout halaman_login
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lalu tambahkan file &lt;code&gt;login.html&lt;/code&gt;, isinya terserah anda.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;655&#34;
    height=&#34;413&#34;
    alt=&#34;pembuatan+branch+dan+eksperimen+di+branch.png&#34;
    src=&#34;https://3.bp.blogspot.com/-qk6qZNyJR1c/WLMiYx_zUnI/AAAAAAAAEL4/ogG3XTLt4jARb5VT-3TlA8gsOcHEZMtWwCPcB/s1600/pembuatan%2Bbranch%2Bdan%2Beksperimen%2Bdi%2Bbranch.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Tips: Jangan lupa untuk menggunakan printah &lt;code&gt;git status&lt;/code&gt; untuk melihat
status repositori.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Kita sudah menambahkan file &lt;code&gt;login.html&lt;/code&gt;. Selanjutnya kita lakukan &lt;em&gt;commit&lt;/em&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add login.html
git commit -m &amp;quot;membuat file login.html&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bagus! revisi kita pada cabang &lt;code&gt;halaman_login&lt;/code&gt; sudah disimpan. Sekarang
coba kembali ke cabang &lt;code&gt;master&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git checkout master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Apakah anda menemukan file &lt;code&gt;login.html&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;Pasti tidak!&lt;/p&gt;

&lt;p&gt;Sekarang kembali lagi ke cabang &lt;code&gt;halaman_login&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git checkout halaman_login
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Cek lagi, apakah sekarang file &lt;code&gt;login.html&lt;/code&gt; sudah ada?&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;project-01/
├── index.html
└── login.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ternyata ada. Yep! kita bisa mengambil kesimpulan, kalau perubahan
pada cabang &lt;code&gt;halaman_login&lt;/code&gt; tidak akan berpengaruh di cabang &lt;code&gt;master&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;h2 id=&#34;menggabungkan-cabang&#34;&gt;Menggabungkan Cabang&lt;/h2&gt;

&lt;p&gt;Anggaplah kita sudah selesai membuat fitur login di cabang &lt;code&gt;halaman_login&lt;/code&gt;.
Sekarang kita ingin Menggabungkannya denga cabang &lt;code&gt;master&lt;/code&gt; (utama).&lt;/p&gt;

&lt;p&gt;Pertama, kita harus pindah dulu ke cabang master.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git checkout master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Setelah itu, barulah kita bisa menggabungkan dengan perintah &lt;code&gt;git merge&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git merge halaman_login
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sekarang lihat, file &lt;code&gt;login.html&lt;/code&gt; sudah ada di cabang &lt;code&gt;master&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;614&#34;
    height=&#34;350&#34;
    alt=&#34;penggabungan cabang git&#34;
    src=&#34;https://1.bp.blogspot.com/-hEKLHRiPiU8/WLP9cNapCzI/AAAAAAAAEMk/v5L1F61DiWQiveuB6FNMB_m3GiWl58ObwCPcB/s1600/penggabungan%2Bcabang%2Bgit.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Hati-hati! kadang sering terjadi bentrok ketika menggabungkan cabang.&lt;/p&gt;

&lt;p&gt;&lt;amp-twitter width=486 height=657
    layout=&#34;responsive&#34;
    data-tweetid=&#34;835947140383821824&#34;&gt;
&lt;/amp-twitter&gt;&lt;/p&gt;

&lt;h2 id=&#34;mengatasi-bentrok&#34;&gt;Mengatasi Bentrok&lt;/h2&gt;

&lt;p&gt;Bentrok biasanya terjadi jika ada dua orang yang mengedit file yang sama.&lt;/p&gt;

&lt;p&gt;Kenapa bisa begitu, &amp;lsquo;kan mereka sudah punya cabang masing-masing?&lt;/p&gt;

&lt;p&gt;Bisa jadi, di cabang yang mereka kerjakan ada file yang sama dengan
cabang lain. Kemudian, saat digabungkan terjadi bentrok.&lt;/p&gt;

&lt;p&gt;Mengatasi bentrok adalah tugas dari pemilik atau pengelola repostiri.
Dia harus bertindak adil, kode mana yang harus diambil.&lt;/p&gt;

&lt;p&gt;Biasanya akan ada proses diskusi dulu dalam mengambil keputusan.&lt;/p&gt;

&lt;p&gt;Baiklah, sekarang kita akan coba membuat bentrokan :smile:.&lt;/p&gt;

&lt;p&gt;Pindah dulu ke branch &lt;code&gt;halaman_login&lt;/code&gt;&amp;hellip;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git checkout halaman_login
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Setela itu, edit file &lt;code&gt;login.html&lt;/code&gt; atau &lt;code&gt;index.html&lt;/code&gt;, karena kedua file tersebut
ada di kedua cabang yang akan kita gabungkan.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git diff
diff --git a/login.html b/login.html
index 23a3f5c..eea5658 100644
--- a/login.html
+++ b/login.html
@@ -1 +1 @@
-di sini berisi kode untuk halaman login
+&amp;lt;p&amp;gt;di sini berisi kode untuk halaman login&amp;lt;p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Setelah itu, lakukan &lt;em&gt;commit&lt;/em&gt; lagi:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add login.html
git commit -m &amp;quot;ubah isi login.html&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Selanjutnya pindah ke cabang &lt;code&gt;master&lt;/code&gt; dan lakukan perubahan juga di cabang ini.
Ubah file yang sama seperti di cabang &lt;code&gt;halaman_login&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Setelah itu, lakukan &lt;em&gt;commit&lt;/em&gt; di cabang &lt;code&gt;master&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add login.html
git commit -m &amp;quot;ubah isi login.html di cabang master&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Terakhir, coba gabungkan cabang &lt;code&gt;halaman_login&lt;/code&gt; dengan cabang &lt;code&gt;master&lt;/code&gt;,
maka akan terjadi bentrok.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git merge halaman_login
Auto-merging login.html
CONFLICT (content): Merge conflict in login.html
Automatic merge failed; fix conflicts and then commit the result.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nah, kita disuruh perbaiki kode yang bentrok. Sekarang buka &lt;code&gt;login.html&lt;/code&gt;
dengan teks editor.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;589&#34;
    height=&#34;269&#34;
    alt=&#34;kode+yang+bentrok.png&#34;
    src=&#34;https://3.bp.blogspot.com/-WU41K9x2aN0/WLQBmbmc42I/AAAAAAAAEM8/-Y5sfmgLtHcufrRScaZHhOWdwvhBeLdmQCPcB/s1600/kode%2Byang%2Bbentrok.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Kedua kode cabang dipisahkan dengan tanda &lt;code&gt;======&lt;/code&gt;. Sekarang..
tugas kita adalah memperbaikinya.&lt;/p&gt;

&lt;p&gt;Silahkan eliminasi salah satu dari kode tersebut.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;589&#34;
    height=&#34;199&#34;
    alt=&#34;Eliminasi+kode+yang+bentrok.png&#34;
    src=&#34;https://2.bp.blogspot.com/-VBYWI4fCPd8/WLQCg9MDyJI/AAAAAAAAENQ/DI_SKIVd-yclfzHJNGBX4o330Yur63kuwCPcB/s1600/Eliminasi%2Bkode%2Byang%2Bbentrok.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Setelah itu lakukan &lt;em&gt;commit&lt;/em&gt; untuk menyimpan perubahan ini.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add login.html
git commit -m &amp;quot;perbaiki konflik&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bagus! bentrokan antar ormas programmer sudah beres :smile:.&lt;/p&gt;

&lt;h2 id=&#34;menghapus-cabang&#34;&gt;Menghapus Cabang&lt;/h2&gt;

&lt;p&gt;Cabang yang sudah mati atau tidak ada pengembangan lagi, sebaiknya dihapus.&lt;/p&gt;

&lt;p&gt;Agar repositori kita bersih dan rapi.&lt;/p&gt;

&lt;p&gt;Cara menghapus cabang, gunakan perintah &lt;code&gt;git branch&lt;/code&gt; dengan argumen &lt;code&gt;-d&lt;/code&gt;
dan diikuti dengan nama cabangnya.&lt;/p&gt;

&lt;p&gt;Contoh:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git branch -d halaman_login
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;akhir-kata&#34;&gt;Akhir Kata&amp;hellip;&lt;/h2&gt;

&lt;p&gt;Sekian tutorial ini. Semoga ada manfaatnya.&lt;/p&gt;

&lt;p&gt;Referensi: &lt;a href=&#34;https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/&#34;&gt;help.github.com&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tutorial Git 06 - Membatalkan Revisi</title>
      <link>https://www.petanikode.com/tutorial-git-06---membatalkan-revisi/</link>
      <pubDate>Tue, 21 Feb 2017 14:55:42 +0800</pubDate>
      
      <guid>https://www.petanikode.com/tutorial-git-06---membatalkan-revisi/</guid>
      <description>

&lt;p&gt;Pada &lt;a href=&#34;http://petanikode.com/2017/02/tutorial-git-05---melihat-perbandingan-revisi/&#34;&gt;tutorial git 05&lt;/a&gt;,
kita sudah belajar cara melihat perbedaan di setiap revisi.
Sekarang kita akan belajar, cara membatalkan sebuah revisi.&lt;/p&gt;

&lt;p&gt;Terkadang pada perubahan yang kita lakukan terjadi kesalahan dan kita ingin
mengembalikannya seperti keadaan sebelumnya. Maka kita perlu menyuruh git untuk
megembalikannya. Ada beberapa perintah yang digunakan diantaranya: &lt;code&gt;git checkout&lt;/code&gt;,
&lt;code&gt;git reset&lt;/code&gt;, dan &lt;code&gt;git revert&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;membatalkan-perubahan&#34;&gt;Membatalkan Perubahan&lt;/h2&gt;

&lt;p&gt;Jika revisi kita belum &lt;em&gt;staged&lt;/em&gt; ataupun &lt;em&gt;committed&lt;/em&gt;, kita bisa mengembalikannya
menggunakan perintah &lt;code&gt;git checkout nama_file.html&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Contoh: Misalkan kita akan merubah isi dari file &lt;code&gt;index.html&lt;/code&gt; pada repositori &lt;code&gt;project-01&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Sebelum diubah:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
    &amp;lt;head&amp;gt;
        &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
        &amp;lt;title&amp;gt;Belajar Git - Project 01&amp;lt;/title&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;p&amp;gt;Hello Dunia!, Saya sedang belajar Git&amp;lt;/p&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Setelah diubah:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
    &amp;lt;head&amp;gt;
        &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
        &amp;lt;title&amp;gt;Belajar Git - Project 01&amp;lt;/title&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;p&amp;gt;Hello Dunia!, Saya sudah belajar Git&amp;lt;/p&amp;gt;
        &amp;lt;p&amp;gt;Belajar git ternyata cukup menyenangkan&amp;lt;/p&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil &lt;code&gt;git diff&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git diff
diff --git a/index.html b/index.html
index c5082e6..115efcb 100644
--- a/index.html
+++ b/index.html
@@ -5,6 +5,7 @@
         &amp;lt;title&amp;gt;Belajar Git - Project 01&amp;lt;/title&amp;gt;
     &amp;lt;/head&amp;gt;
     &amp;lt;body&amp;gt;
-        &amp;lt;p&amp;gt;Hello Dunia!, Saya sedang belajar Git&amp;lt;/p&amp;gt;
+        &amp;lt;p&amp;gt;Hello Dunia!, Saya sudah belajar Git&amp;lt;/p&amp;gt;
+        &amp;lt;p&amp;gt;Belajar git ternyata cukup menyenangkan&amp;lt;/p&amp;gt;
     &amp;lt;/body&amp;gt;
 &amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sekarang kita akan membatalkan perubahan tersebut. Karena kita belum melakukan
&lt;em&gt;stage&lt;/em&gt; dan &lt;em&gt;commit&lt;/em&gt;, maka kita bisa menggnakan perintah:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git checkout index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Perubahan yang baru saja kita lakukan akan dibatalkan. Kalau tidak percaya,
coba saja periksa file yang sudah dirubah tadi atau cek dengan perintah &lt;code&gt;git status&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git status
On branch master
nothing to commit, working directory clean
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hati-hati! Terkadang perintah ini sangat berbahaya, karena akan menghapus
perubahan yang baru saja dilakukan. Bila kita sudah merubah banyak hal, maka
itu akan sia-sia setelah menjalankan perintah ini.&lt;/p&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;h2 id=&#34;membatalkan-perubahan-file-yang-sudah-dalam-kondisi-staged&#34;&gt;Membatalkan Perubahan File yang Sudah dalam Kondisi &lt;em&gt;staged&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;Kondisi &lt;em&gt;staged&lt;/em&gt; merupakan kondisi file yang sudah di &lt;em&gt;add&lt;/em&gt; (&lt;code&gt;git add&lt;/code&gt;),
namun belum disimpan (&lt;code&gt;git commit&lt;/code&gt;) ke dalam Git.&lt;/p&gt;

&lt;p&gt;Sebagai contoh, kita lakukan perubahan lagi di file &lt;code&gt;index.html&lt;/code&gt; seperti pada
contoh sebelumnya.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git diff
diff --git a/index.html b/index.html
index c5082e6..c99aa5b 100644
--- a/index.html
+++ b/index.html
@@ -5,6 +5,7 @@
         &amp;lt;title&amp;gt;Belajar Git - Project 01&amp;lt;/title&amp;gt;
     &amp;lt;/head&amp;gt;
     &amp;lt;body&amp;gt;
-        &amp;lt;p&amp;gt;Hello Dunia!, Saya sedang belajar Git&amp;lt;/p&amp;gt;
+        &amp;lt;p&amp;gt;Hello Dunia!, Saya sudah belajar Git&amp;lt;/p&amp;gt;
+        &amp;lt;p&amp;gt;Belajar git ternyata gampang-gampang susah&amp;lt;/p&amp;gt;
     &amp;lt;/body&amp;gt;
 &amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Setelah itu, kita ubah kondisi file menjadi &lt;em&gt;staged&lt;/em&gt; dengan perintah:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Cek statunya dulu:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git status
On branch master
Changes to be committed:
  (use &amp;quot;git reset HEAD &amp;lt;file&amp;gt;...&amp;quot; to unstage)

	modified:   index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nah, file &lt;code&gt;index.html&lt;/code&gt; sudah masuk ke dalam kondisi &lt;em&gt;staged&lt;/em&gt;. Untuk mengubahnya
menjadi kondisi &lt;em&gt;modified&lt;/em&gt;, kita bisa menggunakan perintah &lt;code&gt;git reset&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git reset index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Cek statusnya lagi:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ git status
On branch master
Changes not staged for commit:
  (use &amp;quot;git add &amp;lt;file&amp;gt;...&amp;quot; to update what will be committed)
  (use &amp;quot;git checkout -- &amp;lt;file&amp;gt;...&amp;quot; to discard changes in working directory)

	modified:   index.html

no changes added to commit (use &amp;quot;git add&amp;quot; and/or &amp;quot;git commit -a&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sekarang file &lt;code&gt;index.html&lt;/code&gt; sudah dalam kondisi &lt;em&gt;modified&lt;/em&gt;, kita bisa membatalkan
perubahannya dengan perintah &lt;code&gt;git checkout&lt;/code&gt; seperti contoh sebelumnya.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git checkout index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Maka perubahan yang kita lakukan akan dibatalkan, :smile:.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;666&#34;
    height=&#34;343&#34;
    alt=&#34;git-reset-petanikode.png&#34;
    src=&#34;https://1.bp.blogspot.com/-nKfz_yfDVa0/WKv4RFDPcdI/AAAAAAAAEHQ/pV5A9iL7cUUyK02t_1yNwRsquFr9x4dnQCPcB/s1600/git-reset-petanikode.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;h2 id=&#34;membatalkan-perubahan-file-yang-sudah-dalam-kondisi-commited&#34;&gt;Membatalkan Perubahan File yang Sudah dalam Kondisi &lt;em&gt;Commited&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;Sekarang bagaimana kalau filenya sudah dalam kondisi &lt;em&gt;commited&lt;/em&gt; dan kita ingin
mengembalikannya? Untuk melakukan ini, kita harus mengetahui nomer &lt;em&gt;commit&lt;/em&gt;,
kemudian mengembalikan perubahannya seperti pada nomer &lt;em&gt;commit&lt;/em&gt; tersebut.&lt;/p&gt;

&lt;p&gt;Misalkan, kita ubah kembali file &lt;code&gt;index.html&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-gitdiff&#34;&gt;$ git diff
diff --git a/index.html b/index.html
index c5082e6..3c150a8 100644
--- a/index.html
+++ b/index.html
@@ -5,6 +5,7 @@
         &amp;lt;title&amp;gt;Belajar Git - Project 01&amp;lt;/title&amp;gt;
     &amp;lt;/head&amp;gt;
     &amp;lt;body&amp;gt;
-        &amp;lt;p&amp;gt;Hello Dunia!, Saya sedang belajar Git&amp;lt;/p&amp;gt;
+        &amp;lt;p&amp;gt;Hello Dunia!, Saya sudah belajar Git&amp;lt;/p&amp;gt;
+        &amp;lt;p&amp;gt;Belajar Git Greget!&amp;lt;/p&amp;gt;
     &amp;lt;/body&amp;gt;
 &amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Kemudian kita melakukan &lt;em&gt;commit&lt;/em&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add index.html
git commit -m &amp;quot;belajar git greget!&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sekarang kita akan melihat nomer commit dengan perintah &lt;code&gt;git log&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;655&#34;
    height=&#34;413&#34;
    alt=&#34;cek+nomer+commit+dengan+git+log+-+petanikode.png&#34;
    src=&#34;https://2.bp.blogspot.com/-vppCXWn5slY/WKvztiN-TRI/AAAAAAAAEG4/rpE8yVDIHA8CBu51Snc7U1e58kdrbHl8ACPcB/s1600/cek%2Bnomer%2Bcommit%2Bdengan%2Bgit%2Blog%2B-%2Bpetanikode.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Kita akan mengembalikan kondisi file &lt;code&gt;index.html&lt;/code&gt;, seperti pada &lt;em&gt;commit&lt;/em&gt;
sebelumnya. Maka kita bisa menggunakan perintah:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git checkout b05f7d05c9298f2cd11b870369f3cf4b2350eca7 index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Seperti mesin waktu, kita sudah mengembalikan keadaan file &lt;code&gt;index.html&lt;/code&gt; seperti
keadaan saat &lt;em&gt;commit&lt;/em&gt; tersebut. Namun, saat ini kondisi &lt;code&gt;index.html&lt;/code&gt; dalam
keadaan &lt;em&gt;staged&lt;/em&gt;. Kita bisa kembalikan ke dalam kondisi &lt;em&gt;modified&lt;/em&gt; dengan perintah
&lt;code&gt;git reset&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git reset index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pada contoh tersebut, kita sudah berhasil mengembalikan file &lt;code&gt;index.html&lt;/code&gt; ke dalam
keadaan seperti &lt;em&gt;commit&lt;/em&gt; sebelumnya. Apabila kita ingin mengembalikan seluruh file
dalam commit, kita cukup melakukan &lt;em&gt;checkout&lt;/em&gt; ke nomer &lt;em&gt;commit&lt;/em&gt; saja, tanpa diikuti
nama file. Contoh:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git checkout ac6d798f98bac5fad693ef8159f957c5b0805c23
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Catatan:&lt;/strong&gt; Perintah ini akan mengembalikan semua file dalam kondisi
pada nomer commit yang diberikan, namun bersifat temporer.&lt;/p&gt;

&lt;h2 id=&#34;kembali-ke-3-commit-sebelumnya&#34;&gt;Kembali ke 3 Commit sebelumnya&lt;/h2&gt;

&lt;p&gt;Untuk kembali ke 3 &lt;em&gt;commit&lt;/em&gt; sebelumnya, kita bisa menggunakan perintah berikut.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git checkout HEAD~3 index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;membatalkan-semua-perubahan-yang-ada&#34;&gt;Membatalkan Semua Perubahan yang ada&lt;/h2&gt;

&lt;p&gt;Jika kita ingin mengembalikan semua file ke suatu commit, kita
bisa melakukannya dengan perintah:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git revert -n &amp;lt;nomer commit&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Contoh:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git revert -n 2400ba0e258bd6a144caa273012b130d6baa5e42
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;akhir-kata&#34;&gt;Akhir Kata&lt;/h2&gt;

&lt;p&gt;OK, sekian dulu tutorial ke-6 ini. Rasanya agak kepanjangan. Terima kasih
sudah membaca. Sampai jumpa di &lt;a href=&#34;https://www.petanikode.com/2017/02/tutorial-git-07---percabangan/&#34;&gt;tutorial ke-7&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tutorial Git 05 - Melihat Perbandingan Revisi</title>
      <link>https://www.petanikode.com/tutorial-git-05---melihat-perbandingan-revisi/</link>
      <pubDate>Thu, 16 Feb 2017 13:56:42 +0800</pubDate>
      
      <guid>https://www.petanikode.com/tutorial-git-05---melihat-perbandingan-revisi/</guid>
      <description>

&lt;p&gt;Pada tutorial sebelumnya, kita sudah belajar cara melihat log revisi di repositori.
Sekarang kita kan peljari perintah &lt;code&gt;git diff&lt;/code&gt;, fungsinya untuk melihat perbedaan
perubahan di revisi.&lt;/p&gt;

&lt;h2 id=&#34;melihat-perbandingan-perubahan-yang-dilakukan-pada-revisi&#34;&gt;Melihat Perbandingan Perubahan yang Dilakukan pada Revisi&lt;/h2&gt;

&lt;p&gt;Gunakan perintah berikut ini untuk melihat perubahan yang dilakukan pada revisi
tertentu.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git diff cf08ca0837cf26f1c595be36bb3a6b815e311be1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;cf08ca0837cf26f1c595be36bb3a6b815e311be1&lt;/code&gt; adalah nomer revisi yang ingin dilihat.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;655&#34;
    height=&#34;413&#34;
    alt=&#34;Git+diff+pada+nomer+revisi.png&#34;
    src=&#34;https://2.bp.blogspot.com/-TTQ75FYjK0A/WKLaGx0rtXI/AAAAAAAAD6w/LYC6kmS0i9MZsPHTcVSysZttpiAoYmNDwCPcB/s1600/Git%2Bdiff%2Bpada%2Bnomer%2Brevisi.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Lihatlah hasil di atas, simbol plus (&lt;code&gt;+&lt;/code&gt;) artinya kode yang ditambahkan. Sedangkan
kalau ada kode yang dihapus simbolnya akan menggunakan minus (&lt;code&gt;-&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Contoh:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Ditambahkan:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;+ &amp;lt;p&amp;gt;ini kode yang ditambahkan&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Dihapus:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;- &amp;lt;i&amp;gt;ini kode yang dihapus&amp;lt;/i&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Dimodifikasi/diubah:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;- &amp;lt;span&amp;gt;ini kode sebelum diubah&amp;lt;/span&amp;gt;
+ &amp;lt;span&amp;gt;ini kode sesudah diubah&amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sekarang kita akan mencoba merubah isi dari &lt;code&gt;index.html&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Sebelum diubah:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
    &amp;lt;head&amp;gt;
        &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
        &amp;lt;title&amp;gt;Belajar Git - Project 01&amp;lt;/title&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;p&amp;gt;Hello Semua, Saya sedang belajar Git&amp;lt;/p&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Setelah diubah:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
    &amp;lt;head&amp;gt;
        &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
        &amp;lt;title&amp;gt;Belajar Git - Project 01&amp;lt;/title&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;p&amp;gt;Hello Dunia!, Saya sedang belajar Git&amp;lt;/p&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Setelah itu lakukan jalankan perintah &lt;code&gt;git diff&lt;/code&gt; lagi.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;655&#34;
    height=&#34;285&#34;
    alt=&#34;perbedaan+revisi.png&#34;
    src=&#34;https://4.bp.blogspot.com/-SjaJbM_jRkM/WKLqY4qyW3I/AAAAAAAAD74/N-nRApzmQocxPGEwt07Ao947aAjyDzG_gCPcB/s1600/perbedaan%2Brevisi.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Apa yang dilakukan &lt;code&gt;git diff&lt;/code&gt;? Perintah &lt;code&gt;git diff&lt;/code&gt; akan membandingkan perubahan
yang baru saja dilakukan dengan revisi/commit terakhir.&lt;/p&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;h2 id=&#34;melihat-perbandingan-pada-file&#34;&gt;Melihat Perbandingan pada File&lt;/h2&gt;

&lt;p&gt;Apa bila kita melakukan banyak perubahan, maka akan banyak sekali tampil output.
Karena itu, kita mungkin hanya perlu melihat perubahan untuk file tertentu saja.
Untuk melihat perbandingan perubahan pada file tertentu, gunakan perintah berukut.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git diff index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Perintah di atas akan melihat pebedaan perubahan pada file &lt;code&gt;index.html&lt;/code&gt; saja.&lt;/p&gt;

&lt;h2 id=&#34;melihat-perbandingan-antar-revisi-commit&#34;&gt;Melihat Perbandingan antar Revisi/Commit&lt;/h2&gt;

&lt;p&gt;Perintah untuk membandingkan perubahan pada revisi dengan revisi yang lain
adalah sebagai berikut.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git diff &amp;lt;nomer commit&amp;gt; &amp;lt;nomer commit&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;contoh:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git diff cf08ca0837cf26f1c595be36bb3a6b815e311be1 06f735af7724558164c87f6b1ce3ca7778eb1c1b
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;perbandingan-antar-cabang-branch&#34;&gt;Perbandingan Antar Cabang (Branch)&lt;/h2&gt;

&lt;p&gt;Kita memang belum masuk ke materi percabangan di Git. Tapi tidak ada salahnya megetahui
cara melihat perbandingan perubahan antar cabang.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git diff &amp;lt;nama cabang&amp;gt; &amp;lt;nama cabang&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;penutup&#34;&gt;Penutup&lt;/h2&gt;

&lt;p&gt;Kita sudah pelajari fungsi dari perintah &lt;code&gt;git diff&lt;/code&gt;. Perintah ini untuk melihat
perbandingan perubahan apa saja yang telah dilakukan pada repositori. Selanjutnya, kita
akan belajar membatalkan revisi.&lt;/p&gt;

&lt;p&gt;Selanjutnya: &lt;a href=&#34;https://www.petanikode.com/2017/02/tutorial-git-06---membatalkan-revisi/&#34;&gt;Tutorial Git 06 - Membatalkan Revisi&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tutorial Git 04 - Melihat Log Revisi</title>
      <link>https://www.petanikode.com/tutorial-git-04---melihat-log-revisi/</link>
      <pubDate>Tue, 14 Feb 2017 08:56:09 +0800</pubDate>
      
      <guid>https://www.petanikode.com/tutorial-git-04---melihat-log-revisi/</guid>
      <description>

&lt;p&gt;Pada &lt;a href=&#34;https://www.petanikode.com/2017/02/tutorial-git-03---membuat-revisi/&#34;&gt;tutorial sebelumnya&lt;/a&gt;, kita
sudah membuat dua revisi pada repositori &lt;code&gt;project-01&lt;/code&gt;. Sekarang bagaimana caranya
kita melihat catatan log dari revisi-reivisi tersebut?&lt;/p&gt;

&lt;p&gt;Git sudah menyediakan perintah &lt;code&gt;git log&lt;/code&gt; untuk melihat catatan log perubahan
pada respositori. Contoh penggunaannya:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git log
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Maka kita akan melihat log perubahan apa saja yang sudah dilakukan dalam repositori.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;655&#34;
    height=&#34;285&#34;
    alt=&#34;Log+revisi+yang+sudah+dibuat.png&#34;
    src=&#34;https://1.bp.blogspot.com/-BEp5Qadw3U0/WKJkMIVKV4I/AAAAAAAAD50/p7u0PSctYIkLDOnV_zLMhN29ZwIlImv2ACPcB/s1600/Log%2Brevisi%2Byang%2Bsudah%2Bdibuat.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Pada gambar di atas, terdapat dua revisi perubahan yang telah dilakuan.&lt;/p&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;h2 id=&#34;log-yang-lebih-pendek&#34;&gt;Log yang Lebih Pendek&lt;/h2&gt;

&lt;p&gt;Untuk menampilkan log yang lebih pendek, kita bisa menambahkan argumen &lt;code&gt;--oneline&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git log --oneline
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Maka akan menghasilkan output:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;06f735a ditambahkan isi
cf08ca0 commit pertama
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;log-pada-nomer-revisi-commit&#34;&gt;Log pada Nomer Revisi/&lt;em&gt;Commit&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;Untuk melihat log pada revisi tertentu, kita bisa memasukan nomer revisi/commit.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git log cf08ca0837cf26f1c595be36bb3a6b815e311be1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Maka akan menghasilkan output:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;commit cf08ca0837cf26f1c595be36bb3a6b815e311be1
Author: Ardianta Pargo &amp;lt;ardianta_pargo@yahoo.co.id&amp;gt;
Date:   Mon Feb 13 18:08:56 2017 +0800

    commit pertama
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;log-pada-file-tertentu&#34;&gt;Log pada File Tertentu&lt;/h2&gt;

&lt;p&gt;Untuk melihat revisi pada file tertentu, kita dapat memasukan nama filenya.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git log index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Maka akan menghasilkan output:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;commit 06f735af7724558164c87f6b1ce3ca7778eb1c1b
Author: Ardianta Pargo &amp;lt;ardianta_pargo@yahoo.co.id&amp;gt;
Date:   Mon Feb 13 18:26:50 2017 +0800

    ditambahkan isi

commit cf08ca0837cf26f1c595be36bb3a6b815e311be1
Author: Ardianta Pargo &amp;lt;ardianta_pargo@yahoo.co.id&amp;gt;
Date:   Mon Feb 13 18:08:56 2017 +0800

    commit pertama
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Karena file &lt;code&gt;index.html&lt;/code&gt; sudah direvisi sebanyak dua kali.&lt;/p&gt;

&lt;h2 id=&#34;log-revisi-yang-dilakukan-oleh-author-tertentu&#34;&gt;Log Revisi yang dilakukan oleh Author Tertentu&lt;/h2&gt;

&lt;p&gt;Misalkan dalam repositori dikerjakan oleh banyak orang. Maka kita dapat melihat
revisi apa saja yang dilakukan oleh orang tertentu dengan perintah berikut.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git log --author=&#39;Petani Kode&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;penutup&#34;&gt;Penutup&lt;/h2&gt;

&lt;p&gt;Itulah beberapa cara melihat log revisi pada repositori. Perintah yang digunakan
adalah &lt;code&gt;git log&lt;/code&gt;. Selanjutnya kita akan pelajari perintah &lt;code&gt;git diff&lt;/code&gt; untuk melihat
perbandingan pada revisi.&lt;/p&gt;

&lt;p&gt;Selanjutnya: &lt;a href=&#34;https://www.petanikode.com/2017/02/tutorial-git-05---melihat-perbandingan-revisi/&#34;&gt;Tutorial Git 05 - Melihat Perbandingan Revisi&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tutorial Git 03 - Membuat Revisi</title>
      <link>https://www.petanikode.com/tutorial-git-03---membuat-revisi/</link>
      <pubDate>Mon, 13 Feb 2017 17:30:51 +0800</pubDate>
      
      <guid>https://www.petanikode.com/tutorial-git-03---membuat-revisi/</guid>
      <description>

&lt;p&gt;Pada &lt;a href=&#34;https://www.petanikode.com/2017/02/tutorial-git-02---membuat-repositori/&#34;&gt;tutorial git yang kedua&lt;/a&gt;,
kita sudah membuat repositori kosong. Belum ada apa-apa di sana. Sekarang coba
tambahkan sebuah file baru. Sebagai contoh, saya akan menambahkan tiga file HTML
kosong.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;806&#34;
    height=&#34;516&#34;
    alt=&#34;project-01_repositori-git-petanikode.png&#34;
    src=&#34;https://1.bp.blogspot.com/-H_In4IFcsOM/WKF-vsJ3qtI/AAAAAAAAD3g/qoBlvBQWYDYwnPYOnvxXNG72R-T5m2i4gCPcB/s1600/project-01_repositori-git-petanikode.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Setalah ditambahkan, coba ketik perintah &lt;code&gt;git status&lt;/code&gt; untuk melihat status
repositorinya.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;655&#34;
    height=&#34;285&#34;
    alt=&#34;Git+status.png&#34;
    src=&#34;https://2.bp.blogspot.com/-kMBRMIo7wFU/WKGAIxRBTDI/AAAAAAAAD30/QH-AmxcXXXsvXtpfWX6R3ZW8svOnHRILACPcB/s1600/Git%2Bstatus.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Berdasarkan keterangan di atas, saat ini kita berada cabang &lt;em&gt;(branch) master&lt;/em&gt; dan
ada tiga file yang belum ditambahkan ke Git.&lt;/p&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;h2 id=&#34;tiga-kelompok-kondisi-file-dalam-git&#34;&gt;Tiga Kelompok Kondisi File dalam Git&lt;/h2&gt;

&lt;p&gt;Sebelum kita membuat revisi, kita akan berkenalan dulu dengan tiga kondisi file
dalam Git.&lt;/p&gt;

&lt;h3 id=&#34;1-modified&#34;&gt;1. Modified&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Modified&lt;/em&gt; adalah kondisi dimana revisi atau perubahan sudah dilakukan, tetapi
belum ditandai dan belum disimpan di &lt;em&gt;version control&lt;/em&gt;. Contohnya pada gambar di
atas, ada tiga file HTML yang dalam kondisi &lt;em&gt;modified&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&#34;2-staged&#34;&gt;2. Staged&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Staged&lt;/em&gt; adalah kondisi dimana revisi sudah ditandai, tetapi belum disimpan
di &lt;em&gt;version control&lt;/em&gt;. Untuk mengubah kondisi file dari &lt;em&gt;modified&lt;/em&gt; ke &lt;em&gt;staged&lt;/em&gt;
gunakan perintah &lt;code&gt;git add nama_file&lt;/code&gt;. Contoh:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-commited&#34;&gt;3. Commited&lt;/h3&gt;

&lt;p&gt;Commited adalah kondisi dimana revisi sudah disimpan di version control. perintah
untuk mengubah kondisi file dari &lt;em&gt;staged&lt;/em&gt; ke &lt;em&gt;commited&lt;/em&gt; adalah &lt;code&gt;git commit&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;membuat-revisi-pertama&#34;&gt;Membuat Revisi Pertama&lt;/h2&gt;

&lt;p&gt;Baiklah, sekarang kita akan sudah tahu kondisi-kondisi file dalam Git. Selanjutnya,
silahkan ubah kondisi tiga file HTML tadi menjadi &lt;em&gt;staged&lt;/em&gt; dengan perintah &lt;code&gt;git add&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add index.html
git add about.html
git add contact.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Atau kita bisa melakukannya seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add index.html about.html contect.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;atau:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add *.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Atau seperti ini (semua file dan direktori):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add .
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Setelah itu, cobalah ketik perintah &lt;code&gt;git status&lt;/code&gt; lagi. Kondisi filenya sekarang
akan menjadi &lt;em&gt;staged&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;655&#34;
    height=&#34;285&#34;
    alt=&#34;kondisi+file+staged+di+Git.png&#34;
    src=&#34;https://2.bp.blogspot.com/-2Q335OAbng4/WKGEsuQIQcI/AAAAAAAAD4Q/eL9z36naaKYe5jYwp9awlfXCw99A3to4wCPcB/s1600/kondisi%2Bfile%2Bstaged%2Bdi%2BGit.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Setelah itu, ubah kondisi file tersebut ke &lt;em&gt;commited&lt;/em&gt; agar semua perubahan disimpan
oleh Git.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git commit -m &amp;quot;Commit pertama&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Setelah itu, coba cek dengan perintah &lt;code&gt;git status&lt;/code&gt; lagi.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;655&#34;
    height=&#34;205&#34;
    alt=&#34;Commit+pertama+git.png&#34;
    src=&#34;https://4.bp.blogspot.com/-5EKJNZ9NN5o/WKGF6f1ojnI/AAAAAAAAD4k/vmQksU_KdioAM7xbUBJWYkVMWoXIELFCwCPcB/s1600/Commit%2Bpertama%2Bgit.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Selamat, revisi pertama sudah kita buat. Selanjutnya cobalah untuk membuat revisi kedua.&lt;/p&gt;

&lt;h2 id=&#34;membuat-revisi-kedua&#34;&gt;Membuat Revisi kedua&lt;/h2&gt;

&lt;p&gt;Ceritanya ada perubahan yang akan kita lakukan pada file &lt;code&gt;index.html&lt;/code&gt;. Silahkan
modifikasi isi file &lt;code&gt;index.html&lt;/code&gt;. Sebagai contoh saya mengisinya seperti ini.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
    &amp;lt;head&amp;gt;
        &amp;lt;meta charset=&amp;quot;utf-8&amp;quot;&amp;gt;
        &amp;lt;title&amp;gt;Belajar Git - Project 01&amp;lt;/title&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;p&amp;gt;Hello Semua, Saya sedang belajar Git&amp;lt;/p&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Setelah itu ketik lagi perintah &lt;code&gt;git status&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;655&#34;
    height=&#34;205&#34;
    alt=&#34;Git+status+revisi+kedua.png&#34;
    src=&#34;https://4.bp.blogspot.com/-5kIOLZT1Ots/WKGIVv95vPI/AAAAAAAAD5M/sS0l7NFCdtM4NYlxIQ4sNWp8lOQDkRKdgCKgB/s1600/Git%2Bstatus%2Brevisi%2Bkedua.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Terilhat di sana, file &lt;code&gt;index.html&lt;/code&gt; sudah dimodifikasi. Kondisinya skarang berada
dalam &lt;em&gt;modified&lt;/em&gt;. Lakukan &lt;em&gt;commit&lt;/em&gt; lagi seperti revisi pertama.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add index.html
git commit -m &amp;quot;ditambahkan isi&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Dengan demikian, revisi kedua sudah disipan oleh Git. Mungkin anda belum tahu
maksud dari argumen &lt;code&gt;-m&lt;/code&gt;, argumen tersebut untuk menambahkan pesan setiap menyimpan
revisi.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;618&#34;
    height=&#34;323&#34;
    alt=&#34;Timeline dua revisi&#34;
    src=&#34;https://1.bp.blogspot.com/-_wKH9usn7FI/WLFdN6wLvcI/AAAAAAAAEKc/XQzBtD98naUfImdeuxZf8NDQ1gXKDqrZQCPcB/s1600/timeline-dua-revisi.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Sekarang Git sudah mencatat dua revisi yang sudah kita lakukan. Kita bisa ibaratkan
revisi-revisi ini sebagai &lt;em&gt;checkpoint&lt;/em&gt; pada Game. Apabila nanti ada kesalahan,
kita bisa kembali ke &lt;em&gt;checkpoint&lt;/em&gt; ini.&lt;/p&gt;

&lt;p&gt;Sekian untuk tutorial ke-3 ini, mudah-mudahan bermanfaat.&lt;/p&gt;

&lt;p&gt;Selanjutnya: &lt;a href=&#34;https://www.petanikode.com/2017/02/tutorial-git-04---melihat-log-revisi/&#34;&gt;Tutorial Git 04 - Melihat Log Revisi&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cara Instal Git di Windows</title>
      <link>https://www.petanikode.com/cara-instal-git-di-windows/</link>
      <pubDate>Fri, 10 Feb 2017 01:42:35 +0800</pubDate>
      
      <guid>https://www.petanikode.com/cara-instal-git-di-windows/</guid>
      <description>

&lt;p&gt;Instalasi Git di Windows memang tidak seperti di Linux yang ketik perintah
langsung terinstal. Kita harus menguduh dulu, kemudian melakukan ritual
&lt;em&gt;next&amp;gt;next&amp;gt;finish&lt;/em&gt;. Tapi dalam ritual tersebut, ada pilihan
yang harus diperhatikan agar perintah &lt;code&gt;git&lt;/code&gt; dapat dikenali di CMD.&lt;/p&gt;

&lt;p&gt;Baiklah, kali ini saya numpang &lt;em&gt;screenshot&lt;/em&gt; di laptop teman yang menggunakan
windows untuk pembuatan tutorial ini. Silahkan disimak ya :smile:.&lt;/p&gt;

&lt;h2 id=&#34;unduh-git&#34;&gt;Unduh Git&lt;/h2&gt;

&lt;p&gt;Silahkan buka website resminya Git (&lt;a href=&#34;https://git-scm.com/&#34;&gt;git-scm.com&lt;/a&gt;).
Kemudian unduh Git sesuai dengan arsitektur komputer kita. Kalau menggunakan
64bit, unduh yang 64bit. Begitu juga kalau menggunakan 32bit.&lt;/p&gt;

&lt;h2 id=&#34;ritual-instal&#34;&gt;Ritual Instal&lt;/h2&gt;

&lt;p&gt;Baiklah, mari kita mulai ritual instalnya. Silahkan klik 2x file instaler Git yang sudah diunduh.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
width=&#34;836&#34;
height=&#34;268&#34;
alt=&#34;1.+Buka+file+instaler+Git.JPG&#34;
src=&#34;https://3.bp.blogspot.com/-GJG55D0dDUE/WJyvgHq7V6I/AAAAAAAAD0Y/1eNFR16HwmoDXixtJfQ5HRMZ_hCelqD0gCPcB/s1600/1.%2BBuka%2Bfile%2Binstaler%2BGit.JPG&#34;
layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Maka akan muncul infomasi lisensi Git, klik &lt;em&gt;Next &amp;gt;&lt;/em&gt; untuk melanjutkan.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
width=&#34;499&#34;
height=&#34;387&#34;
alt=&#34;2.+Informasi+tentang+git.JPG&#34;
src=&#34;https://3.bp.blogspot.com/-NzbswuR4CgU/WJyvgMeY3cI/AAAAAAAAD0Y/aa_6vg_W7Q0l7cf20FkatIkU0dXGAJXtACPcB/s1600/2.%2BInformasi%2Btentang%2Bgit.JPG&#34;
layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Selanjutnya menentukan lokasi instalasi. Biarkan saja apa adanya, kemudian klik
&lt;em&gt;Next &amp;gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
width=&#34;499&#34;
height=&#34;387&#34;
alt=&#34;3.+Lokasi+instal.JPG&#34;
src=&#34;https://2.bp.blogspot.com/-Ye-09zmjGXY/WJyvgKQWTxI/AAAAAAAAD0Y/hbIXryc1LBkUOaXOOlP92ynIwdVGAZs9gCPcB/s1600/3.%2BLokasi%2Binstal.JPG&#34;
layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Selanjutnya pemilihan komoponen, biarkan saja seperti ini kemudian klik &lt;em&gt;Next &amp;gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
width=&#34;499&#34;
height=&#34;387&#34;
alt=&#34;4.+Pemilihan+komponen.JPG&#34;
src=&#34;https://2.bp.blogspot.com/-ywOWK8HlXtY/WJyvgBmH9YI/AAAAAAAAD0Y/IoJbYkEjw0oIQYxLR3Jf7AvbDhwbDneoQCPcB/s1600/4.%2BPemilihan%2Bkomponen.JPG&#34;
layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Selanjutnya pemlilihan direktori start menu, klik &lt;em&gt;Next &amp;gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
width=&#34;499&#34;
height=&#34;387&#34;
alt=&#34;5.+pembuatan+start+menu.JPG&#34;
src=&#34;https://3.bp.blogspot.com/-iGNC1QrWtDg/WJyvgHelUtI/AAAAAAAAD0Y/fJKy0-mD6MgikbyjrjD4FDabTfPynbCiwCPcB/s1600/5.%2Bpembuatan%2Bstart%2Bmenu.JPG&#34;
layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Selanjutnya pengaturan &lt;em&gt;PATH Environment&lt;/em&gt;. Pilih yang tengah agar perintah &lt;code&gt;git&lt;/code&gt;
dapat di kenali di &lt;em&gt;Command Prompt&lt;/em&gt; (CMD). Setelah itu klik &lt;em&gt;Next &amp;gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
width=&#34;499&#34;
height=&#34;387&#34;
alt=&#34;6.+Path+environment.JPG&#34;
src=&#34;https://4.bp.blogspot.com/-79ZG8B-IzCA/WJyvgLBQbjI/AAAAAAAAD0Y/u87asmJOm9UcFAT0Q87pM8xgcW82kkOOwCPcB/s1600/6.%2BPath%2Benvironment.JPG&#34;
layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;p&gt;Selanjutnya konversi &lt;em&gt;line ending&lt;/em&gt;. Biarkan saja seperti ini, kemudian klik &lt;em&gt;Next &amp;gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
width=&#34;499&#34;
height=&#34;387&#34;
alt=&#34;7.+konversi+line+ending.JPG&#34;
src=&#34;https://3.bp.blogspot.com/-3ZL1Ea4exvo/WJyvgLEi3NI/AAAAAAAAD0Y/3jSy13aPLkAqkaZ5CrFQbmfCNb6m8kniQCPcB/s1600/7.%2Bkonversi%2Bline%2Bending.JPG&#34;
layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Selanjutnya pemilihan emulator terminal. Pilih saja yang bawah, kemudian klik &lt;em&gt;Next &amp;gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
width=&#34;499&#34;
height=&#34;387&#34;
alt=&#34;8.+Pemilihan+emulator+terminal.JPG&#34;
src=&#34;https://4.bp.blogspot.com/-wuVBFyFlmjo/WJyvgNkAcvI/AAAAAAAAD0Y/UDKA-JsD3UIuv2sDOEkdwd_X_gRG8uX3QCPcB/s1600/8.%2BPemilihan%2Bemulator%2Bterminal.JPG&#34;
layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Selanjutnya pemilihan opsi ekstra. Klik saja &lt;em&gt;Next &amp;gt;&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
width=&#34;499&#34;
height=&#34;387&#34;
alt=&#34;9.+Konfigurasi+Opsi+Ekstra.JPG&#34;
src=&#34;https://1.bp.blogspot.com/-5oq7fAHTb7Q/WJyvgMQFc6I/AAAAAAAAD0Y/-5KmjFlMrsMkIsrPjoja277tQDaA_nr5ACPcB/s1600/9.%2BKonfigurasi%2BOpsi%2BEkstra.JPG&#34;
layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Selanjutnya pemilihan opsi ekspreimental, langsung saja klik &lt;em&gt;Install&lt;/em&gt; untuk memaulai instalasi.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
width=&#34;499&#34;
height=&#34;387&#34;
alt=&#34;10.+Opsi+ekperimental.JPG&#34;
src=&#34;https://2.bp.blogspot.com/-lrAn-7lh7jY/WJyvgMm0PiI/AAAAAAAAD0Y/sEhM1irdMPkvv3v615R5JhIcIDNUJxArQCPcB/s1600/10.%2BOpsi%2Bekperimental.JPG&#34;
layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Tunggu beberapa saat, instalasi sedang dilakukan.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
width=&#34;499&#34;
height=&#34;387&#34;
alt=&#34;11.+Installing.JPG&#34;
src=&#34;https://4.bp.blogspot.com/-1jecFYkwTzg/WJyvgJt9g5I/AAAAAAAAD0Y/5DG8OAc44Zk31_VjHz3mXybB3kThzHcbwCPcB/s1600/11.%2BInstalling.JPG&#34;
layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Setelah selesai, kita bisa langsung klik &lt;em&gt;Finish&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
width=&#34;499&#34;
height=&#34;387&#34;
alt=&#34;12.+Finish.JPG&#34;
src=&#34;https://1.bp.blogspot.com/-lCGee-56K5Y/WJyvgAbeLGI/AAAAAAAAD0Y/fNaJIaZKf2cqMFuV_5occ6y4oAi7_vaawCPcB/s1600/12.%2BFinish.JPG&#34;
layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Selamat, Git sudah terinstal di Windows. Untuk mencobanya, silahkan buka CMD atau
PowerShell, kemudian ketik perintah &lt;code&gt;git --version&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
width=&#34;745&#34;
height=&#34;204&#34;
alt=&#34;13.+Percobaan.JPG&#34;
src=&#34;https://4.bp.blogspot.com/-JMZtMOkESYQ/WJyvgOEh_TI/AAAAAAAAD0Y/4Mtf48YbMUwVtQ9jbJc_TYHe2MymmooAQCPcB/s1600/13.%2BPercobaan.JPG&#34;
layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;OK, meskipun Git sudah terinstal. Akan tetapi masih belum bisa dipakai. Karena
kita belum melakukan konfigurasi &lt;em&gt;name&lt;/em&gt; dan &lt;em&gt;email&lt;/em&gt;. Cara konfigurasinya
silahkan &lt;a href=&#34;https://www.petanikode.com/2017/02/tutorial-git-01---instalasi-dan-persiapan/&#34;&gt;baca di sni&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tutorial Git 02 - Membuat Repositori</title>
      <link>https://www.petanikode.com/tutorial-git-02---membuat-repositori/</link>
      <pubDate>Thu, 09 Feb 2017 11:52:59 +0800</pubDate>
      
      <guid>https://www.petanikode.com/tutorial-git-02---membuat-repositori/</guid>
      <description>

&lt;p&gt;Repositori &lt;em&gt;(repository)&lt;/em&gt; dalam bahasa indonesia artinya gudang. Repositori
merupakan istilah yang digunakan untuk direktori proyek yang menggunakan Git.
Jika kita memiliki sebuah direktori dengan nama &lt;code&gt;proyek-01&lt;/code&gt; dan di dalamnya
sudah menggunakan git, maka kita sudah punya repositori bernama &lt;code&gt;proyek-01&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;membuat-repositori&#34;&gt;Membuat Repositori&lt;/h2&gt;

&lt;p&gt;Pembuatan repositori dapat dilakukan dengan perintah &lt;code&gt;git init nama-dir&lt;/code&gt;.
Contoh:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git init proyek-01
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Perintah tersebut akan membuat direktori bernama &lt;code&gt;proyek-01&lt;/code&gt;. Kalau direktorinya
sudah ada, maka Git akan melakukan inisialisasi di dalam direktori tersebut.&lt;/p&gt;

&lt;p&gt;Perintah &lt;code&gt;git init&lt;/code&gt; akan membuat sebuah direktori bernama &lt;code&gt;.git&lt;/code&gt; di dalam
proyek kita. Direktori ini digunakan Git sebagai database untuk menyimpan
perubahan yang kita lakukan.&lt;/p&gt;

&lt;p&gt;Hati-hati! Kalau kita menghapus direktori ini, maka semua rekaman yang dilakukan
oleh Git akan hilang.&lt;/p&gt;

&lt;h2 id=&#34;contoh-contoh-lain&#34;&gt;Contoh-contoh lain&lt;/h2&gt;

&lt;p&gt;Perintah berikut ini akan membuat repositori pada direktori saat ini &lt;em&gt;(working directory)&lt;/em&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git init .
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;655&#34;
    height=&#34;157&#34;
    alt=&#34;Membuat+repositori+git.png&#34;
    src=&#34;https://3.bp.blogspot.com/-IAgZktRDWBQ/WKF1raoDB4I/AAAAAAAAD3I/Uy29jWo73WARH2mV9v0rI-57tWnIlLRIACPcB/s1600/Membuat%2Brepositori%2Bgit.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Perintah berikut ini akan membuat repositori pada direktori &lt;code&gt;/var/www/html/proyekweb/&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git init /var/www/html/proyekweb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;h2 id=&#34;gitignore&#34;&gt;.gitignore&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;.gitignore&lt;/code&gt; merupakan sebuah file yang berisi daftar nama-nama file dan direktori
yang akan diabaikan oleh Git.&lt;/p&gt;

&lt;p&gt;Perubahan apapun yang kita lakukan terhadap file
dan direktori yang sudah masuk ke dalam daftar &lt;code&gt;.gitignore&lt;/code&gt; tidak akan dicatat oleh
Git.&lt;/p&gt;

&lt;p&gt;Cara mengunakan &lt;code&gt;.gitignore&lt;/code&gt;, buat saja sebuah file bernama &lt;code&gt;.gitignore&lt;/code&gt; dalam
root direktori proyek/repositori.&lt;/p&gt;

&lt;p&gt;File: &lt;code&gt;.gitignore&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/vendor/
/upload/
/cache
test.php
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pada contoh file &lt;code&gt;.gitignore&lt;/code&gt; di atas, saya memasukan direktori &lt;code&gt;vendor&lt;/code&gt;, &lt;code&gt;upload&lt;/code&gt;,
&lt;code&gt;cache&lt;/code&gt; dan file &lt;code&gt;test.php&lt;/code&gt;. File dan direktori tersebut akan diabaikan oleh Git.&lt;/p&gt;

&lt;p&gt;Pembuatan file &lt;code&gt;.gitignore&lt;/code&gt; sebaiknya dilakukan di awal pembuatan repositori.&lt;/p&gt;

&lt;p&gt;Contoh &lt;code&gt;.gitignore&lt;/code&gt; pada proyek-proyek tertentu, bisa dilihat di &lt;a href=&#34;https://github.com/github/gitignore&#34;&gt;repositori
ini&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;penutup&#34;&gt;Penutup&lt;/h2&gt;

&lt;p&gt;Sekian dulu untuk tutorial kedua ini, Kita baru saja mengetahui cara pembuatan
repositori dan tentang &lt;code&gt;.gitignore&lt;/code&gt;. Penggunaan &lt;code&gt;.gitignore&lt;/code&gt; memang belum dapat
kita rasakan saat ini, karena kita belum membuat revisi apa pun. Karena itu,
silahkan lanjutkan ke &lt;a href=&#34;https://www.petanikode.com/2017/02/tutorial-git-03---membuat-revisi/&#34;&gt;tutorial ketiga &amp;lsquo;Membuat Revisi&amp;rsquo;&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tutorial Git 01 - Instalasi dan Persiapan</title>
      <link>https://www.petanikode.com/tutorial-git-01---instalasi-dan-persiapan/</link>
      <pubDate>Wed, 08 Feb 2017 11:26:37 +0800</pubDate>
      
      <guid>https://www.petanikode.com/tutorial-git-01---instalasi-dan-persiapan/</guid>
      <description>

&lt;p&gt;Kita sudah mengenal Git pada &lt;a href=&#34;https://www.petanikode.com/2017/02/apa-itu-git-dan-kenapa-penting-bagi-programmer/&#34;&gt;tulisan sebelumnya&lt;/a&gt;.
Sekarang Kita akan melakukan instalasi dan persiapan.&lt;/p&gt;

&lt;h2 id=&#34;instalasi-git&#34;&gt;Instalasi Git&lt;/h2&gt;

&lt;p&gt;Instalasi pada Ubuntu dan keluarga Debian lainnya dapat menggunakan perintah ini.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt install git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;atau&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Fedora:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;yum install git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Windows: &lt;a href=&#34;https://www.petanikode.com/2017/02/cara-instal-git-di-windows/&#34;&gt;Cara Instal Git di Windows&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Download Git&lt;/li&gt;
&lt;li&gt;Instal, Next, Next, Finish&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;h2 id=&#34;persiapan&#34;&gt;Persiapan&lt;/h2&gt;

&lt;p&gt;Ada beberapa konfigurasi yang harus dupersiapakan sebelum mulai menggunakan Git,
seperti &lt;em&gt;name&lt;/em&gt; dan &lt;em&gt;email&lt;/em&gt;. Silahkan lakukan konfigurasi dengan perintah berikut
ini.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git config --global user.name &amp;quot;Petani Kode&amp;quot;
git config --global user.email contoh@petanikode.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Baca juga: &lt;a href=&#34;https://www.petanikode.com/2016/03/3-hal-yang-perlu-dilakukan-setelah-instal-git-di-linux/&#34;&gt;3 Hal yang Perlu Dilakukan Setelah Instal Git di Linux&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Kemudian periksa konfigurasinya dengan perintah:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git config --list
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Apabila berhasil tampil seperti gambar berikut ini, berarti konfigurasi berhasil.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
width=&#34;659&#34;
height=&#34;180&#34;
alt=&#34;Konfigurasi+git+admin+petani+kode.png&#34;
src=&#34;https://1.bp.blogspot.com/-Lc0x4c4UFOM/VvYTsGHo1WI/AAAAAAAACkU/Bl3n__Da8hETuwWU52ZvR9C5NYywPINuQ/s1600/Konfigurasi%2Bgit%2Badmin%2Bpetani%2Bkode.png&#34;
layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Konfigurasi &lt;code&gt;core.editor&lt;/code&gt; bersifat opsional. Sedangkan &lt;em&gt;name&lt;/em&gt; dan &lt;em&gt;email&lt;/em&gt; wajib.&lt;/p&gt;

&lt;p&gt;Bagus, sekarang kita sudah melakukan konfigurasi awal. Selanjutnya kita bisa
langsung &lt;a href=&#34;https://www.petanikode.com/2017/02/tutorial-git-02---membuat-repositori/&#34;&gt;membuat repositori&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Apa itu Git dan Kenapa Penting bagi Programmer?</title>
      <link>https://www.petanikode.com/apa-itu-git-dan-kenapa-penting-bagi-programmer/</link>
      <pubDate>Wed, 08 Feb 2017 09:08:36 +0800</pubDate>
      
      <guid>https://www.petanikode.com/apa-itu-git-dan-kenapa-penting-bagi-programmer/</guid>
      <description>

&lt;p&gt;Git adalah salah satu sistem pengontrol versi &lt;em&gt;(Version Control System)&lt;/em&gt; pada
proyek perangkat lunak yang diciptakan oleh Linus Torvalds.&lt;/p&gt;

&lt;p&gt;Pengontrol versi bertugas mencatat setiap perubahan pada file proyek.&lt;/p&gt;

&lt;p&gt;Awalnya Linus Torvalds menciptakan Git untuk mengelola kode sumber
&lt;em&gt;(source kode)&lt;/em&gt; kernel Linux.&lt;/p&gt;

&lt;p&gt;Kemudian, Linus Torvalds mempublikasikannya dengan lisensi open soure,
semua orang jadi bisa pakai Git secara gratis.&lt;/p&gt;

&lt;p&gt;Sungguh baik ya bapak Linus Torvalds :smile:.&lt;/p&gt;

&lt;h2 id=&#34;kenapa-git-diciptakan&#34;&gt;Kenapa Git diciptakan?&lt;/h2&gt;

&lt;p&gt;Bayangkan ada 1000 programmer dari seluruh dunia yang ikut berkontribusi membangun kernel Linux.&lt;/p&gt;

&lt;p&gt;Bagaimana cara Linus Torvalds akan mengelola itu semua?&lt;/p&gt;

&lt;p&gt;Bagaimana cara menggabungkan kode dari 1000 programmer ini?&lt;/p&gt;

&lt;p&gt;Kalau ada kode yang bentrok gimana?&lt;/p&gt;

&lt;p&gt;Itulah alasan kenapa git dibuat.&lt;/p&gt;

&lt;p&gt;Selain sebagai pengontrol versi, Git juga bisa dugunakan untuk kolaborasi.&lt;/p&gt;

&lt;h2 id=&#34;apa-yang-dilakukan-oleh-git&#34;&gt;Apa yang dilakukan oleh Git?&lt;/h2&gt;

&lt;p&gt;Git sebenarnya akan memantau perubahan yang terjadi pada file yang ada di dalam
direktori proyek. Lalu menyimpannya ke dalam database.&lt;/p&gt;

&lt;p&gt;Kalau misalnya nanti ada kesalahan, maka kita bisa kembalikan lagi.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;800&#34;
    height=&#34;563&#34;
    alt=&#34;800px-GNOME_gitg.png&#34;
    src=&#34;https://upload.wikimedia.org/wikipedia/commons/thumb/9/93/GNOME_gitg.png/800px-GNOME_gitg.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Misalnya begini&amp;hellip;, ada seorang mahasiswa yang akan merevisi kode-kodenya.&lt;/p&gt;

&lt;p&gt;Lalu dosenya bilang, &amp;ldquo;kode yang kemarin sudah benar, kenapa banyak perubahan?&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Karena si mahasiswa tida menggunakan Git, akhirnya dia tidak bisa
mengembalikannya seperti saat kemarin. Kecuali ada &lt;em&gt;backup&lt;/em&gt; yang sudah disimpan.&lt;/p&gt;

&lt;p&gt;Berbeda kalau misalnya dia menggunakan Git. Dia akan bisa kembalikan kondisi kodenya
seperti sebelumnya dengan mudah.&lt;/p&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;h2 id=&#34;kenapa-git-penting-bagi-programmer&#34;&gt;Kenapa Git penting bagi programmer?&lt;/h2&gt;

&lt;p&gt;Saat ini Git menjadi salah satu alat yang populer digunakan pada pengembangan
perangkat lunak &lt;em&gt;open souce&lt;/em&gt; maupun &lt;em&gt;closed source&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Google, Microsoft, Facebook dan berbagai perusahaan raksasa lainnya menggunakan Git.&lt;/p&gt;

&lt;p&gt;Jadi, buat kalian yang punya impian ingin bekerja di perusahaan raksasa seperti
yang saya sebutkan di atas, kalian harus bisa Git.&lt;/p&gt;

&lt;p&gt;&lt;amp-twitter width=486 height=657
    layout=&#34;responsive&#34;
    data-tweetid=&#34;829743602175610881&#34;&gt;
&lt;/amp-twitter&gt;&lt;/p&gt;

&lt;p&gt;Selain itu, berikut ini ada beberapa menfaat yang akan rasakan setelah
menggunakan Git.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Memudahkan untuk pengelolaan kode proyek&lt;/li&gt;
&lt;li&gt;Kode dapat di-backup di Github, Gitlab, Bitbucket, dll.&lt;/li&gt;
&lt;li&gt;Bisa kolaborasi atau ikut kontribusi di proyek open source.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Jadi, apakah kalian sudah mengenal git? Bagus, selanjutnya silahkan ikuti tutorial
git berikut ini.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.petanikode.com/2017/02/tutorial-git-01---instalasi-dan-persiapan/&#34;&gt;Tutorial Git 01 - Instalasi dan Perisiapan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.petanikode.com/2017/02/tutorial-git-02---membuat-repositori/&#34;&gt;Tutorial Git 02 - Membuat Repositori&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.petanikode.com/2017/02/tutorial-git-03---membuat-revisi/&#34;&gt;Tutorial Git 03 - Membuat Revisi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.petanikode.com/2017/02/tutorial-git-04---melihat-log-revisi/&#34;&gt;Tutorial Git 04 - Melihat Log Revisi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.petanikode.com/2017/02/tutorial-git-05---melihat-perbandingan-revisi/&#34;&gt;Tutorial Git 05 - Melihat Perbandingan Revisi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.petanikode.com/2017/02/tutorial-git-06---membatalkan-revisi/&#34;&gt;Tutorial Git 06 - Membatalkan Revisi&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.petanikode.com/2017/02/tutorial-git-07---percabangan/&#34;&gt;Tutorial Git 07 - Percabangan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.petanikode.com/2017/03/tutorial-git-08---perbedaan-git-checkout-git-reset-dan-git-revert/&#34;&gt;Tutorial Git 08 - Perbedaan Git Checkout, Git Reset, dan Git Revert&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tutorial Git 09 - Menulis Ulang Sejarah&lt;/li&gt;
&lt;li&gt;Tutorial Git 10 - Remote Repositori&lt;/li&gt;
&lt;li&gt;Tutorial Git 11 - Git Tag&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Catatan&lt;/strong&gt;: Kalau link di atas masih mati, berarti masih dalam draf. Sabar ya,
nanti juga terbit kok. :smile:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Referensi:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/&#34;&gt;https://git-scm.com/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Git&#34;&gt;https://en.wikipedia.org/wiki/Git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>