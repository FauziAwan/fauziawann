<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Belajar Pemrograman Java on Petani Kode — Programmer Pengguna Linux</title>
    <link>https://www.petanikode.com/seri/belajar-pemrograman-java/index.xml</link>
    <description>Recent content in Belajar Pemrograman Java on Petani Kode — Programmer Pengguna Linux</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>id-id</language>
    <copyright>Copyright (c) 2017, Petani Kode; all rights reserved.</copyright>
    <atom:link href="https://www.petanikode.com/seri/belajar-pemrograman-java/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Belajar Pemrograman Java: Cara Menggunakan Array untuk Menyimpan Banyak Hal</title>
      <link>https://www.petanikode.com/pemrograman-java-array/</link>
      <pubDate>Thu, 21 Apr 2016 22:34:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/pemrograman-java-array/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://2.bp.blogspot.com/-mLQEXOE1N5A/WPMIXz2iqnI/AAAAAAAAEwE/aKOI7Cgx9aoFhSvFDyMSOFSYYjMYplcoACPcB/s1600/array-dalam-pemrograman.png&#34; alt=&#34;Cara menggunakan Array&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Apa yang akan kita lakukan bila memiliki banyak data yang akan disimpan dalam vairabel?&lt;/p&gt;

&lt;p&gt;Misalkan kita ingin menyimpan nama-nama teman dalam variabel.&lt;/p&gt;

&lt;p&gt;Maka mungkin kita akan melakukannya seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;String namaTeman1 = &amp;quot;Linda&amp;quot;;
String namaTeman2 = &amp;quot;Santi&amp;quot;;
String namaTeman3 = &amp;quot;Susan&amp;quot;;
String namaTeman4 = &amp;quot;Mila&amp;quot;;
String namaTeman5 = &amp;quot;Ayu&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hal ini sah-sah saja.&lt;/p&gt;

&lt;p&gt;Akan tetapi&amp;hellip;&lt;/p&gt;

&lt;p&gt;Masalahnya bagaimana kala datanya banyak, misalkan ada 100 data,
pastinya capek donk membuat variabel sebanyak itu.&lt;/p&gt;

&lt;p&gt;Karena itu, kita bisa menyimpan itu semua dalam Array.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Apa itu Array?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Array adalah sebuah variabel yang bisa menyimpan banyak data dalam satu variabel.&lt;/p&gt;

&lt;p&gt;Array menggunakan indeks untuk memudahkan akses terhadap data yang disimpannya.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://4.bp.blogspot.com/-S515_Xifn20/WPL1deiMlOI/AAAAAAAAEvI/9UXBfcuiPR4Tyojj83Yf45bBkg2MLgPpACPcB/s1600/contoh-array.png&#34; alt=&#34;Contoh Array&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Indeks array selalu dimulai dari &lt;code&gt;0&lt;/code&gt;&amp;hellip;&lt;/p&gt;

&lt;p&gt;&amp;hellip;dan perlu diketahui juga, indeks tidak selalu dalam bentuk angka.
Bisa juga karakter atau teks.&lt;/p&gt;

&lt;h2 id=&#34;cara-membuat-array-di-java&#34;&gt;Cara Membuat Array di Java&lt;/h2&gt;

&lt;p&gt;Cara membuat array kosong:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;// cara pertama
String[] nama;

// cara kedua
String nama[];

// cara ketiga dengan kata kunci new
String[] nama = new String[5];
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Parhatikan&lt;/strong&gt;:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Kita menggunakan kurung siku &lt;code&gt;[]&lt;/code&gt; untuk membuat array;&lt;/li&gt;
&lt;li&gt;Kurung siku bisa diletakkan setelah tipe data atau nama array;&lt;/li&gt;
&lt;li&gt;Angka &lt;code&gt;5&lt;/code&gt; dalam kurung artinya batas atau ukuran array-nya.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Array yang kosong siap diisi dengan data. Pastikan mengisinya dengan data
yang sesuai dengan tipe datanya.&lt;/p&gt;

&lt;p&gt;Kita bisa mengisinya seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;nama[0] = &amp;quot;Linda&amp;quot;;
nama[1] = &amp;quot;Santi&amp;quot;;
nama[2] = &amp;quot;Susan&amp;quot;;
nama[3] = &amp;quot;Mila&amp;quot;;
nama[4] = &amp;quot;Ayu&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Atau kalau tidak mau repot, kita bisa membuat array sekaligus langsung
mengisinya.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;String[] nama = {&amp;quot;Linda&amp;quot;, &amp;quot;Santi&amp;quot;, &amp;quot;Susan&amp;quot;, &amp;quot;Mila&amp;quot;, &amp;quot;Ayu&amp;quot;};
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;mengambil-data-dari-array&#34;&gt;Mengambil Data dari Array&lt;/h2&gt;

&lt;p&gt;Seperti yang sudah kita ketahui, array memiliki indeks untuk memudahkan
kita mengakses datanya.&lt;/p&gt;

&lt;p&gt;Karena itu, kita bisa mengambil datanya dengan cara seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;// membuat array
String[] nama = {&amp;quot;Linda&amp;quot;, &amp;quot;Santi&amp;quot;, &amp;quot;Susan&amp;quot;, &amp;quot;Mila&amp;quot;, &amp;quot;Ayu&amp;quot;};

// mengambil data array
System.out.println(teman[2]);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Kira-kira apa hasil outputnya?&lt;/p&gt;

&lt;p&gt;Yep! benar sekali, hasil outputnya adalah:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Susan
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Karena &lt;code&gt;Susan&lt;/code&gt; terletak di indeks ke-2.&lt;/p&gt;

&lt;h2 id=&#34;menggunakan-perulangan&#34;&gt;Menggunakan Perulangan&lt;/h2&gt;

&lt;p&gt;Mengambil data satu per satu dari array mungkin cukup melelahkan, karena kita harus mengtik ulang nama array-nya dengan indeks yang berbeda.&lt;/p&gt;

&lt;p&gt;Contoh:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;System.out.println(teman[0]);
System.out.println(teman[1]);
System.out.println(teman[2]);
System.out.println(teman[3]);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bagaimana kalau data array-nya sampai 1000,
maka kita harus mengetik kode sebanyak seribu kali.&lt;/p&gt;

&lt;p&gt;Karena itu, disinilah peran perulangan.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-pXqVRCPTKn0/Vxjjx7C66lI/AAAAAAAACvo/jwQlQIf84SoJLlK-PwdAfjFi-Gwqa5F3ACK4B/s1600/Contoh%2BArray%2Bdi%2BJava%2B-%2BPetani%2BKode.png&#34;&gt;&lt;img src=&#34;https://4.bp.blogspot.com/-pXqVRCPTKn0/Vxjjx7C66lI/AAAAAAAACvo/jwQlQIf84SoJLlK-PwdAfjFi-Gwqa5F3ACK4B/s1600/Contoh%2BArray%2Bdi%2BJava%2B-%2BPetani%2BKode.png&#34; alt=&#34;Contoh Array yang diakses dengan perulangan&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Perhatikan&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;Di sana kita menggunakan atribut &lt;code&gt;length&lt;/code&gt; untuk mengambil panjang array-nya.&lt;/p&gt;

&lt;p&gt;Jadi, perulangan akan dilakukan sebanyak isi array-nya.&lt;/p&gt;

&lt;h2 id=&#34;sekarang-mari-kita-latihan&#34;&gt;Sekarang Mari Kita Latihan&lt;/h2&gt;

&lt;p&gt;Silahkan buat class bernama &lt;code&gt;Buah&lt;/code&gt;, kemudian ikuti kode berikut:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.util.Scanner;

public class Buah {
    public static void main(String[] args) {

        // membuat array buah-buahan
        String[] buah = new String[5];

        // membuat scanner
        Scanner scan = new Scanner(System.in);

        // mengisi data ke array
        for( int i = 0; i &amp;lt; buah.length; i++ ){
            System.out.print(&amp;quot;Buah ke-&amp;quot; + i + &amp;quot;: &amp;quot;);
            buah[i] = scan.nextLine();
        }

        System.out.println(&amp;quot;---------------------------&amp;quot;);

        // menampilkan semua isi array
        for( String b : buah ){
            System.out.println(b);
        }

    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil outputnya:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-Eu9sKzaEPhQ/WPL9CM8eOiI/AAAAAAAAEvk/PKKEamCynOoxHlwY9UV9iGzniKi-8j0SgCPcB/s1600/Hasil%2Boutput%2Bprogram%2Barray.png&#34; alt=&#34;Hasil output program array&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Perhatikan&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;Di sana kita menggunakan perulangan &lt;em&gt;foreach&lt;/em&gt; untuk menampilkan isi array.&lt;/p&gt;

&lt;p&gt;Seperti yang sudah kita pelajari pada materi &lt;a href=&#34;https://www.petanikode.com/pemrograman-java-perulangan/&#34;&gt;Perulangan di Java&lt;/a&gt;,
perulangan ini dapat kita gunakan untuk menampilkan isi array.&lt;/p&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;h2 id=&#34;array-multi-dimensi&#34;&gt;Array Multi Dimensi&lt;/h2&gt;

&lt;p&gt;Array multi dimensi artinya array yang memiliki lebih dari satu dimensi.&lt;/p&gt;

&lt;p&gt;Atau kita bisa sebut, array di dalam array.&lt;/p&gt;

&lt;p&gt;Jumlah dimensinya tidak terbatas, tergantung kita mampunya sampai berapa :smile:.&lt;/p&gt;

&lt;p&gt;Contoh berikut ini adalah array dua dimensi:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;String[][] kontak = {
    {&amp;quot;Lili&amp;quot;,&amp;quot;08111&amp;quot;},
    {&amp;quot;Lala&amp;quot;,&amp;quot;08122&amp;quot;},
    {&amp;quot;Maya&amp;quot;,&amp;quot;08133&amp;quot;}
};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Indek ke-&lt;code&gt;0&lt;/code&gt; pada array &lt;code&gt;kontak&lt;/code&gt; berisi array &lt;code&gt;{&amp;quot;lili&amp;quot;,&amp;quot;08111&amp;quot;}&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://1.bp.blogspot.com/-PX_aCblKjWQ/WPMMC9XYrGI/AAAAAAAAEwc/gVmcSuIdx68ZyqZA9qzid-h_d_Qlq6MvACPcB/s1600/array%2Bdua%2Bdimensi.png&#34; alt=&#34;Array dua dimensi&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Contoh cara mengakses data dari array dua dimensi:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://4.bp.blogspot.com/--B8JIXhQjjU/Vxjj-XAAERI/AAAAAAAACvw/h3zXImrKeBg0pjgjAE5df7fi9iXETaQ5wCK4B/s1600/Array%2Bdua%2Bdimensi.png&#34; alt=&#34;Contoh Array 2 Dimensi di Java&#34; title=&#34;Contoh Array 2 Dimensi di Java&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;contoh-program-array-multi-dimensi&#34;&gt;Contoh Program Array Multi Dimensi&lt;/h2&gt;

&lt;p&gt;Biar makin mantap pemahaman kita tentang array multi dimensi, mari kita coba
membuat sebuah program.&lt;/p&gt;

&lt;p&gt;Silahkan buat class baru bernama &lt;code&gt;RuangKelas&lt;/code&gt; kemudian ikuti kode berikut:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.util.Scanner;

public class RuangKelas {
    public static void main(String[] args) {

        // Membuat Array dan Scanner
        String[][] meja = new String[2][3];
        Scanner scan = new Scanner(System.in);

        // mengisi setiap meja
        for(int bar = 0; bar &amp;lt; meja.length; bar++){
            for(int kol = 0; kol &amp;lt; meja[bar].length; kol++){
                System.out.format(&amp;quot;Siapa yang akan duduk di meja (%d,%d): &amp;quot;, bar, kol);
                meja[bar][kol] = scan.nextLine();
            }
        }

        // menampilkan isi Array
        System.out.println(&amp;quot;-------------------------&amp;quot;);
        for(int bar = 0; bar &amp;lt; meja.length; bar++){
            for(int kol = 0; kol &amp;lt; meja[bar].length; kol++){
                System.out.format(&amp;quot;| %s | \t&amp;quot;, meja[bar][kol]);
            }
            System.out.println(&amp;quot;&amp;quot;);
        }
        System.out.println(&amp;quot;-------------------------&amp;quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil outputnya:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://2.bp.blogspot.com/-KdgwFPj1DOE/WPM-I_9okwI/AAAAAAAAExA/ELeXJHgmUno_wygnOdDWaiEcbmpacQnIwCPcB/s1600/Hasil%2Boutput%2Bprogram%2Barray%2B2d.png&#34; alt=&#34;Hasil output cotoh program array 2d&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Pada program tersebut, kita menggunakan perulangan bersarang untuk &lt;a href=&#34;https://www.petanikode.com/pemrograman-java-input-dan-output/&#34;&gt;mengambil
input dan menampilkan outputnya&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Karena array dua dimensi mirip seperti tabel, maka kita harus melakukan perulangan
terhadap baris dan kolomnya.&lt;/p&gt;

&lt;p&gt;Lalu bagaimana dengan array 3D, 4D, 5D, dan seterusnya?&lt;/p&gt;

&lt;p&gt;Tentu saja kita harus membuat perulangan bersarang sebanyak dimensinya.&lt;/p&gt;

&lt;p&gt;Kalau tiga, ya buat tiga perulangan.&lt;/p&gt;

&lt;h2 id=&#34;array-list&#34;&gt;Array List&lt;/h2&gt;

&lt;p&gt;Array yang kita bahas di atas sebenarnya memiliki beberapa kekurangan,
seperti:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tidak mampu menyimpan data dengan tipe yang berbeda.&lt;/li&gt;
&lt;li&gt;Ukurannya tidak dinamis.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Maka dari itu, ada Array List yang menutupi kekurangan tersebut.&lt;/p&gt;

&lt;p&gt;Array list merupakan sebuah class yang memungkinkan kita membuat sebuah objek
untuk menampung apapun.&lt;/p&gt;

&lt;p&gt;Untuk menggunakan Array List, kita harus mengimpornya terlebih dahulu.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.util.ArrayList;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Setelah itu, baru kita bisa membuat sebuah objek Array List seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt; ArrayList al = new ArrayList();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Mari kita coba&amp;hellip;.&lt;/p&gt;

&lt;h3 id=&#34;contoh-program-dengan-array-list&#34;&gt;Contoh Program dengan Array List&lt;/h3&gt;

&lt;p&gt;Silahkan membuat class dengan nama &lt;code&gt;Doraemon&lt;/code&gt;, kemudian ikuti kode berikut:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.util.ArrayList;

public class Doraemon {
    public static void main(String[] args) {

        // membuat objek array list
        ArrayList kantongAjaib = new ArrayList();

        // Mengisi kantong ajaib dengan 5 benda
        kantongAjaib.add(&amp;quot;Senter Pembesar&amp;quot;);
        kantongAjaib.add(532);
        kantongAjaib.add(&amp;quot;tikus&amp;quot;);
        kantongAjaib.add(1231234.132);
        kantongAjaib.add(true);

        // menghapus tikus dari kantong ajaib
        kantongAjaib.remove(&amp;quot;tikus&amp;quot;);

        // Menampilkan isi kantong ajaib
        System.out.println(kantongAjaib);

        // menampilkan banyak isi kantong ajaib
        System.out.println(&amp;quot;Kantong ajaib berisi &amp;quot;+ kantongAjaib.size() +&amp;quot; item&amp;quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil outputnya:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-7JRiE4HDFSY/WPNEa7eTnLI/AAAAAAAAExg/jrzHNYqskAAA-zZQvgCKif_2pVZhdq6pQCPcB/s1600/Hasil%2Boutput%2Bprogram%2Bdoraemon%2Bdengan%2Barray%2Blist.png&#34; alt=&#34;Hasil output program array list&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Karena array list (&lt;code&gt;kantongAjaib&lt;/code&gt;) merupakan sebuah objek yang terbuat dari class Array List,
maka dia punya &lt;em&gt;method&lt;/em&gt; (fungsi) untuk melakukan sesuatu.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fungsi &lt;code&gt;add()&lt;/code&gt; untuk menambahkan sesuatu ke dalam Array List;&lt;/li&gt;
&lt;li&gt;Fungsi &lt;code&gt;remove()&lt;/code&gt; untuk menghapus sesuatu ke dalam Array List;&lt;/li&gt;
&lt;li&gt;Fungsi &lt;code&gt;size()&lt;/code&gt; untuk mengambil ukuran Array List;&lt;/li&gt;
&lt;li&gt;Fungsi &lt;code&gt;get(id)&lt;/code&gt; untuk mengambil item dalam Array List berdasarkan id atau indeks tertentu.&lt;/li&gt;
&lt;li&gt;dan masih banyak fungsi yang lainnya.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;apa-selanjutnya&#34;&gt;Apa Selanjutnya?&lt;/h2&gt;

&lt;p&gt;Kita telah memahami cara penggunaan Array dalam program Java.&lt;/p&gt;

&lt;p&gt;Berikut ini ringkasannya:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Array adalah variabel yang bisa menyimpan banyak data;&lt;/li&gt;
&lt;li&gt;Array bisa multi dimensi;&lt;/li&gt;
&lt;li&gt;Array memiliki beberapa kekurangan, akan tetapi sudah ditutupi oleh array list.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Selanjutnya, silahkan pelajari tentang Method atau Fungsi pada Java.&lt;/p&gt;

&lt;p&gt;Ada yang ditanyakan?&lt;/p&gt;

&lt;p&gt;Silahkan tuliskan di komentar.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Belajar Pemrograman Java: Memahami Dua Jenis Perulangan dalam Java</title>
      <link>https://www.petanikode.com/pemrograman-java-perulangan/</link>
      <pubDate>Sun, 03 Jan 2016 18:28:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/pemrograman-java-perulangan/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://2.bp.blogspot.com/-dg7YKHRwVkI/WPBf-VJbwpI/AAAAAAAAEt8/T7UCAyyXf9UMm8EwmcMFIL7NSo0iHvASQCPcB/s1600/roller-coaster-perulangan-dalam-pemrograman.jpg&#34; alt=&#34;Belajar Pemrograman Java: Memahami Dua Jenis Perulangan dalam Java&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Apa yang akan kita lakukan bila ingin menyuruh komputer mengerjakan perintah
yang berulang-ulang?&lt;/p&gt;

&lt;p&gt;Misalkan kita ingin menyuruh komputer menampilkan teks &lt;code&gt;Petani Kode&lt;/code&gt; sebanyak 5x.&lt;/p&gt;

&lt;p&gt;Maka kita bisa menyuruhnya seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;System.out.println(&amp;quot;Petani Kode&amp;quot;);
System.out.println(&amp;quot;Petani Kode&amp;quot;);
System.out.println(&amp;quot;Petani Kode&amp;quot;);
System.out.println(&amp;quot;Petani Kode&amp;quot;);
System.out.println(&amp;quot;Petani Kode&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tapi&amp;hellip; bagaimana kalau sebanyak 1000x, apa kita akan mampu mengetik kode
sebanyak itu?&lt;/p&gt;

&lt;p&gt;Tentunya tidak.&lt;/p&gt;

&lt;p&gt;Karena itu, kita harus pakai perulangan.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-Pab1ngEX31Y/VlToeaw3YnI/AAAAAAAACQM/te0QBK1U-VY/s1600/Flowchart%2Bperulangan%2B-%2Bpetani%2Bkode.png&#34;&gt;&lt;img src=&#34;http://1.bp.blogspot.com/-Pab1ngEX31Y/VlToeaw3YnI/AAAAAAAACQM/te0QBK1U-VY/s1600/Flowchart%2Bperulangan%2B-%2Bpetani%2Bkode.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Contoh perulangan:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;for (int hitungan = 0; hitungan &amp;lt;= 1000; hitungan++) {
    System.out.println(&amp;quot;Petani Kode&amp;quot;);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sebelum masuk ke pembahasan lebih dalam, ada hal yang harus kalian ketahui
terlebih dahulu.&lt;/p&gt;

&lt;p&gt;Perulangan dalam pemrograman dibagi manjadi dua jenis:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Counted loop&lt;/strong&gt;: Perulangan yang jumlah pengulangannya terhitung atau tentu.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Uncounted loop&lt;/strong&gt;: Perulangan yang jumlah pengulangannya tidak terhitung
atau tidak tentu.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-H5kHb8OE1M0/WPAzGFHXcLI/AAAAAAAAEtY/yGby7eMeA1Y23LqPpS9Zmxx6aJppZRcmACPcB/s1600/mindmap_perulangan.png&#34; alt=&#34;Mind Map Perulangan&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Counted loop&lt;/em&gt; terdiri dari perulangan &lt;em&gt;For&lt;/em&gt; dan &lt;em&gt;For each&lt;/em&gt;. Sedangkan
&lt;em&gt;Uncounted loop&lt;/em&gt; terdiri dari perulangan &lt;em&gt;While&lt;/em&gt; dan &lt;em&gt;Do/While&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;h2 id=&#34;1-counted-loop&#34;&gt;1. Counted Loop&lt;/h2&gt;

&lt;p&gt;Seperti yang sudah dijelaskan, perulangan ini memiliki jumlah pengulangan yang
tentu dan terhitung.&lt;/p&gt;

&lt;p&gt;Perulangan ini terdiri dari perulangan &lt;em&gt;For&lt;/em&gt; dan &lt;em&gt;For each&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Mari kita bahas satu per satu&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;perulangan-for&#34;&gt;Perulangan &lt;em&gt;For&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Format penulisan perulangan &lt;em&gt;For&lt;/em&gt; di java adalah sebagai berikut:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;for( int hitungan = 0; hitungan &amp;lt;= 10; hitungan++ ){
    // blok kode yang akan diulang
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Penjelasan:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;variabel &lt;code&gt;hitungan&lt;/code&gt; tugasnya untuk menyimpan hitungan pengulangan.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hitungan &amp;lt;= 10&lt;/code&gt; artinya selama nilai hitungannya lebih kecil atau sama dengan 10, maka
pengulangan akan terus dilakukan. Dengan kata lain, perualangan ini akan mengulang
sebanyak 10 kali.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hitungan++&lt;/code&gt; fungsinya untuk menambah satu (&lt;code&gt;+1&lt;/code&gt;) nilai hitungan peda setiap pengulangan.&lt;/li&gt;
&lt;li&gt;Blok kode &lt;em&gt;For&lt;/em&gt; dimulai dengan tanda &amp;lsquo;&lt;code&gt;{&lt;/code&gt;&amp;rsquo; dan diakhiri dengan &amp;lsquo;&lt;code&gt;}&lt;/code&gt;&amp;rsquo;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mari kkita coba dalam contoh program&amp;hellip;&lt;/p&gt;

&lt;h4 id=&#34;contoh-program-perulangan-for&#34;&gt;Contoh Program Perulangan &lt;em&gt;For&lt;/em&gt;&lt;/h4&gt;

&lt;p&gt;Silahkan buat class baru bernama &lt;code&gt;Bintang&lt;/code&gt;, kemudian ikuti kode berikut:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;class Bintang{
    public static void main(String[] args){

        for(int i=0; i &amp;lt;= 5; i++){
            System.out.println(&amp;quot;*****&amp;quot;);
        }

    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil output:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;*****
*****
*****
*****
*****
*****
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Mau lagi?&lt;/p&gt;

&lt;p&gt;Sekarang cobalah buat program untuk menampilkan nilai dari 1 sampai 10 dengan
menggunakan perulangan.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;class CetakAngka{

    public static void main(String[] argumen){

        for(int i=0; i &amp;lt;= 10; i++){
            System.out.print( i + &amp;quot; &amp;quot; );
        }

    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil output:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;0 1 2 3 4 5 6 7 8 9 10
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Coba kita lakukan sedikit eksperimen.&lt;/p&gt;

&lt;p&gt;Buat sebuah program yang menampilkan bilangan ganjil saja.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;class CetakBilanganGanjil{

    public static void main(String[] argumen){
        for(int i = 1; i &amp;lt;= 20; i += 2){
            System.out.print( i + &amp;quot; &amp;quot;);
        }
    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil output:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1 3 5 7 9 11 13 15 17 19
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Perhatikan: di sana kita menggunakan &lt;code&gt;i += 2&lt;/code&gt;, bukan &lt;code&gt;i++&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Apa maksudnya?&lt;/p&gt;

&lt;p&gt;Maksudnya, nilai &lt;code&gt;i&lt;/code&gt; akan ditambah dua (&lt;code&gt;+2&lt;/code&gt;) di setiap pengulangan.&lt;/p&gt;

&lt;h3 id=&#34;perulangan-for-each&#34;&gt;Perulangan &lt;em&gt;For Each&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Perulangan ini sebenarnya digunakan untuk menampilkan isi dari &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Apa itu &lt;em&gt;array&lt;/em&gt;?&lt;/p&gt;

&lt;p&gt;Singkatnya, &lt;em&gt;array&lt;/em&gt; itu variabel yang menyimpan lebih dari satu nilai dan
memiliki indeks.&lt;/p&gt;

&lt;p&gt;Selengkapnya, nanti bisa di pelajari pada materi: &lt;a href=&#34;https://www.petanikode.com/pemrograman-java-di-lab-15-mengenal-array/&#34;&gt;Mengenal Array di Java&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Lanjut&amp;hellip;&lt;/p&gt;

&lt;p&gt;Perulangan &lt;em&gt;For Each&lt;/em&gt; pada Java, dilakukan juga dengan kata kunci &lt;em&gt;For&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Contohnya seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;for ( int item : dataArray ) {
    // blok kode yang diulang
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Penjelasan:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;variabel &lt;code&gt;item&lt;/code&gt; akan menyimpan nilai dari &lt;em&gt;array&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Kita bisa baca seperti ini: &amp;ldquo;Untuk setiap &lt;code&gt;item&lt;/code&gt; dalam &lt;code&gt;dataArray&lt;/code&gt;, maka lakukan
perulangan&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;contoh-program-for-each&#34;&gt;Contoh Program &lt;em&gt;For Each&lt;/em&gt;&lt;/h4&gt;

&lt;p&gt;Buat sebuah class baru bernama &lt;code&gt;PerulanganForeach&lt;/code&gt;, kemudian ikuti kode berikut.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class PerulanganForeach {
    public static void main(String[] args) {

        // membuat array
        int angka[] = {3,1,42,24,12};

        // menggunakan perulangan For each untuk menampilkan angka
        for( int x : angka ){
            System.out.print(x + &amp;quot; &amp;quot;);
        }

    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil outputnya:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;3 1 42 24 12
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;uncounted-loop&#34;&gt;Uncounted Loop&lt;/h2&gt;

&lt;p&gt;Seperti yang sudah dijelaskan di awal tadi, perulangan ini tidak jelas jumlah
pengulangannya.&lt;/p&gt;

&lt;p&gt;Tapi, tidak menutup kemungkinan juga, jumlah pengulangannya dapat ditentukan.&lt;/p&gt;

&lt;p&gt;Perulangan &lt;em&gt;uncounted loop&lt;/em&gt; terdirid dari perulangan &lt;em&gt;While&lt;/em&gt; dan &lt;em&gt;Do/While&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-nqIIOY3vCyM/WPAp9h0orPI/AAAAAAAAEsA/3-EK9wK7E08g02F8E7AoFF1kOzPurVniQCPcB/s1600/flow%2Bchart%2Bperulangan%2Bwhile%2Bdan%2Bdo%2Bwhile.png&#34; alt=&#34;Flow Chart Perulangan While dan Do/While&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Mari kita bahas satu per satu&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;perulangan-while&#34;&gt;Perulangan While&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;While&lt;/em&gt; bisa kita artikan &lt;em&gt;selama&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Cara kerja perulangan ini seperti percabangan, ia akan melakukan perulangan
selama kondisinya bernilai &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Struktur penulisan perulangan while:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;while ( kondisi ) {
    // blok kode yang akan diulang
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Penjelasan:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;kondisi&lt;/em&gt; bisa kita isi dengan perbandingan maupun variabel boolean. &lt;em&gt;Kondisi&lt;/em&gt;
ini hanya memiliki nilai &lt;code&gt;true&lt;/code&gt; dan &lt;code&gt;flase&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Perulangan &lt;code&gt;while&lt;/code&gt; akan berhenti sampai &lt;em&gt;kondisi&lt;/em&gt; bernilai &lt;code&gt;false&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Untuk lebih jelasnya, mari kita coba membuat program&amp;hellip;&lt;/p&gt;

&lt;h4 id=&#34;contoh-program-dengan-perulangan-while&#34;&gt;Contoh Program dengan Perulangan While&lt;/h4&gt;

&lt;p&gt;Program ini akan melakukan perulangan selama jawabannya tidak.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.util.Scanner;

public class PerulanganWhile {
    public static void main(String[] args) {

        // membuat variabel dan scanner
        boolean running = true;
        int counter = 0;
        String jawab;
        Scanner scan = new Scanner(System.in);

        while( running ) {
            System.out.println(&amp;quot;Apakah anda ingin keluar?&amp;quot;);
            System.out.print(&amp;quot;Jawab [ya/tidak]&amp;gt; &amp;quot;);

            jawab = scan.nextLine();

            // cek jawabnnya, kalau ya maka berhenti mengulang
            if( jawab.equalsIgnoreCase(&amp;quot;ya&amp;quot;) ){
                running = false;
            }

            counter++;
        }

        System.out.println(&amp;quot;Anda sudah melakukan perulangan sebanyak &amp;quot; + counter + &amp;quot; kali&amp;quot;);

    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil outputnya:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-JfmFcjrI0jA/WPAvJhGuXCI/AAAAAAAAEss/P7LDcaWyO7Qywr8MrSV5U3gp7xEPZz6LwCPcB/s1600/Hasil%2Boutput%2Bprogram%2Bwhile.png&#34; alt=&#34;Hasil output contoh program menggunakan perulangan while&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Di sana telah dilakukan perulangan sebanyak 4 kali. Bisa saja terjadi 10 kali.&lt;/p&gt;

&lt;p&gt;Itu targantung dari kondisinya.&lt;/p&gt;

&lt;p&gt;Kalau nilai variabel &lt;code&gt;running&lt;/code&gt; bernilai &lt;code&gt;false&lt;/code&gt;, maka perulangan berhenti.&lt;/p&gt;

&lt;p&gt;Contoh kode &lt;em&gt;while&lt;/em&gt; di atas dapat kita baca seperti ini: &amp;ldquo;Lakukan perulangan
selama nilai &lt;code&gt;running&lt;/code&gt; bernilai &lt;code&gt;true&lt;/code&gt;.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Tidak menutup kemungkinan juga, perulangan ini dapat melakukan &lt;em&gt;counted loop&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Contohnya seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;int i = 0;

while ( i &amp;lt;= 10 ){
    // blok kode yang akan diulang
    System.out.println(&#39;Perulangan ke-&#39; + i);

    // increment nilai i
    i++;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil outputnya:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Perulangan ke-0
Perulangan ke-1
Perulangan ke-2
Perulangan ke-3
Perulangan ke-4
Perulangan ke-5
Perulangan ke-6
Perulangan ke-7
Perulangan ke-8
Perulangan ke-9
Perulangan ke-10
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Penting&lt;/strong&gt;: pastikan melakukan &lt;em&gt;increment&lt;/em&gt; (&lt;code&gt;i++&lt;/code&gt;) terhadap variabel &lt;em&gt;counter&lt;/em&gt;.
Karena kalau tidak, perulangannya akan terus-menerus dilakukan sampai
komputernya hang.&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34; data-lang=&#34;en&#34;&gt;&lt;p lang=&#34;in&#34; dir=&#34;ltr&#34;&gt;ini yang akan terjadi saat kalian lupa menambahkan i++ di perulangan while 😄 &lt;a href=&#34;https://t.co/35lCFOa3zn&#34;&gt;pic.twitter.com/35lCFOa3zn&lt;/a&gt;&lt;/p&gt;&amp;mdash; Petani Kode (@petanikode) &lt;a href=&#34;https://twitter.com/petanikode/status/852692611932372992&#34;&gt;April 14, 2017&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;//platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;

&lt;h3 id=&#34;perulangan-do-while&#34;&gt;Perulangan &lt;em&gt;Do/While&lt;/em&gt;&lt;/h3&gt;

&lt;p&gt;Cara kerja perulangan &lt;em&gt;Do/While&lt;/em&gt; sebenarnya sama seperti perulangan &lt;em&gt;While&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Bedanya, &lt;em&gt;Do/While&lt;/em&gt; melakukan satu kali perulangan dulu. Kemudian mengecek
kondisinya.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://2.bp.blogspot.com/-wL-NuySRPrs/WPAsXvsC3xI/AAAAAAAAEsU/rKVYj1mIGRgaZOAPXj-bOwxFcxvjFCvCQCPcB/s1600/flowchart_perulangan_do_while.png&#34; alt=&#34;Flowchart perulangan do/while&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Struktur penulisannya seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;do {
    // blok kode yang akan diulang
} while (kondisi);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Jadi kerjakan dulu (&lt;code&gt;Do&lt;/code&gt;), baru di cek kondisinya &lt;code&gt;while( kondisi )&lt;/code&gt;.
Kalau &lt;code&gt;kondisi&lt;/code&gt; bernilai &lt;code&gt;ture&lt;/code&gt;, maka lanjutkan perulangan.&lt;/p&gt;

&lt;h4 id=&#34;contoh-program-dengan-perulangan-do-while&#34;&gt;Contoh Program dengan Perulangan &lt;em&gt;Do/While&lt;/em&gt;&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class PerulanganDoWhile {
    public static void main(String[] args) {

        // membuat variabel
        int i = 0;

        do {
            System.out.println(&amp;quot;perulangan ke-&amp;quot; + i);
            i++;
        } while ( i &amp;lt;= 10);

    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil outputnya:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;perulangan ke-0
perulangan ke-1
perulangan ke-2
perulangan ke-3
perulangan ke-4
perulangan ke-5
perulangan ke-6
perulangan ke-7
perulangan ke-8
perulangan ke-9
perulangan ke-10
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;parulangan-bersarang-nested-loop&#34;&gt;Parulangan Bersarang &lt;em&gt;(Nested Loop)&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;Perulangan juga dapat bersarang. Perulangan bersarang maksudnya, perulangan
dalam perulangan atau disebut juga &lt;em&gt;nested loop&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Contoh bentuk flow chart-nya seperti ini:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://4.bp.blogspot.com/-2TNHnT8VfME/WPAxNGNxSbI/AAAAAAAAEtA/3b5GaKrDVvMhuAzjYpVr3cygt4jNAvsyQCPcB/s1600/perulangan_bersarang.png&#34; alt=&#34;Flow Chart Perulangan Bersarang&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;contoh-program-perulangan-bersarang&#34;&gt;Contoh Program Perulangan Bersarang&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class PerulanganBersarang {
    public static void main(String[] args) {

        // membuat variabel
        int x, y;

        // melakukan parulang sebnayan x dan y kali
        for (x = 0; x &amp;lt;= 5; x++){
            for( y = 0; y &amp;lt;= 3; y++){
                System.out.format(&amp;quot;Perulangan [x=%d, y=%d] %n&amp;quot;, x, y);
            }
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil outputnya:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Perulangan [x=0, y=0]
Perulangan [x=0, y=1]
Perulangan [x=0, y=2]
Perulangan [x=0, y=3]
Perulangan [x=1, y=0]
Perulangan [x=1, y=1]
Perulangan [x=1, y=2]
Perulangan [x=1, y=3]
Perulangan [x=2, y=0]
Perulangan [x=2, y=1]
Perulangan [x=2, y=2]
Perulangan [x=2, y=3]
Perulangan [x=3, y=0]
Perulangan [x=3, y=1]
Perulangan [x=3, y=2]
Perulangan [x=3, y=3]
Perulangan [x=4, y=0]
Perulangan [x=4, y=1]
Perulangan [x=4, y=2]
Perulangan [x=4, y=3]
Perulangan [x=5, y=0]
Perulangan [x=5, y=1]
Perulangan [x=5, y=2]
Perulangan [x=5, y=3]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;PS:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Perulangan bersarang sering digunakan pada &lt;em&gt;array&lt;/em&gt; multi dimensi.&lt;/li&gt;
&lt;li&gt;Jenis perulangan di dalam perulangn bisa berbeda, misalnya di dalam perulangan
&lt;em&gt;while&lt;/em&gt; ada perulangan &lt;em&gt;for&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;apa-selanjutnya&#34;&gt;Apa Selanjutnya?&lt;/h2&gt;

&lt;p&gt;Kita sudah pelajari konsep dasar perulangan dalam pemrograman Java.&lt;/p&gt;

&lt;p&gt;Ada perulangan &lt;em&gt;Counted Loop&lt;/em&gt; dan &lt;em&gt;Uncounted Loop&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Kalau ada yang ditanyakan, silahkan tuliskan di komentar.&lt;/p&gt;

&lt;p&gt;Selanjutnya, silahkan pelajari: &lt;a href=&#34;https://www.petanikode.com/pemrograman-java-array/&#34;&gt;Cara Menggunakan Array untuk Menyimpan Banyak Hal&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Belajar Pemrograman Java: Inilah 3 Bentuk Percabangan yang Harus Dipahami</title>
      <link>https://www.petanikode.com/pemrograman-java-percabangan/</link>
      <pubDate>Sun, 25 Oct 2015 18:33:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/pemrograman-java-percabangan/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;https://2.bp.blogspot.com/-RvCLtSJKtig/WOhpIb2ZUuI/AAAAAAAAEoE/ucr44ME4UwYCNIP5HhieepL_KexR9tifwCPcB/s1600/percabangan%2Brel%2Bkereta%2Bapi.jpg&#34; alt=&#34;Perbangan Java&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Kalau kita perhatikan, alur pengeksekusian sebuah kode program dikerjakan satu per satu dari atas
sampai ke bawah.&lt;/p&gt;

&lt;p&gt;Baris demi baris dibaca, kemudian komputer mengerjakan apa yang diperintahkan.&lt;/p&gt;

&lt;p&gt;Misalnya seperti ini:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://2.bp.blogspot.com/-K9oL9zetghQ/WOhpISQO-4I/AAAAAAAAEoE/anwCWCtzMPwFxM7wAH7k46Rj4Ri7xjEhwCPcB/s1600/alur%2Beksekusi%2Bprogram%2Btanpa%2Bflowchart.png&#34; alt=&#34;Alur porgram tanpa percabangan&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Alur programnya satu, tidak ada belokan atau percabangan.&lt;/p&gt;

&lt;p&gt;Ngomong-ngomong apa itu percabangan?&lt;/p&gt;

&lt;p&gt;Percabangan hanyalah sebuah istilah yang digunakan untuk menyebut
alur program yang bercabang.&lt;/p&gt;

&lt;p&gt;Percabangan juga dikenal dengan &amp;ldquo;Control Flow&amp;rdquo;, &amp;ldquo;Struktur Kondisi&amp;rdquo;,
&amp;ldquo;Struktur IF&amp;rdquo;, &amp;ldquo;Decision&amp;rdquo;, dsb. Semuanya itu sama.&lt;/p&gt;

&lt;p&gt;Pada diagram alur &lt;em&gt;(Flow Chart)&lt;/em&gt; seperti di atas, alurnya memang satu.&lt;/p&gt;

&lt;p&gt;Tapi setelah kita menggunakan percabangan, alurnya akan bertambah menjadi seperti ini.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://4.bp.blogspot.com/-VdWpqvZZHFk/WOhuYZN8lxI/AAAAAAAAEos/Rston6k1KwMGagHld2CZoJE38SvZtXC-wCPcB/s1600/contoh-percabangan.png&#34; alt=&#34;Flowchart Percabangan&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Lalu bagaimana cara menulis kode percabangan dalam Java?&lt;/p&gt;

&lt;p&gt;Caranya: menggunakan kata kunci &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;, &lt;code&gt;switch&lt;/code&gt;, dan &lt;code&gt;case&lt;/code&gt;, dan operator ternary.&lt;/p&gt;

&lt;p&gt;Contoh format stuktur IF seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;if( suatu_kondisi ) {
    // lakukan sesuatu kalau kondisi benar
    // Lakukan ini juga
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;suatu_kondisi&lt;/code&gt; hanya bernilai &lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt; saja. Kita bisa gunakan operator
relasi dan logika di sini.&lt;/p&gt;

&lt;p&gt;Untuk lebih jelasnya, nanti akan kita bahas.&lt;/p&gt;

&lt;p&gt;Sebelumnya, kamu perlu tahu dulu tiga bentuk percabangan pada Java:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Percabangan IF&lt;/li&gt;
&lt;li&gt;Percabangan IF/ELSE&lt;/li&gt;
&lt;li&gt;Percabangan IF/ELSE/IF atau SWITCH/CASE&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Mari kita bahas satu per satu&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;h2 id=&#34;1-percabangan-if&#34;&gt;1. Percabangan IF&lt;/h2&gt;

&lt;p&gt;Percabangan ini hanya memiliki satu pilihan. Artinya, pilihan di dalam IF
hanya akan dikerjakan kalau kondisinya benar.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://2.bp.blogspot.com/-U8SqJhBeFoc/WOh7pR4aSNI/AAAAAAAAEpM/_i52DJOZIm80Ux6fdnVWfmEHx8WdvQfHACPcB/s1600/percabangan-if-dalam-pemrograman.png&#34; alt=&#34;Percabangan IF&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Tapi kalau salah&amp;hellip; tidak akan melakukan apa-apa. Alias lanjut eksekusi ke
perintah berikutnya.&lt;/p&gt;

&lt;p&gt;Contoh:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Pernahkah kalian belanja di toko, kemudian kalau belanja di atas sekian ribu
dapat hadiah atau diskon.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Nah! Contoh kasus seperti itu, dapat kita selesaikan dengan menggunakan percabangan
ini.&lt;/p&gt;

&lt;p&gt;untuk lebih jelasnya&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;mari-kita-membuat-program-hadiah&#34;&gt;Mari Kita Membuat Program Hadiah&lt;/h3&gt;

&lt;p&gt;Misalkan ada sebuah toko buku. Mereka memberikan hadiah berupa
perlengkapan sekolah kepada pembeli yang belanja di atas Rp 100.000.&lt;/p&gt;

&lt;p&gt;Maka programnya bisa kita buat seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.util.Scanner;

public class Hadiah {

    public static void main(String[] args) {

        // membuat variabel belanja dan scanner
        int belanja = 0;
        Scanner scan = new Scanner(System.in);

        // mengambil input
        System.out.print(&amp;quot;Total Belanjaan: Rp &amp;quot;);
        belanja = scan.nextInt();

        // cek apakah dia belanja di atas 100000
        if ( belanja &amp;gt; 100000 ) {
            System.out.println(&amp;quot;Selamat, anda mendapatkan hadiah!&amp;quot;);
        }

        System.out.println(&amp;quot;Terima kasih...&amp;quot;);

    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Jalankan programnya dan perhatikanlah hasilnya.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-LGq9_8wC3I8/WOiZIi2nshI/AAAAAAAAEpw/gZtN9le-bfo-Thi4Ct8HWaDM1Dj4d5XsgCPcB/s1600/program%2Bdiskon%2Bdan%2Bhadiah%2Bdengan%2BJava.png&#34; alt=&#34;Program diskon dengan Java&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Cobalah untuk memberikan nilai di bawah &lt;code&gt;100000&lt;/code&gt; dan perhatikan apa akan yang terjadi.&lt;/p&gt;

&lt;h2 id=&#34;2-percabangan-if-else&#34;&gt;2. Percabangan IF/ELSE&lt;/h2&gt;

&lt;p&gt;Sedangkan percabangan IF/ELSE memiliki pilihan alternatif kalau kondisinya salah.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;IF&lt;/strong&gt;: &amp;ldquo;Jika kondisi benar maka kerjakan ini, kalau tidak silahkan lanjut&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;IF/ESLE&lt;/strong&gt;: &amp;ldquo;Jika kondisi benar maka kerjakan ini, kalau salah maka kerjakan yang itu,
setelah itu lanjut&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://1.bp.blogspot.com/-EBFXR8YanHg/ViyfSNX80-I/AAAAAAAACEI/BVBV3EX_r3Q/s1600/Percabangan%2Bdi%2Bpemrograman%2Bjava.png&#34; alt=&#34;Perbedaan percabangan IF dengan IF/ELSE&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Begitulah perbedaan IF dengan IF/ELSE.&lt;/p&gt;

&lt;p&gt;Sekarang mari kita coba dalam kode program&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;program-cek-kelulusan&#34;&gt;Program Cek Kelulusan&lt;/h3&gt;

&lt;p&gt;Misalkan, kalau nilai siswa lebih besar dari 70, maka ia dinyatakan lulus.
Kalau tidak, maka dia gagal.&lt;/p&gt;

&lt;p&gt;Programnya bisa kita buat seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.util.Scanner;

public class CekKelulusan {

    public static void main(String[] args) {

        // membuat variabel dan Scanner
        int nilai;
        String nama;
        Scanner scan = new Scanner(System.in);

        // mengambil input
        System.out.print(&amp;quot;Nama: &amp;quot;);
        nama = scan.nextLine();
        System.out.print(&amp;quot;Nilai: &amp;quot;);
        nilai = scan.nextInt();

        // cek apakah dia lulus atau tidak
        if( nilai &amp;gt;= 70 ) {
            System.out.println(&amp;quot;Selemat &amp;quot; + nama + &amp;quot;, anda lulus!&amp;quot;);
        } else {
            System.out.println(&amp;quot;Maaf &amp;quot; + nama + &amp;quot;, anda gagal&amp;quot;);
        }

    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil outputnya:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-rLwFoNL9qKk/WO79-OlRsUI/AAAAAAAAEqc/8r_1s5gF0MkIFz3NhZqOs0ocTZeeUT_jgCPcB/s1600/Hasil%2Boutput%2Bprogram%2Bcekkelulusan%2Bjava.png&#34; alt=&#34;Hasil output program tes kelulusan&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Cobalah untuk merubah nilai yang dimasukkan dan perhatikan apa yang
akan terjadi.&lt;/p&gt;

&lt;h3 id=&#34;percabangan-if-else-dengan-operator-ternary&#34;&gt;Percabangan IF/ELSE dengan Operator Ternary&lt;/h3&gt;

&lt;p&gt;Selain menggunakan struktur seperti di atas, percahangan ini juga dapat menggunakan
operator ternary.&lt;/p&gt;

&lt;p&gt;Seperti yang sudah kita pelajari pada &lt;a href=&#34;https://www.petanikode.com/pemrograman-java-operator/&#34;&gt;pembahasan tentang operator&lt;/a&gt;. Operator ternary memiliki konsep yang sama seperti percabganan IF/ELSE.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-OKB4MDtGjE4/WObxiPfq-wI/AAAAAAAAEmQ/kR9Ldcc1hr88u90060rCff0Gvs4lDRfQgCPcB/s1600/operator%2Bternary%2Bdi%2Bjava.png&#34; alt=&#34;Ilustraisi operator ternary&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Contoh programnya:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class OperatorTernary {
    public static void main(String[] args) {

        boolean suka = true;
        String jawaban;

        // menggunakan operator ternary
        jawaban = suka ? &amp;quot;iya&amp;quot; : &amp;quot;tidak&amp;quot;;

        // menampilkan jawaban
        System.out.println(jawaban);

    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;3-percabangan-if-else-if-dan-switch-case&#34;&gt;3. Percabangan IF/ELSE/IF dan SWITCH/CASE&lt;/h2&gt;

&lt;p&gt;Jika percabangan IF/ESLE hanya memiliki dua pilihan saja. Maka percahangan
IF/ELSE/IF memiliki lebih dari dua pilihan.&lt;/p&gt;

&lt;p&gt;Formatnya seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;if (suatu kondisi) {
    // maka kerjakan ini
    // kerjakan perintah ini juga
    // …
} else if (kondisi lain) {
    // kerjakan ini
    // kerjakan ini juga
    // …
} else if (kondisi yang lain lagi) {
    // kerjakan perintah ini
    // kerjakan ini juga
    // …
} esle {
    // kerjakan ini kalau
    // semua kondisi di atas
    // tidak ada yang benar
    // …
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Coba perhatikan contohnya:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://3.bp.blogspot.com/-9uS-c73seec/VkBISDA0AXI/AAAAAAAACLU/AsWtctwfCN0/s1600/flowchart%2Bpercabangan%2Byang%2Bmemiliki%2Bbanyak%2Bpilihan%2Bkeputusan.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Jika nilainya lebih besar dari &lt;code&gt;90&lt;/code&gt;, maka grade-nya &amp;ldquo;A&amp;rdquo;.
Sedangkan kalau lebih besar dari &lt;code&gt;80&lt;/code&gt;, maka &amp;ldquo;B+&amp;rdquo;. Lebih besar
dari &lt;code&gt;70&lt;/code&gt;, maka &amp;ldquo;B&amp;rdquo;, dan seterusnya.&lt;/p&gt;

&lt;p&gt;Lebih jelasnya, mari kita buat program.&lt;/p&gt;

&lt;h3 id=&#34;program-hitunggrade&#34;&gt;Program HitungGrade&lt;/h3&gt;

&lt;p&gt;Silahkan buat sebuah class baru bernama &lt;code&gt;HitungGrade&lt;/code&gt;, kemudian ikuti kode
program berikut.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.util.Scanner;

public class HitungGrade {
    public static void main(String[] args) {

        // membuat variabel dan scanner
        int nilai;
        String grade;
        Scanner scan = new Scanner(System.in);

        // mengambil input
        System.out.print(&amp;quot;Inputkan nilai: &amp;quot;);
        nilai = scan.nextInt();

        // higung gradenya
        if ( nilai &amp;gt;= 90 ) {
            grade = &amp;quot;A&amp;quot;;
        } else if ( nilai &amp;gt;= 80 ){
            grade = &amp;quot;B+&amp;quot;;
        } else if ( nilai &amp;gt;= 70 ){
            grade = &amp;quot;B&amp;quot;;
        } else if ( nilai &amp;gt;= 60 ){
            grade = &amp;quot;C+&amp;quot;;
        } else if ( nilai &amp;gt;= 50 ){
            grade = &amp;quot;C&amp;quot;;
        } else if ( nilai &amp;gt;= 40 ){
            grade = &amp;quot;D&amp;quot;;
        } else {
            grade = &amp;quot;E&amp;quot;;
        }

        // cetak hasilnya
        System.out.println(&amp;quot;Grade: &amp;quot; + grade);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil outputnya:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-fBW1OCJ8L_o/WO7_E4iXKTI/AAAAAAAAEqs/FsV0dkLWW_UL0P9GWTazQq2HTvEcx4YqQCPcB/s1600/Hasil%2Boutput%2Bprogram%2Bhitung%2Bgrader%2Bnilai.png&#34; alt=&#34;Hasil output program hitung grade&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;percabangan-switch-case&#34;&gt;Percabangan SWITCH/CASE&lt;/h3&gt;

&lt;p&gt;Percabangan SWITCH/CASE sebenarnya adalah bentuk lain dari IF/ELSE/IF.&lt;/p&gt;

&lt;p&gt;Bedanya, percabangan ini menggunakan kata kunci &lt;code&gt;switch&lt;/code&gt; dan &lt;code&gt;case&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Formatnya juga berbeda, tapi cara kerjanya sama.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;switch(variabel){
    case 1:
        // kerjakan kode ini
        // kode ini juga
        break;
    case 2:
        // kerjakan kode ini
        // kode ini juga
        break;
    case 3:
        // kerjakan kode ini
        // kode ini juga
        break;
    default:
        // kerjakan kode ini
        // kode ini juga
        break;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Perhatikan: &lt;code&gt;case 1&lt;/code&gt; artinya nilai &lt;code&gt;variabel&lt;/code&gt; yang akan dibandingkan, apakah nilainya
sama dengan &lt;code&gt;1&lt;/code&gt; atau tidak.&lt;/p&gt;

&lt;p&gt;Kalau iya, maka kerjakan kode yang ada di dalam &lt;code&gt;case 1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Bisa juga betuknya berbeda, misalnya seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;switch (variabel) {
    case &#39;A&#39;:
        // lakukan sesuatu
        break;
    case &#39;B&#39;:
        // lakukan ini
        break;
    default:
        // lakukan ini
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Perlu diperhatikan juga: di sana ada kata kunci &lt;code&gt;break&lt;/code&gt; dan &lt;code&gt;default&lt;/code&gt;.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;break&lt;/code&gt; artinya berhenti. Ini untuk memerintahkan komputer untuk berhenti
mengecek &lt;code&gt;case&lt;/code&gt; yang lainnya.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;default&lt;/code&gt; artinya jika nilai variabel tidak ada yang sama dengan pilihan case di atas,
maka kerjakan kode yang ada di dalam &lt;code&gt;default&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pilihan &lt;code&gt;default&lt;/code&gt; bisa juga tidak memiliki &lt;code&gt;break&lt;/code&gt;, karena dia adalah pilihan terakhir.
Artinya pengecekan akan berakhir di situ.&lt;/p&gt;

&lt;p&gt;Contoh program dengan percabangan SWITCH/CASE&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.util.Scanner;

public class LampuLalulintas {
    public static void main(String[] args) {

        // membuat variabel dan Scanner
        String lampu;
        Scanner scan = new Scanner(System.in);

        // mengambil input
        System.out.print(&amp;quot;Inputkan nama warna: &amp;quot;);
        lampu = scan.nextLine();

        switch(lampu){
            case &amp;quot;merah&amp;quot;:
                System.out.println(&amp;quot;Lampu merah, berhenti!&amp;quot;);
                break;
            case &amp;quot;kuning&amp;quot;:
                System.out.println(&amp;quot;Lampu kuning, harap hati-hati!&amp;quot;);
                break;
            case &amp;quot;hijau&amp;quot;:
                System.out.println(&amp;quot;Lampu hijau, silahkan jalan!&amp;quot;);
                break;
            default:
                System.out.println(&amp;quot;Warna lampu salah!&amp;quot;);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil outputnya:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-ojFmHVyblYk/WO7_wHizYNI/AAAAAAAAEq8/huTDmNUAHfM5m-nJ2l50ieGZelChGKJ5wCPcB/s1600/hasil%2Boutput%2Bprogram%2Blampu%2Blalu%2Blintas%2Bswitch%2Bcase.png&#34; alt=&#34;Hasil output program lampu lalu lintas dengan percabangan switch case&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Eksperimen&lt;/strong&gt;: Cobalah untuk menghilangkan &lt;code&gt;break&lt;/code&gt; di salah satu &lt;code&gt;case&lt;/code&gt; dan
perhatikanlah hasilnya.&lt;/p&gt;

&lt;h2 id=&#34;percabangan-dalam-percabangan-nested&#34;&gt;Percabangan dalam Percabangan &lt;em&gt;(Nested)&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;Kita sudah tahu tiga bentuk dasar percabganan di Java. Selanjutnya, kita
coba bahas percabangan yang ada di dalam perbangan (perabangan bersarang).&lt;/p&gt;

&lt;p&gt;Sebenarnya pembahasan ini saya ingin pisahkan. Namun, baiknya digabungkan
di sini aja.&lt;/p&gt;

&lt;p&gt;Anggap saja pembahasan bonus :smile:.&lt;/p&gt;

&lt;p&gt;Baiklah&amp;hellip;&lt;/p&gt;

&lt;p&gt;Jadi, percabangan itu bisa dibuat di dalam percabangan. Kadang teknik ini
disebut juga &lt;em&gt;nested if&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Contoh kasus:&lt;/p&gt;

&lt;p&gt;Misalnya ada model bisinis seperti ini di sebuah toko. Ketika orang membayar di
kasir, biasanya ditanya ada kartu member untuk mendapatkan diskon dan sebagainya.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Apakah anda punya kartu member?
   - ya
       * Apakah belanjaan anda lebih dari 500rb?
           # ya : mendapatkan diskon 50rb
           # tidak : tidak mendapatkan diskon
       * Apakah belanjaan anda lebih dari 100rb?
           # ya : mendapatkan diskon 15rb
           # tidak: tidak mendapatkan diskon
   - tidak
       * Apakah belanjaan anda lebih dari 100rb?
           # ya : mendapatkan diskon 10rb
           # tidak: tidak mendapatkan diskon
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Paham?&lt;/p&gt;

&lt;p&gt;Kalau tidak, coba perhatikan flow chart-nya:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://2.bp.blogspot.com/-6ZrqC9I8Nxs/VkBWekgFwUI/AAAAAAAACLk/tdhCo5np2lk/s1600/flowchart%2Bpercabangan%2Bbersarang%2Bjava.png&#34; alt=&#34;Flowchart percabangan bersarang&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Masih belum paham?&lt;/p&gt;

&lt;p&gt;Kalau begitu mari kita coba dalam program.&lt;/p&gt;

&lt;p&gt;Silahkan buat class baru bernama &lt;code&gt;Kasir&lt;/code&gt; dan ikuti kode program berikut ini.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.util.Scanner;

public class Kasir {
    public static void main(String[] args) {
        // deklarasi variabel dan Scanner
        int belanjaan, diskon, bayar;
        String kartu;
        Scanner scan = new Scanner(System.in);

        // mengambil input
        System.out.print(&amp;quot;Apakah ada kartu member: &amp;quot;);
        kartu = scan.nextLine();
        System.out.print(&amp;quot;Total belanjaan: &amp;quot;);
        belanjaan = scan.nextInt();

        // proses
        if (kartu.equalsIgnoreCase(&amp;quot;ya&amp;quot;)) {
            if (belanjaan &amp;gt; 500000) {
                diskon = 50000;
            } else if (belanjaan &amp;gt; 100000) {
                diskon = 15000;
            } else {
                diskon = 0;
            }

        } else {
            if (belanjaan &amp;gt; 100000) {
                diskon = 5000;
            } else {
                diskon = 0;
            }
        }

        // total yang harus dibayar
        bayar = belanjaan - diskon;

        // output
        System.out.println(&amp;quot;Total Bayar: Rp &amp;quot; + bayar);
    }  
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil outputnya:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-1H-uAWXBmxs/WO8GZByoXbI/AAAAAAAAErc/MDBuvrhyE9U670LjowqU6o8uAMlm30mlACPcB/s1600/Hasil%2Boutput%2Bprogram%2Bif%2Bbersarang.png&#34; alt=&#34;Hasil output program dengan percabangan bersarang&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Cobalah untuk mengubah nilai yang dimasukkan dan perhatikan hasilnya.&lt;/p&gt;

&lt;p&gt;Mungkin di sana ada yang perlu diperhatikan:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Fungsi &lt;code&gt;equalsIgnoreCase(&amp;quot;ya&amp;quot;)&lt;/code&gt; digunakan untuk membandingkan String dengan
tidak memperdulikan huruf besar dan kecilnya.&lt;/li&gt;
&lt;li&gt;Ada juga Fungsi &lt;code&gt;equals()&lt;/code&gt;, fungsinya sama. Tapi &lt;code&gt;equals()&lt;/code&gt; akan memperhatikan
&lt;em&gt;case&lt;/em&gt; hurufnya.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Kenapa tidak menggunakan operator &lt;code&gt;==&lt;/code&gt; atau &lt;code&gt;!=&lt;/code&gt;?&lt;/p&gt;

&lt;p&gt;Di Java memang seperti itu.&lt;/p&gt;

&lt;p&gt;Kalau kita ingin membandingkan nilai String, ya&amp;hellip; menggunakan fungsi yang
dua tadi.&lt;/p&gt;

&lt;p&gt;Tapi, kalau membandingkan selain String, maka bisa pakai operator &lt;code&gt;==&lt;/code&gt; atau
&lt;code&gt;!=&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;menggunakan-operator-logika-dalam-percabangan&#34;&gt;Menggunakan Operator Logika dalam Percabangan&lt;/h2&gt;

&lt;p&gt;Operator logika dalam percabangan sebenarnya bisa membuat percabangan menjadi
lebih singkat.&lt;/p&gt;

&lt;p&gt;Misal ada program &lt;em&gt;Tilang&lt;/em&gt; dengan logika seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class Tilang {
    public static void main(String[] args) {
        boolean SIM = false;
        boolean STNK = true;

        // cek apakah dia akan ditilang atau tidak
        if(SIM == true){
            if( STNK == true ) {
                System.out.println(&amp;quot;Tidak ditilang!&amp;quot;);
            }
        } else {
            System.out.println(&amp;quot;Anda ditilang!&amp;quot;);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Perhatikan: di sana kita menggunakan percabangan bersarang untuk mengecek,
apakah dia ditilang atau tidak.&lt;/p&gt;

&lt;p&gt;Hal ini sebenarnya bisa disingkat dengan operator logika, sehingga
menjadi seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class Tilang {
    public static void main(String[] args) {
        boolean SIM = false;
        boolean STNK = true;

        // cek apakah dia akan ditilang atau tidak
        if(SIM == true &amp;amp;&amp;amp; STNK == true){
            System.out.println(&amp;quot;Tidak ditilang!&amp;quot;);
        } else {
            System.out.println(&amp;quot;Anda ditilang!&amp;quot;);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pada kode di atas, kita menggunakan operator AND (&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Karena logikanya: Si pengendara tidak akan ditilang kalau punya SIM dan STNK.&lt;/p&gt;

&lt;h2 id=&#34;apa-selanjutnya&#34;&gt;Apa Selanjutnya?&lt;/h2&gt;

&lt;p&gt;Kita sudah peljari beberapa macam bentuk percabagan dan pernak-perniknya,
ringkasananya seperti ini:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Percabangan IF, hanya memiliki satu pilihan;&lt;/li&gt;
&lt;li&gt;Percabangan IF/ELSE memiliki dua pilihan;&lt;/li&gt;
&lt;li&gt;Percabangan dengan operator ternary adalah bentuk lain dari IF/ELSE;&lt;/li&gt;
&lt;li&gt;Percabangan IF/ELSE/IF memiliki lebih dari dua pilihan;&lt;/li&gt;
&lt;li&gt;Percabangan SWITCH/CASE adalah bentuk lain dari IF/ELSE/IF;&lt;/li&gt;
&lt;li&gt;Percabangan bersarang adalah percabangan dalam Percabangan;&lt;/li&gt;
&lt;li&gt;Penggunaan operator logika dalam percabangan bisa membuat percabangan menjadi
lebih singkat.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Wah, ternyata banyak juga ya.&lt;/p&gt;

&lt;p&gt;Intinya pahami yang tiga bentuk itu. Kemudian
cobalah cari contoh kasus yang berbeda.&lt;/p&gt;

&lt;p&gt;Semakin banyak latihan semakin mantap.&lt;/p&gt;

&lt;p&gt;Ada pertanyaan?&lt;/p&gt;

&lt;p&gt;Silahkan tanyakan melalui komentar atau &lt;a href=&#34;https://m.me/petanikode&#34;&gt;PM Petani Kode&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Selanjutnya, silahkan pelajari tentang &lt;a href=&#34;https://www.petanikode.com/pemrograman-java-perulangan/&#34;&gt;Perulangan dalam Java&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Jika artikel ini bermanfaat, silahkan dibagikan :smile:.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Belajar Pemrograman Java: Inilah 6 Jenis Operator yang Harus Kamu Ketahui</title>
      <link>https://www.petanikode.com/pemrograman-java-operator/</link>
      <pubDate>Sat, 17 Oct 2015 20:12:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/pemrograman-java-operator/</guid>
      <description>

&lt;p&gt;&lt;amp-img
    width=&#34;720&#34;
    height=&#34;380&#34;
    alt=&#34;pemrograman java - input dan output&#34;
    src=&#34;http://3.bp.blogspot.com/-VplNxe__W4E/WIIHJK5moxI/AAAAAAAADrs/DZ8jMlvWhP84EE2ZLNLS6YZFstFASVPbACK4B/s1600/pemrograman-java-petanikode.jpg&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Operator dalam pemrograman digunakan untuk melakukan operasi tertentu.&lt;/p&gt;

&lt;p&gt;Misalkan kita ingin menjumlahkan nilai dari variabel &lt;code&gt;x&lt;/code&gt; dan &lt;code&gt;y&lt;/code&gt;, maka
kita bisa lakukan dengan operator penjumlahan (&lt;code&gt;+&lt;/code&gt;).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;x + y
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ada enam jenis kelompok operator dalam pemrograman Java:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Operator Artimatika;&lt;/li&gt;
&lt;li&gt;Operator Penugasan;&lt;/li&gt;
&lt;li&gt;Operator Pembanding;&lt;/li&gt;
&lt;li&gt;Operator Logika;&lt;/li&gt;
&lt;li&gt;Operator Bitwise;&lt;/li&gt;
&lt;li&gt;dan Operator Ternary.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Bila digambarkan dalam mind map, akan terlihat seperti ini:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-M10K9ZcEPIc/WOb6aBf7zWI/AAAAAAAAEmw/GaLW63U-FGIPyPjEU_7rxNxsranR6dqwACPcB/s1600/Mind%2BMap%2BOperator%2Bdi%2BJava.png&#34; alt=&#34;6 Jenis Operator dalam Java&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Ukuran penuh dari mind map ini dapat kamu lihat di: &lt;a href=&#34;https://coggle.it/diagram/WOGCoOqtdwABC7kL&#34;&gt;coggle.it&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Apa saja perbedaan dari semua jenis operator tersebut?&lt;/p&gt;

&lt;p&gt;Mari kita bahas, satu per satu&amp;hellip;&lt;/p&gt;

&lt;h2 id=&#34;1-operator-aritmatika&#34;&gt;1. Operator Aritmatika&lt;/h2&gt;

&lt;p&gt;Operator aritmatika digunakan untuk melakukan operasi aritmatika.&lt;/p&gt;

&lt;p&gt;Operator ini terdiri dari:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;Nama&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Simbol&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Penjumlahan&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;+&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Pengurangan&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;-&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Perkalian&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;*&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Pembagian&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;/&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Sisa Bagi&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Bagaimana cara pakainya?&lt;/p&gt;

&lt;h3 id=&#34;mari-kita-coba-praktik&#34;&gt;Mari kita coba praktik&amp;hellip;&lt;/h3&gt;

&lt;p&gt;Buatlah kelas baru bernama &lt;em&gt;OperatorAritmatika&lt;/em&gt;,
kemudian ikuti kode berikut:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;import java.util.Scanner;

public class OperatorAritmatika {

    public static void main(String[] args) {
        int angka1;
        int angka2;
        int hasil;

        Scanner keyboard = new Scanner(System.in);

        System.out.print(&amp;quot;Input angka-1: &amp;quot;);
        angka1 = keyboard.nextInt();
        System.out.print(&amp;quot;Input angka-2: &amp;quot;);
        angka2 = keyboard.nextInt();

        // penjumlahan
        hasil = angka1 + angka2;
        System.out.println(&amp;quot;Hasil = &amp;quot; + hasil);

        System.out.print(&amp;quot;Input angka-1: &amp;quot;);
        angka1 = keyboard.nextInt();
        System.out.print(&amp;quot;Input angka-2: &amp;quot;);
        angka2 = keyboard.nextInt();

        // pengurangan
        hasil = angka1 - angka2;
        System.out.println(&amp;quot;Hasil = &amp;quot; + hasil);

         System.out.print(&amp;quot;Input angka-1: &amp;quot;);
        angka1 = keyboard.nextInt();
        System.out.print(&amp;quot;Input angka-2: &amp;quot;);
        angka2 = keyboard.nextInt();

        // perkalian
        hasil = angka1 * angka2;
        System.out.println(&amp;quot;Hasil = &amp;quot; + hasil);


        System.out.print(&amp;quot;Input angka-1: &amp;quot;);
        angka1 = keyboard.nextInt();
        System.out.print(&amp;quot;Input angka-2: &amp;quot;);
        angka2 = keyboard.nextInt();

        // Pembagian
        hasil = angka1 / angka2;
        System.out.println(&amp;quot;Hasil = &amp;quot; + hasil);

        System.out.print(&amp;quot;Input angka-1: &amp;quot;);
        angka1 = keyboard.nextInt();
        System.out.print(&amp;quot;Input angka-2: &amp;quot;);
        angka2 = keyboard.nextInt();

        // Sisa Bagi
        hasil = angka1 % angka2;
        System.out.println(&amp;quot;Hasil = &amp;quot; + hasil);

    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Silahkan jalankan programnya:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-sTdKOiAGLrw/ViIY3VetPNI/AAAAAAAACBE/sYsiVTU82l0/s1600/Hasil%2Boutput%2Bprogram%2Boperator%2Baritmatika.png&#34;&gt;&lt;img src=&#34;http://4.bp.blogspot.com/-sTdKOiAGLrw/ViIY3VetPNI/AAAAAAAACBE/sYsiVTU82l0/s1600/Hasil%2Boutput%2Bprogram%2Boperator%2Baritmatika.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Mudah bukan&amp;hellip;?&lt;/p&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;h3 id=&#34;mau-laithan-lagi&#34;&gt;Mau laithan lagi?&lt;/h3&gt;

&lt;p&gt;Semakin banyak latihan, semakin mantap.&lt;/p&gt;

&lt;p&gt;Sekarang coba contoh kasus: Program menghitung keliling persegi panjang.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-aQDpPVSmbtM/ViIaSaDZvNI/AAAAAAAACBQ/gefP-C0_SYQ/s1600/Kode%2Bprogram%2Bkeliling%2Bpersegi%2Bpanjang.png&#34;&gt;&lt;img src=&#34;http://4.bp.blogspot.com/-aQDpPVSmbtM/ViIaSaDZvNI/AAAAAAAACBQ/gefP-C0_SYQ/s1600/Kode%2Bprogram%2Bkeliling%2Bpersegi%2Bpanjang.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;!--
### Tantangan pomodoro

Tantangan ini saya namakan tangangan pomodoro, karena saya akan memberikan waktu 25 menit untuk mengerjakan program dengan rumus ini:

&lt;div class=&#34;separator&#34;&gt;
  &lt;a href=&#34;http://1.bp.blogspot.com/-nDV3RNpx8-4/ViIdX0MqFeI/AAAAAAAACBc/nsWexeDSOjc/s1600/Tantangan%2Bpomodoro%2Bdi%2Blab%2Bjava%2B-%2Bpetani%2Bkode.png&#34; imageanchor=&#34;1&#34;&gt;
  &lt;img border=&#34;0&#34; src=&#34;http://1.bp.blogspot.com/-nDV3RNpx8-4/ViIdX0MqFeI/AAAAAAAACBc/nsWexeDSOjc/s1600/Tantangan%2Bpomodoro%2Bdi%2Blab%2Bjava%2B-%2Bpetani%2Bkode.png&#34;&gt;
&lt;/a&gt;
&lt;/div&gt;

Agar lebih mudah, kita ganti `f(x)` menjadi `y`, sehingga terbentuk rumus berikut ini:

```
y = (2_x_x - 3_x - 2) / (x-2);_
```

_Selanjutnya, silahkan anda membuat kode sendiri. Cobalah masukkan nilai `x` dengan nilai seperti tabel pada gambar di atas. Contoh hasil outputnya akan seperti ini:
[![](http://3.bp.blogspot.com/-RByAS7BMuCU/ViIex_oOjPI/AAAAAAAACBo/5y4PozNqnLs/s1600/output%2Btantangan%2Bfungsi%2Bkalkulus.png)](http://3.bp.blogspot.com/-RByAS7BMuCU/ViIex_oOjPI/AAAAAAAACBo/5y4PozNqnLs/s1600/output%2Btantangan%2Bfungsi%2Bkalkulus.png)
Ada penambahan tanda kurung di dalam rumus. Itu menandakan bagian yang akan dihitung terlebih dahulu. Seperti dalam matematika, dalam pemrogramanan juga ada tingkatan operator.
--&gt;

&lt;h2 id=&#34;2-operator-penugasan&#34;&gt;2. Operator Penugasan&lt;/h2&gt;

&lt;p&gt;Operator penugasan &lt;em&gt;(Assignment Operator)&lt;/em&gt; fungsinya untuk meberikan tugas pada
variabel tertentu. Biasanya untuk mengisi nilai.&lt;/p&gt;

&lt;p&gt;Contoh:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;int a = 10;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Variabel &lt;code&gt;a&lt;/code&gt; ditugaskan untuk menyimpan nilai &lt;code&gt;10&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Operator Penugasan terdiri dari:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Operator&lt;/th&gt;
&lt;th&gt;Keterangan&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;=&lt;/td&gt;
&lt;td&gt;Pemberian nilai&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;+=&lt;/td&gt;
&lt;td&gt;Penambahan&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;-=&lt;/td&gt;
&lt;td&gt;Pengurangan&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;*=&lt;/td&gt;
&lt;td&gt;Perkalian&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;/=&lt;/td&gt;
&lt;td&gt;Pembagian&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;%=&lt;/td&gt;
&lt;td&gt;Sisa bagi&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&#34;mari-kita-coba&#34;&gt;Mari Kita Coba&amp;hellip;&lt;/h3&gt;

&lt;p&gt;Sekarang, buatlah sebuah kelas baru beranama &lt;em&gt;OperatorPenugasan&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Kemudian ikuti kode berikut:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class OperatorPenugasan {

    public static void main(String[] args) {
        int a;
        int b;

        // Pengisian nilai
        a = 5;
        b = 10;

        // penambahan
        b += a;
        // sekarang b = 15
        System.out.println(&amp;quot;Penambahan : &amp;quot; + b);

        // pengurangan
        b -= a;
        // sekarang b = 10 (karena 15-5)
        System.out.println(&amp;quot;Pengurangan : &amp;quot; + b);

        // perkalian
        b *= a;
        // sekarang b = 50 (karena 10*5)
        System.out.println(&amp;quot;Perkalian : &amp;quot; + b);

        // Pembagian
        b /= a;
        // sekarang b=10
        System.out.println(&amp;quot;Pembagian : &amp;quot; + b);

        // Sisa bagi
        b %= a;
        // sekarang b=0
        System.out.println(&amp;quot;Sisa Bagi: &amp;quot; + b);

    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil outputnya:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-xbCfZTUzBqQ/ViIxX2y80pI/AAAAAAAACB4/Y06qPdhwkNs/s1600/hasil%2Boutput%2Bprogram%2Boperator%2Bpenugasan%2Bjava.png&#34;&gt;&lt;img src=&#34;http://4.bp.blogspot.com/-xbCfZTUzBqQ/ViIxX2y80pI/AAAAAAAACB4/Y06qPdhwkNs/s1600/hasil%2Boutput%2Bprogram%2Boperator%2Bpenugasan%2Bjava.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;3-operator-pambanding&#34;&gt;3. Operator Pambanding&lt;/h2&gt;

&lt;p&gt;Sepeti namanya, tugas oprator ini untuk membandingkan.&lt;/p&gt;

&lt;p&gt;Operator ini juga dikenal dengak opeartor relasi.&lt;/p&gt;

&lt;p&gt;Nilai yang dihasilkan dari operator ini berupa boolean, yaitu: &lt;code&gt;true&lt;/code&gt;
dan &lt;code&gt;false&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Operator ini terdiri dari:&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;Nama&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Simbol&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Lebih Besar&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&amp;gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Lebih Kecil&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&amp;lt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Sama Dengan&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;==&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Tidak Sama dengan&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;!=&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Lebih Besar Sama dengan&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&amp;gt;=&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Lebih Kecil Sama dengan&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&amp;lt;=&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;contoh:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;boolean x = 10 &amp;lt; 12
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Maka &lt;code&gt;x&lt;/code&gt; akan bernilai &lt;em&gt;true&lt;/em&gt;, karena &lt;code&gt;10&lt;/code&gt; lebih kecil dari &lt;code&gt;12&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Untuk lebih jelasnya&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;mari-kita-coba-dalam-kode&#34;&gt;Mari kita coba dalam kode&lt;/h3&gt;

&lt;p&gt;Buatlah sebuah kelas baru bernama &lt;em&gt;OperatorPembanding&lt;/em&gt;. Kemudian ikuti kode berikut:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class OperatorPembanding {

    public static void main(String[] args) {
        int nilaiA = 12;
        int nilaiB = 4;
        boolean hasil;

        // apakah A lebih besar dari B?
        hasil = nilaiA &amp;gt; nilaiB;
        System.out.println(hasil);

        // apakah A lebih kecil dari B?
        hasil = nilaiA &amp;lt; nilaiB;
        System.out.println(hasil);

        // apakah A lebih besar samadengan B?
        hasil = nilaiA &amp;gt;= nilaiB;
        System.out.println(hasil);

        // apakah A lebih kecil samadengan B?
        hasil = nilaiA &amp;lt;= nilaiB;
        System.out.println(hasil);

        // apakah nilai A sama dengan B?
        hasil = nilaiA == nilaiB;
        System.out.println(hasil);

        // apakah nilai A tidak samadengan B?
        hasil = nilaiA != nilaiB;
        System.out.println(hasil);

    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Kode program di atas, akan menghasilkan output seperti ini:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://1.bp.blogspot.com/--FipqMwO8vk/ViI2QfhUtiI/AAAAAAAACCI/d-Rkn5aaIvo/s1600/hasil%2Boutput%2Boperator%2Bpembanding%2Bdi%2Bjava.png&#34;&gt;&lt;img src=&#34;http://1.bp.blogspot.com/--FipqMwO8vk/ViI2QfhUtiI/AAAAAAAACCI/d-Rkn5aaIvo/s1600/hasil%2Boutput%2Boperator%2Bpembanding%2Bdi%2Bjava.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;4-operator-logika&#34;&gt;4. Operator Logika&lt;/h2&gt;

&lt;p&gt;Kalau kamu pernah belajar logika matematika, pasti tidak akan asing dengan operator
ini.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;Nama&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Simbol di Java&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Logika AND&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&amp;amp;&amp;amp;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Logika OR&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;||&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Negasi/kebalikan&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;!&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Operator Logika digunakan untuk membandingkan dua penyataan atau lebih.&lt;/p&gt;

&lt;p&gt;Misalnya seperti ini:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Pernyataan 1: Petani Kode seorang programmer&lt;/li&gt;
&lt;li&gt;Pernyattan 2: Petanikode menggunakan Linux&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Jika ditanya, apakah Petani Kode programmer yang menggunakan Linux?&lt;/p&gt;

&lt;p&gt;Tentu kita akan cek dulu kebenarannya&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Pernyataan 1: Petani Kode seorang programmer = &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Pernyattan 2: Petanikode menggunakan Linux = &lt;code&gt;true&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Apa petanikode programmer dan menggunakan Linux?&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Pertnyataan 1 &amp;amp;&amp;amp; Pernyataan 2 = true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Bingung?&lt;/p&gt;

&lt;p&gt;Coba cek lagi tabel kebenaran untuk logika AND.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;Pernyatan 1&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Pernytaan 2&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Logika AND&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Masih bingung&amp;hellip;?&lt;/p&gt;

&lt;p&gt;Sepertinya kamu harus buka lagi pelajarann logika matematika  :smile:.&lt;/p&gt;

&lt;p&gt;Lalu bagaimana pengunaanya di program?&lt;/p&gt;

&lt;h3 id=&#34;langsung-saja-dicoba-program-berikut&#34;&gt;Langsung Saja dicoba Program Berikut&lt;/h3&gt;

&lt;p&gt;Buatlah sebuah kelas baru beranama &lt;em&gt;OperatorLogika&lt;/em&gt;. Kemudian ikuti kode berikut ini:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-XgnQDMlHkSY/ViI5nPhw98I/AAAAAAAACCU/0Xz2uftqtRs/s1600/kode%2Bprogram%2Boperator%2Blogika%2Bjava.png&#34;&gt;&lt;img src=&#34;http://1.bp.blogspot.com/-XgnQDMlHkSY/ViI5nPhw98I/AAAAAAAACCU/0Xz2uftqtRs/s1600/kode%2Bprogram%2Boperator%2Blogika%2Bjava.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Silahkan jalankan dan perhatikan hasilnya:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://4.bp.blogspot.com/-_u_6adjdRdo/ViI6KTfPXSI/AAAAAAAACCc/nAv6omyBC0I/s1600/Hasil%2Boutput%2Bprogram%2Boperator%2Blogika%2Bjava.png&#34;&gt;&lt;img src=&#34;http://4.bp.blogspot.com/-_u_6adjdRdo/ViI6KTfPXSI/AAAAAAAACCc/nAv6omyBC0I/s1600/Hasil%2Boutput%2Bprogram%2Boperator%2Blogika%2Bjava.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;5-operator-bitwise&#34;&gt;5. Operator Bitwise&lt;/h2&gt;

&lt;p&gt;Operator bitwise merupkan operator yang digunakan untuk operasi bit (biner).&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;Nama&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;Simbol di Java&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;AND&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&amp;amp;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;OR&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;|&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;XOR&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;^&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Negasi/kebalikan&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;~&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Left Shift&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&amp;lt;&amp;lt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Right Shift&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&amp;gt;&amp;gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Left Shift (unsigned)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;Right Shift (unsigned)&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Operator ini berlaku untuk tipe data &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;, dan &lt;code&gt;byte&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Operator ini akan menghitung dari bit-ke-bit.&lt;/p&gt;

&lt;p&gt;Misalnya, kita punya variabel &lt;code&gt;a = 60&lt;/code&gt; dan &lt;code&gt;b = 13&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Bila dibuat dalam bentuk biner, akan menjadi seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;a = 00111100
b = 00001101
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Kemudian, dilakukan operasi bitwise&lt;/p&gt;

&lt;p&gt;Operasi AND&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;a = 00111100
b = 00001101
a &amp;amp; b = 00001100
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Operasi OR&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;a = 00111100
b = 00001101
a | b = 00111101
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Operasi XOR&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;a = 00111100
b = 00001101
a ^ b = 00110001
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Opearsi NOT (Negasi/kebalikan)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;a = 00111100
~a  = 11000011
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Konsepnya memang hampir sama dengan opeartor Logika. Bedanya, Bitwise
digunakan untuk biner.&lt;/p&gt;

&lt;p&gt;Untuk lebih jelasnya&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;mari-kita-coba-dalam-program&#34;&gt;Mari kita coba dalam program&lt;/h3&gt;

&lt;p&gt;Buat kelas baru dengan nama &lt;code&gt;OperatorBitwise&lt;/code&gt;, kemudian ikuti isinya sebagai
berikut.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class OperatorBitwise {

    public static void main(String[] args) {
        int a = 60;	/* 60 = 0011 1100 */
        int b = 13;	/* 13 = 0000 1101 */
        int c = 0;

        c = a &amp;amp; b;       /* 12 = 0000 1100 */
        System.out.println(&amp;quot;a &amp;amp; b = &amp;quot; + c);

        c = a | b;       /* 61 = 0011 1101 */
        System.out.println(&amp;quot;a | b = &amp;quot; + c);

        c = a ^ b;       /* 49 = 0011 0001 */
        System.out.println(&amp;quot;a ^ b = &amp;quot; + c);

        c = ~a;          /*-61 = 1100 0011 */
        System.out.println(&amp;quot;~a = &amp;quot; + c);

        c = a &amp;lt;&amp;lt; 2;     /* 240 = 1111 0000 */
        System.out.println(&amp;quot;a &amp;lt;&amp;lt; 2 = &amp;quot; + c);

        c = a &amp;gt;&amp;gt; 2;     /* 215 = 1111 */
        System.out.println(&amp;quot;a &amp;gt;&amp;gt; 2  = &amp;quot; + c);

        c = a &amp;gt;&amp;gt;&amp;gt; 2;     /* 215 = 0000 1111 */
        System.out.println(&amp;quot;a &amp;gt;&amp;gt;&amp;gt; 2 = &amp;quot; + c);
    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Perhatikanlah hasil outputnya:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-bNZH6_FtyGM/ViMrlcqFcrI/AAAAAAAACD4/lCAizcwuZek/s1600/Hasil%2Boutput%2Boperator%2Bbitwise%2Bjava.png&#34;&gt;&lt;img src=&#34;http://1.bp.blogspot.com/-bNZH6_FtyGM/ViMrlcqFcrI/AAAAAAAACD4/lCAizcwuZek/s1600/Hasil%2Boutput%2Boperator%2Bbitwise%2Bjava.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;6-operator-ternary&#34;&gt;6. Operator Ternary&lt;/h2&gt;

&lt;p&gt;Opertor ini unik, seperti membuat pertanyaan.&lt;/p&gt;

&lt;p&gt;Simbolnya menggunakan tanda tanya (&lt;code&gt;?&lt;/code&gt;) dan titik-dua (&lt;code&gt;:&lt;/code&gt;) untuk memisah jawabannya.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://3.bp.blogspot.com/-OKB4MDtGjE4/WObxiPfq-wI/AAAAAAAAEmQ/kR9Ldcc1hr88u90060rCff0Gvs4lDRfQgCPcB/s1600/operator%2Bternary%2Bdi%2Bjava.png&#34; alt=&#34;Operator Ternary di Java&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Pada contoh di atas, &amp;ldquo;Kamu suka aku&amp;rdquo; adalah pertanyaan atau kondisi yang akan
diperiksa.&lt;/p&gt;

&lt;p&gt;Kalau jawabannya benar, maka &lt;code&gt;iya&lt;/code&gt;. Sebaliknya akan &lt;code&gt;tidak&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Lebih jelasnya, mari kita coba&amp;hellip;&lt;/p&gt;

&lt;h3 id=&#34;program-dengan-operator-ternary&#34;&gt;Program dengan Operator Ternary&lt;/h3&gt;

&lt;p&gt;Buatlah sebuah kelas baru dengan nama &lt;code&gt;OperatorTernary&lt;/code&gt;, kemudian ikuti kode
berikut.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;public class OperatorTernary {
    public static void main(String[] args) {

        boolean suka = true;
        String jawaban;

        // menggunakan operator ternary
        jawaban = suka ? &amp;quot;iya&amp;quot; : &amp;quot;tidak&amp;quot;;

        // menampilkan jawaban
        System.out.println(jawaban);

    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hasil outputnya:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;iya
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sekarang coba ganti nilai variabel &lt;code&gt;suka&lt;/code&gt; menjadi &lt;code&gt;false&lt;/code&gt;, lalu dijalankan
lagi.&lt;/p&gt;

&lt;p&gt;Pasti akan menghasilkan &lt;code&gt;tidak&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Cara lain, dapat juga membuat kondisi seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;int suka = 8;

String jawaban = (suka &amp;gt; 5) ? &amp;quot;iya&amp;quot; : &amp;quot;tidak&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;apa-selanjutnya&#34;&gt;Apa Selanjutnya?&lt;/h2&gt;

&lt;p&gt;Kita sudah mempelajari berbagai jenis operator dalam pemrograman Java.&lt;/p&gt;

&lt;p&gt;Ya, operator memang sangat erat kaitannya dengan ilmu matematika. Maka dari itu,
programmer dituntut untuk bisa matematika.&lt;/p&gt;

&lt;p&gt;Selanjutnya, silahkan pelajari &lt;a href=&#34;https://www.petanikode.com/pemrograman-java-percabangan/&#34;&gt;konsep percabangan atau &lt;em&gt;control flow&lt;/em&gt; dalam Java&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Kalau ada yang ditanyakan, silahkan tuliskan di komentar.&lt;/p&gt;

&lt;p&gt;Kalau artikel ini bermanfaat, silahkan dibagikan.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Belajar Pemrograman Java: Variabel dan Tipe Data</title>
      <link>https://www.petanikode.com/pemrograman-java-variabel-dan-tipe-data/</link>
      <pubDate>Sun, 11 Oct 2015 13:44:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/pemrograman-java-variabel-dan-tipe-data/</guid>
      <description>

&lt;p&gt;&lt;amp-img
    width=&#34;720&#34;
    height=&#34;380&#34;
    alt=&#34;Belajar Pemrograman Java: Variabel dan 6 Macam Tipe Data yang Harus Diketahui&#34;
    src=&#34;https://1.bp.blogspot.com/-Wh3-vfndnRg/WOHC2viBv7I/AAAAAAAAEhE/pEdfryyz6x472o8b2uysQxG-xcVsbTdtwCPcB/s1600/variabel-dan-tipe-data.jpg&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Variabel adalah tempat menyimpan nilai sementara.&lt;/p&gt;

&lt;p&gt;Itu saja.&lt;/p&gt;

&lt;p&gt;Serius?&lt;/p&gt;

&lt;p&gt;Iya serius, kalau mau yang lebih panjang&amp;hellip;&lt;/p&gt;

&lt;p&gt;&amp;hellip;coba kita lihat pengertiannya dari Wikipedia:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Variabel: (Lat) 1. berubah-ubah, tidak tetap; 2. deklarasi sesuatu yang memiliki variasi nilai 3. berbeda-beda dalam bahasa pemrograman disebut juga simbol yang mewakili nilai tertentu, variabel yang dikenal di sub program disebut variabel lokal. sedang yang di kenal secara umum/utuh dalam satu program disebut variabel global.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Nah, ngerti gak?&lt;/p&gt;

&lt;p&gt;Kalau tidak, cukuplah pahami: Variabel sebagai tempat menyimpan nilai sementara.&lt;/p&gt;

&lt;p&gt;Lalu, apa itu tipe data?&lt;/p&gt;

&lt;p&gt;Tipe data adalah jenis data yang tersimpan dalam variabel.&lt;/p&gt;

&lt;h2 id=&#34;macam-macam-tipe-data&#34;&gt;Macam-macam Tipe Data&lt;/h2&gt;

&lt;p&gt;Berikut ini macam-macam tipe data pada Java:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;char&lt;/code&gt;: Tipe data karakter, contoh &lt;code&gt;Z&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int&lt;/code&gt;: angka atau bilangan bulat, contoh &lt;code&gt;29&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;float&lt;/code&gt;: bilangan desimal, contoh &lt;code&gt;2.1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;double&lt;/code&gt;: bilangan desimal juga, tapi lebih besar kapasistanya, contoh &lt;code&gt;2.1&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;String&lt;/code&gt;: kumpulan dari karakter yang membentuk teks, contoh &lt;code&gt;Hello World!&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;boolean&lt;/code&gt;: tipe data yang hanya bernilai &lt;code&gt;true&lt;/code&gt; dan &lt;code&gt;false&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;membuat-variabel&#34;&gt;Membuat Variabel&lt;/h2&gt;

&lt;p&gt;Hal yang perlu diketahui dalam pembuatan variabel di java adalah cara penulisannya.&lt;/p&gt;

&lt;p&gt;Formatnya seperti ini:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;&amp;lt;tipe data&amp;gt; namaVariabel;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Contoh&lt;/strong&gt;:&lt;/p&gt;

&lt;p&gt;Membuat variabel kosong bertipe integer:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;int namaVariabel;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Membuat variabel bertipe integer dan langsung diisi nilai:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;int namaVariabel = 19;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Membuat sekumpulan variabel yang tipe datanya sama:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;int a, b, c;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lalu, dimana itu ditulis?&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Di dalam fungsi &lt;code&gt;main()&lt;/code&gt;: variabel yang ditulis di dalam fungsi &lt;code&gt;main()&lt;/code&gt; dan
fungsi yang lainnya disebut variabel lokal.&lt;/li&gt;
&lt;li&gt;Di dalam class: Variabel ini disebut variabel class atau global.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Bingung&amp;hellip;?&lt;/p&gt;

&lt;h2 id=&#34;mari-kita-coba-latihan-dengan-membuat-program-datadiri&#34;&gt;Mari Kita Coba Latihan dengan Membuat Program DataDiri&lt;/h2&gt;

&lt;p&gt;Buatlah program baru bernama DataDiri. Silahkan tambahkan kelas &lt;em&gt;(java class)&lt;/em&gt;
baru di paket &lt;em&gt;(package)&lt;/em&gt; &lt;code&gt;pertemuan1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;752&#34;
    height=&#34;521&#34;
    alt=&#34;Membuat java class di netbeans&#34;
    src=&#34;http://1.bp.blogspot.com/-auMt7ptDILY/VhUXJ3fj_FI/AAAAAAAAB5c/phVlb95qgig/s1600/Membuat%2Bjava%2Bclass%2Bdi%2Bnetbeans.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Pada jendela yang muncul, isi nama kelasnya dengan &lt;em&gt;DataDiri&lt;/em&gt;.
Setelah itu, silahkan ikuti kode berikut.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;724&#34;
    height=&#34;626&#34;
    alt=&#34;Program DataDiri - Variabel dan tipe data java&#34;
    src=&#34;http://2.bp.blogspot.com/-8e30RYXIhlY/VhnvGo1bPYI/AAAAAAAAB-Q/A63y3RrrzKQ/s1600/Program%2BDataDiri%2B-%2BVariabel%2Bdan%2Btipe%2Bdata%2Bjava.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Setelah itu, coba jalankan dengan menekan tombol &lt;kbd&gt;[Shift]&lt;/kbd&gt;+&lt;kbd&gt;[F6]&lt;/kbd&gt;.
Analisa dan pahami maksud kode-kode di atas.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;553&#34;
    height=&#34;184&#34;
    alt=&#34;Program DataDiri petani kode dengan java&#34;
    src=&#34;http://2.bp.blogspot.com/-bL-KEN2HXCI/VhnzLOzXvvI/AAAAAAAAB-c/6sUMVdFsPSM/s1600/Program%2BDataDiri%2Bpetani%2Bkode%2Bdengan%2Bjava.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Hasil outputnya sepertinya salah.&lt;/p&gt;

&lt;p&gt;Usia kok nilianya alamat, mengapa demikian?&lt;/p&gt;

&lt;p&gt;Itu disebabkan karena kita memanggil variabel &lt;code&gt;alamat&lt;/code&gt; pada baris &lt;em&gt;usia&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Jadi yang akan tampil adalah isi dari variable &lt;code&gt;alamat&lt;/code&gt;,
bukan isi dari variabel &lt;code&gt;usia&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Perbaikilah kodenya menjadi seperti ini:&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;720&#34;
    height=&#34;633&#34;
    alt=&#34;Perbaikan program DataDiri&#34;
    src=&#34;http://1.bp.blogspot.com/-JgBuIhQp5qk/Vhn0m_dG0wI/AAAAAAAAB-o/LmtZaZPGUMs/s1600/Perbaikan%2Bprogram%2BDataDiri%2B-%2Bpetani%2Bkode%2Bdan%2Bjava.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Dan, &amp;hellip; silahkan coba jalankan kembali programnya.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;590&#34;
    height=&#34;188&#34;
    alt=&#34;hasil output Program DataDiri petani kode dengan java&#34;
    src=&#34;http://2.bp.blogspot.com/-Mlq6BX9Kn1k/Vhn2H52rl4I/AAAAAAAAB-0/QCD-sZtuwx0/s1600/hasil%2Boutput%2BProgram%2BDataDiri%2Bpetani%2Bkode%2Bdengan%2Bjava.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Yap! hasilnya sudah benar.&lt;/p&gt;

&lt;p&gt;&lt;amp-ad
    data-ad-client=&#39;ca-pub-6279325630224392&#39;
    data-ad-slot=&#39;7044550664&#39;
    width=&#39;720&#39;
    height=&#39;380&#39;
    type=&#39;adsense&#39;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-ad&gt;&lt;/p&gt;

&lt;h2 id=&#34;aturan-penulisan-variabel&#34;&gt;Aturan Penulisan Variabel&lt;/h2&gt;

&lt;p&gt;Ternyata tidak boleh sembarangan dalam membuat variabel.&lt;/p&gt;

&lt;p&gt;Ada aturan yang harus diikuit, diantaranya:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Nama variabel tidak boleh menggunakan kata kunci dari Java &lt;em&gt;(reserved word)&lt;/em&gt;
seperti &lt;code&gt;if&lt;/code&gt;, &lt;code&gt;for&lt;/code&gt;, &lt;code&gt;switch&lt;/code&gt;, dll.&lt;/li&gt;
&lt;li&gt;Nama variabel boleh menggunakan huruf, angka (0-9), garis bawah &lt;em&gt;(underscore)&lt;/em&gt;,
dan symbol dollar ($), namun penggunaan garis bawah dan symbol lebih baik dihindari.&lt;/li&gt;
&lt;li&gt;Nama variabel harus diawali dengan huruf kecil, karena Java menggunakan &lt;a href=&#34;https://www.petanikode.com/gaya-penulisan-case-dalam-pemrograman/&#34;&gt;gaya CamelCase&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Apabila nama variabel lebih dari 1 suku kata, maka kata ke-2 dituliskan
dengan diawali dengan huruf besar dan seterusnya, contoh &lt;code&gt;namaVariabel&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;latihan-ke-2-program-luaslingkaran&#34;&gt;Latihan Ke-2: Program LuasLingkaran&lt;/h2&gt;

&lt;p&gt;Mari kita mantapkan pemahaman dengan membuat program &lt;em&gt;LuasLingkaran&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Program ini fungsinya untuk menghitung luas lingkaran.&lt;/p&gt;

&lt;p&gt;Luas lingkaran dapat kita hitung dengan rumus &lt;code&gt;PI x r&lt;sup&gt;2&lt;/sup&gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Sebelum memulai memrogram, sebaiknya kita pahami dulu algoritma dan flowchart-nya:&lt;/p&gt;

&lt;h3 id=&#34;algoritma&#34;&gt;Algoritma&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;Deklarasi:
    Double luas, PI
    int r
Deskripsi:
    - Input
        PI = 3.14
        r = 18
    - Proses
        luas = PI * r * r
    - Output
        cetak luas
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;flow-chart&#34;&gt;Flow Chart:&lt;/h3&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;300&#34;
    height=&#34;481&#34;
    alt=&#34;Flow Chart luas lingkaran&#34;
    src=&#34;http://4.bp.blogspot.com/-topvJ0egkaI/VhaAEc1i0rI/AAAAAAAAB7c/TLjkOJ1o7jI/s1600/Flow%2BChart%2Bluas%2Blingkaran%2B-%2Bjava.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Nah, sudah jelas kan?&lt;/p&gt;

&lt;p&gt;Sekarang kita tinggal &lt;em&gt;coding&lt;/em&gt; saja.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;591&#34;
    height=&#34;508&#34;
    alt=&#34;Kode java luas lingkaran&#34;
    src=&#34;http://3.bp.blogspot.com/-GKiBCcH0k7Q/VhZ-UqlS0DI/AAAAAAAAB7Q/SJ8Cu-lksvo/s1600/Kode%2Bjava%2Bluas%2Blingkaran.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Silahkan dieksekusi dan pertahikan hasilnya.&lt;/p&gt;

&lt;h2 id=&#34;konversi-tipe-data&#34;&gt;Konversi Tipe Data&lt;/h2&gt;

&lt;p&gt;Konversi artinya merubah ke jenis yang lain.&lt;/p&gt;

&lt;p&gt;Kenapa kita perlu konversi tipe data?&lt;/p&gt;

&lt;p&gt;Untuk menjawabnya, saya ingin tunjukan ilustrasi berikut ini:&lt;/p&gt;

&lt;p&gt;&lt;amp-instagram
    data-shortcode=&#34;BJehYJRj8x-&#34;
    width=&#34;400&#34;
    height=&#34;400&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-instagram&gt;&lt;/p&gt;

&lt;p&gt;Air yang bentuknya cair tidak bisa disimpan dalam kardus. Karena itu,
air harus konversi dulu menjadi bentuk padat (es) agar bisa disimpan dalam
kardus.&lt;/p&gt;

&lt;p&gt;Begitu juga dengan variabel.&lt;/p&gt;

&lt;p&gt;Tipe data &lt;em&gt;string&lt;/em&gt; tidak akan bisa disimpan dalam variabel dengan tipe &lt;em&gt;integer&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&#34;cara-konversi-tipe-data&#34;&gt;Cara Konversi Tipe Data&lt;/h3&gt;

&lt;p&gt;Contoh: Konversi ke tipe integer&lt;/p&gt;

&lt;p&gt;Cara 1:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Integer.perseInt(nilai/vaiabel);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Cara 2:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Integer.valueOf(nilai/variabel);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Cara 3:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;objek.toInt();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Cara 4:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(int) variabel/nilai;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ternyata, ada banyak sekali cara.&lt;/p&gt;

&lt;h3 id=&#34;mari-kita-coba-dalam-program&#34;&gt;Mari Kita Coba dalam Program&amp;hellip;&lt;/h3&gt;

&lt;p&gt;Buatlah kelas &lt;em&gt;(java class)&lt;/em&gt; baru di paket &lt;em&gt;pertemuan2&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Berikan nama: &lt;em&gt;LuasSegitiga&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Kemudian ikuti kode program berikut:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;package pertemuan2;

import java.util.Scanner;

public class LuasSegitia {

    public static void main(String[] args) {
        // deklarasi
        Double luas;
        int alas, tinggi;

        // mebuat scanner baru
        Scanner baca = new Scanner(System.in);

        // Input
        System.out.println(&amp;quot;== Program hitung luas Segitiga ==&amp;quot;);
        System.out.print(&amp;quot;Input alas: &amp;quot;);
        alas = baca.nextInt();
        System.out.print(&amp;quot;Input tinggi: &amp;quot;);
        tinggi = baca.nextInt();

        // proses
        luas = Double.valueOf((alas * tinggi) / 2);

        // output
        System.out.println(&amp;quot;Luas = &amp;quot; + luas);
    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Variabel &lt;code&gt;luas&lt;/code&gt; bertipe data &lt;em&gt;Double&lt;/em&gt;, berarti nilai yang bisa disimpan adalah &lt;em&gt;Double&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Sedangkan variabel &lt;code&gt;alas&lt;/code&gt; dan &lt;code&gt;tinggi&lt;/code&gt; bertipe &lt;em&gt;Integer&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Agar hasil operasi data &lt;em&gt;integer&lt;/em&gt; dapat disimpan dalam variabel bertipe double, maka perlu dikonversi.&lt;/p&gt;

&lt;p&gt;Kalau dijalankan, akan menghasilkan:&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    width=&#34;607&#34;
    height=&#34;165&#34;
    alt=&#34;hasil output program luas segitiga dengan java - lab java petani kode&#34;
    src=&#34;http://4.bp.blogspot.com/-D-ewjhAcySs/ViDl9iOzQiI/AAAAAAAACAU/_y-3m7vEULw/s1600/hasil%2Boutput%2Bprogram%2Bluas%2Bsegitiga%2Bdengan%2Bjava%2B-%2Blab%2Bjava%2Bpetani%2Bkode.png&#34;
    layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;h2 id=&#34;apa-selanjutnya&#34;&gt;Apa Selanjutnya?&lt;/h2&gt;

&lt;p&gt;Kita baru saja memahami variabel dan tipe data.&lt;/p&gt;

&lt;p&gt;Kalau ada yang belum dipahami, silahkan tanyakan melalui komentar.&lt;/p&gt;

&lt;p&gt;Selanjutnya, silahkan pelajari tentang &lt;a href=&#34;https://www.petanikode.com/pemrograman-java-operator/&#34;&gt;operator pada Java&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Belajar Pemrograman Java: Program Java Pertama yang Harus Anda Buat</title>
      <link>https://www.petanikode.com/pemrograman-java-program-pertama/</link>
      <pubDate>Wed, 07 Oct 2015 21:50:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/pemrograman-java-program-pertama/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;http://3.bp.blogspot.com/-VplNxe__W4E/WIIHJK5moxI/AAAAAAAADrs/DZ8jMlvWhP84EE2ZLNLS6YZFstFASVPbACK4B/s1600/pemrograman-java-petanikode.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Setelah &lt;a href=&#34;https://www.petanikode.com/persiapan-pemrograman-java-di-linux/&#34;&gt;mempersiapkan alat-alat&lt;/a&gt; yang dibutuhkan,
selanjutnya kita coba membuat program pertama.&lt;/p&gt;

&lt;p&gt;Program yang akan dibuat sederhana, hanya menampilkan pesan ke Layar.&lt;/p&gt;

&lt;p&gt;Program ini biasanya disebut program &lt;em&gt;Hello World&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Siap&amp;hellip;?&lt;/p&gt;

&lt;h2 id=&#34;sebelum-memulai-pahami-dulu-konsepnya&#34;&gt;Sebelum Memulai, Pahami Dulu Konsepnya&lt;/h2&gt;

&lt;p&gt;Pemrograman java sebenarnya sangat sederhana.&lt;/p&gt;

&lt;p&gt;Kita hanya melakukan hal ini:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Tulis kode&lt;/strong&gt;: Menulis kode dengan Netbeans maupun teks editor yang lain.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Kompilasi&lt;/strong&gt;: Mengubah kode menjadi &lt;em&gt;bytecode&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Eksekusi&lt;/strong&gt;: Menjalankan program&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&#34;separator&#34;&gt;
  &lt;a href=&#34;http://3.bp.blogspot.com/-b00DWdKs7Cg/VhUHCkW5nbI/AAAAAAAAB4g/IA48w8pcCzs/s1600/proses%2Bpemrograman%2Bjava%2Bmenggunakan%2Bnetbeans.png&#34; imageanchor=&#34;1&#34;&gt;
  &lt;img border=&#34;0&#34; src=&#34;http://3.bp.blogspot.com/-b00DWdKs7Cg/VhUHCkW5nbI/AAAAAAAAB4g/IA48w8pcCzs/s1600/proses%2Bpemrograman%2Bjava%2Bmenggunakan%2Bnetbeans.png&#34;&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;h2 id=&#34;sekarang-mari-kita-mulai&#34;&gt;Sekarang, Mari Kita Mulai&amp;hellip;&lt;/h2&gt;

&lt;p&gt;Pertama kita harus membuat proyek dulu di Netbeans.&lt;/p&gt;

&lt;p&gt;Silahkan ikuti langkah-langkah berikut ini:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Arahkan ke menu &lt;em&gt;File&lt;/em&gt; kemudian pilih &lt;em&gt;New Project&lt;/em&gt;.
Pada jendela yang muncul, pilih &lt;em&gt;Java Application&lt;/em&gt; kemudian klik &lt;em&gt;next&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://3.bp.blogspot.com/-6gXyBvHjjNo/VhURR5ovFjI/AAAAAAAAB4w/IbY0tqXt7yE/s1600/Membuat%2Bproyek%2Bbaru%2Bdi%2Bnetbeans.png&#34; alt=&#34;Membuat Proyek Baru di Netbeans&#34; /&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Isi data proyek, cukup mengganti &lt;em&gt;project name&lt;/em&gt; saja (Lab-Java) dan &lt;em&gt;&amp;lsquo;Create Main Class&amp;rsquo;&lt;/em&gt; tidak perlu dicentang. Setelah itu klik &lt;em&gt;finish&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://1.bp.blogspot.com/-R4PCfkVQjyE/VhUSizMLRVI/AAAAAAAAB48/3A6OsuUbefA/s1600/Mengisi%2Bdata%2Bproyek.png&#34; alt=&#34;Mengisi data proyek&#34; /&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;membuat-paket-biar-rapi&#34;&gt;Membuat Paket Biar Rapi&lt;/h2&gt;

&lt;p&gt;Kita akan menyimpan tiap kode java dalam paket agar tertata rapi dan mudah ditemukan.&lt;/p&gt;

&lt;p&gt;Nama paket akan selalu berubah-ubah setiap kali pertemuan.
Pada pertemuan pertama ini nama paketnya adalah &lt;code&gt;pertemuan1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Pembuatan paket dapat dilakukan dengan mengklik kanan pada
&lt;em&gt;Source Package&lt;/em&gt;. Kemudian pilih &lt;em&gt;new&lt;/em&gt; &amp;gt; &lt;em&gt;Java Package&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://3.bp.blogspot.com/-AYw8Fgk3Bbk/VhUVJ_JHB8I/AAAAAAAAB5I/yh9V305ML9s/s1600/Membuat%2Bpaket%2Bbaru%2Bdi%2Bnetbeans.png&#34; alt=&#34;Membuat paket java di Netbeans&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Pada jendela yang muncul, isilah nama paketnya dengan &lt;code&gt;pertemuan1&lt;/code&gt;. Setelah itu, klik &lt;em&gt;Finish&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://4.bp.blogspot.com/-FGl73OZmuGo/VhUVmTSs3CI/AAAAAAAAB5Q/RhLr9q-WvYg/s1600/Mengisi%2Bnama%2Bpaket.png&#34; alt=&#34;Mengisi nama paket&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;membuat-kode-program&#34;&gt;Membuat Kode Program&lt;/h2&gt;

&lt;p&gt;Program java dibuat dalam sebuah kelas &lt;em&gt;(class)&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Buatlah sebuah kelas baru &lt;em&gt;(Java Class)&lt;/em&gt; pada paket &lt;code&gt;pertemuan1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-auMt7ptDILY/VhUXJ3fj_FI/AAAAAAAAB5c/phVlb95qgig/s1600/Membuat%2Bjava%2Bclass%2Bdi%2Bnetbeans.png&#34;&gt;&lt;img src=&#34;http://1.bp.blogspot.com/-auMt7ptDILY/VhUXJ3fj_FI/AAAAAAAAB5c/phVlb95qgig/s1600/Membuat%2Bjava%2Bclass%2Bdi%2Bnetbeans.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Pada jendela yang muncul, isilah nama kelasnya dengan &lt;code&gt;Perkenalan&lt;/code&gt;. Setelah itu klik &lt;em&gt;Finish&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pastikan&lt;/strong&gt;: Menggunakan huruf besar/kapital pada awal nama kelas.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-JFedcH8CnPo/VhUXo_diCBI/AAAAAAAAB5k/UYimLp7W6A0/s1600/Membuat%2Bkelas%2Bperkenalan%2Bdi%2Bjava.png&#34;&gt;&lt;img src=&#34;http://3.bp.blogspot.com/-JFedcH8CnPo/VhUXo_diCBI/AAAAAAAAB5k/UYimLp7W6A0/s1600/Membuat%2Bkelas%2Bperkenalan%2Bdi%2Bjava.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Maka akan tercipta sebuah kelas baru bernama &lt;code&gt;Perkenalan&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-W-xPvQ0F5zw/VhUYh6wt4kI/AAAAAAAAB5w/Wp6Rnoz7vpc/s1600/Kelas%2Bperkenalan%2Bjava.png&#34;&gt;&lt;img src=&#34;http://2.bp.blogspot.com/-W-xPvQ0F5zw/VhUYh6wt4kI/AAAAAAAAB5w/Wp6Rnoz7vpc/s1600/Kelas%2Bperkenalan%2Bjava.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Teks yang berwarna &lt;span style=&#34;color: #999999;&#34;&gt;abu-abu&lt;/span&gt; adalah sebuah komentar.&lt;/p&gt;

&lt;p&gt;Abaikan saja, karena tidak berpengaruh kepada program yang kita buat.&lt;/p&gt;

&lt;p&gt;Biasanya digunakan sebagai keterangan tambahan untuk programmer.&lt;/p&gt;

&lt;p&gt;Sementara, &lt;code&gt;package pertemuan1&lt;/code&gt; menandakan kalau kode java ini berada di dalam paket &lt;code&gt;pertemuan1&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Kelas perkenalan dimulai dari tanda kurung &amp;ldquo;&lt;code&gt;{&lt;/code&gt;&amp;rdquo; kemudian ditutup dengan tanda kurung &amp;ldquo;&lt;code&gt;}&lt;/code&gt;&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Di dalam sanalah kita akan menulis kode programnya.&lt;/p&gt;

&lt;p&gt;Sebagai contoh, silahkan buat fungsi &lt;code&gt;main()&lt;/code&gt; dalam kelas &lt;code&gt;Perkenalan&lt;/code&gt;,
isinya berupa teks perkenalan.&lt;/p&gt;

&lt;p&gt;Fungsi &lt;code&gt;main()&lt;/code&gt; adalah fungsi utama dalam sebuah program. Fungsi yang wajib
ada di setiap program Java.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://2.bp.blogspot.com/-_Rj7omw9QUU/VhUbLWVHfQI/AAAAAAAAB58/4CCCFPVdY94/s1600/Membuat%2Bfungsi%2Bmain%2Bdi%2Bprogram%2Bjava.png&#34;&gt;&lt;img src=&#34;http://2.bp.blogspot.com/-_Rj7omw9QUU/VhUbLWVHfQI/AAAAAAAAB58/4CCCFPVdY94/s1600/Membuat%2Bfungsi%2Bmain%2Bdi%2Bprogram%2Bjava.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fungsi &lt;code&gt;System.out.println(&amp;quot;...&amp;quot;);&lt;/code&gt; untuk menampilkan teks ke layar.&lt;/p&gt;

&lt;p&gt;Kita akan banyak menggunakan fungsi ini untuk menampilkan output.&lt;/p&gt;

&lt;p&gt;Sekarang&amp;hellip; mari kita coba eksekusi.&lt;/p&gt;

&lt;p&gt;Tekan &lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;F6&lt;/code&gt; untuk mengeksekusi.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://1.bp.blogspot.com/-vDCIQRwIBjA/VhUgJLfCSbI/AAAAAAAAB6U/oBBnZhUgi10/s1600/hasil%2Boutput%2Bprogram%2BSalam.png&#34;&gt;&lt;img src=&#34;http://1.bp.blogspot.com/-vDCIQRwIBjA/VhUgJLfCSbI/AAAAAAAAB6U/oBBnZhUgi10/s1600/hasil%2Boutput%2Bprogram%2BSalam.png&#34; alt=&#34;&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Nah! mudah bukan?&lt;/p&gt;

&lt;p&gt;Pada saat kita mengekan &lt;code&gt;Shift&lt;/code&gt;+&lt;code&gt;F6&lt;/code&gt;, Netbeans secara otomatis melakukan kompilasi
dan mengeksekusi program.&lt;/p&gt;

&lt;p&gt;Inilah kelebihan menggunakan Netbeans.&lt;/p&gt;

&lt;p&gt;Kita tidak perlu repot-repot kompilasi sendiri dengan perintah Command Line.&lt;/p&gt;

&lt;h2 id=&#34;apa-selanjutnya&#34;&gt;Apa Selanjutnya?&lt;/h2&gt;

&lt;p&gt;Selamat, Anda baru saja membuat program pertama.&lt;/p&gt;

&lt;p&gt;Selanjutnya, silahkan pelajari:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.petanikode.com/pemrograman-java-input-dan-output&#34;&gt;Cara Mengambil Input dan Menampilkan Output di Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.petanikode.com/pemrograman-java-variabel-dan-tipe-data&#34;&gt;Variabel dan Tipe Data pada Java&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>