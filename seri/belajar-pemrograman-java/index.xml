<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Belajar Pemrograman Java on Petani Kode — Programmer Pengguna Linux</title>
    <link>https://www.petanikode.com/seri/belajar-pemrograman-java/</link>
    <description>Recent content in Belajar Pemrograman Java on Petani Kode — Programmer Pengguna Linux</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>id-ID</language>
    <copyright>Copyright (c) 2017, Petani Kode; all rights reserved.</copyright>
    <lastBuildDate>Thu, 21 Apr 2016 22:34:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.petanikode.com/seri/belajar-pemrograman-java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Belajar Pemrograman Java: Cara Menggunakan Array untuk Menyimpan Banyak Hal</title>
      <link>https://www.petanikode.com/java-array/</link>
      <pubDate>Thu, 21 Apr 2016 22:34:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-array/</guid>
      <description>Apa yang akan kita lakukan bila memiliki banyak data yang akan disimpan dalam vairabel?
Misalkan kita ingin menyimpan nama-nama teman dalam variabel.
Maka mungkin kita akan melakukannya seperti ini:
String namaTeman1 = &amp;quot;Linda&amp;quot;; String namaTeman2 = &amp;quot;Santi&amp;quot;; String namaTeman3 = &amp;quot;Susan&amp;quot;; String namaTeman4 = &amp;quot;Mila&amp;quot;; String namaTeman5 = &amp;quot;Ayu&amp;quot;;  Hal ini sah-sah saja.
Akan tetapi&amp;hellip;
Masalahnya bagaimana kala datanya banyak, misalkan ada 100 data, pastinya capek donk membuat variabel sebanyak itu.</description>
    </item>
    
    <item>
      <title>Belajar Pemrograman Java: Memahami Dua Jenis Perulangan dalam Java</title>
      <link>https://www.petanikode.com/java-perulangan/</link>
      <pubDate>Sun, 03 Jan 2016 18:28:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-perulangan/</guid>
      <description>Apa yang akan kita lakukan bila ingin menyuruh komputer mengerjakan perintah yang berulang-ulang?
Misalkan kita ingin menyuruh komputer menampilkan teks Petani Kode sebanyak 5x.
Maka kita bisa menyuruhnya seperti ini:
System.out.println(&amp;quot;Petani Kode&amp;quot;); System.out.println(&amp;quot;Petani Kode&amp;quot;); System.out.println(&amp;quot;Petani Kode&amp;quot;); System.out.println(&amp;quot;Petani Kode&amp;quot;); System.out.println(&amp;quot;Petani Kode&amp;quot;);  Tapi&amp;hellip; bagaimana kalau sebanyak 1000x, apa kita akan mampu mengetik kode sebanyak itu?
Tentunya tidak.
Karena itu, kita harus pakai perulangan.

Contoh perulangan:
for (int hitungan = 0; hitungan &amp;lt;= 1000; hitungan++) { System.</description>
    </item>
    
    <item>
      <title>Belajar Java: 3 Bentuk Percabangan yang Harus Dipahami</title>
      <link>https://www.petanikode.com/java-percabangan/</link>
      <pubDate>Sun, 25 Oct 2015 18:33:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-percabangan/</guid>
      <description>Kalau kita perhatikan, alur pengeksekusian sebuah kode program dikerjakan satu per satu dari atas sampai ke bawah.
Baris demi baris dibaca, kemudian komputer mengerjakan apa yang diperintahkan.
Misalnya seperti ini:
Alur programnya satu, tidak ada belokan atau percabangan.
Ngomong-ngomong apa itu percabangan?
Percabangan hanyalah sebuah istilah yang digunakan untuk menyebut alur program yang bercabang.
Percabangan juga dikenal dengan &amp;ldquo;Control Flow&amp;rdquo;, &amp;ldquo;Struktur Kondisi&amp;rdquo;, &amp;ldquo;Struktur IF&amp;rdquo;, &amp;ldquo;Decision&amp;rdquo;, dsb. Semuanya itu sama.</description>
    </item>
    
    <item>
      <title>Belajar Pemrograman Java: 6 Jenis Operator yang Harus Dipahami</title>
      <link>https://www.petanikode.com/java-operator/</link>
      <pubDate>Sat, 17 Oct 2015 20:12:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-operator/</guid>
      <description>Operator dalam pemrograman digunakan untuk melakukan operasi tertentu.
Misalkan kita ingin menjumlahkan nilai dari variabel x dan y, maka kita bisa lakukan dengan operator penjumlahan (+).
x + y  Ada enam jenis kelompok operator dalam pemrograman Java:
 Operator Artimatika; Operator Penugasan; Operator Pembanding; Operator Logika; Operator Bitwise; dan Operator Ternary.  Bila digambarkan dalam mind map, akan terlihat seperti ini:
Ukuran penuh dari mind map ini dapat kamu lihat di: coggle.</description>
    </item>
    
    <item>
      <title>Belajar Pemrograman Java: Variabel dan Tipe Data</title>
      <link>https://www.petanikode.com/java-variabel-dan-tipe-data/</link>
      <pubDate>Sun, 11 Oct 2015 13:44:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-variabel-dan-tipe-data/</guid>
      <description>Variabel adalah tempat menyimpan nilai sementara.
Itu saja.
Serius?
Iya serius, kalau mau yang lebih panjang&amp;hellip;
&amp;hellip;coba kita lihat pengertiannya dari Wikipedia:
Variabel: (Lat) 1. berubah-ubah, tidak tetap; 2. deklarasi sesuatu yang memiliki variasi nilai 3. berbeda-beda dalam bahasa pemrograman disebut juga simbol yang mewakili nilai tertentu, variabel yang dikenal di sub program disebut variabel lokal. sedang yang di kenal secara umum/utuh dalam satu program disebut variabel global.
Nah, ngerti gak?</description>
    </item>
    
    <item>
      <title>Belajar Pemrograman Java: Program Java Pertama yang Harus Anda Buat</title>
      <link>https://www.petanikode.com/java-program-pertama/</link>
      <pubDate>Wed, 07 Oct 2015 21:50:00 +0000</pubDate>
      
      <guid>https://www.petanikode.com/java-program-pertama/</guid>
      <description>Setelah mempersiapkan alat-alat yang dibutuhkan, selanjutnya kita coba membuat program pertama.
Program yang akan dibuat sederhana, hanya menampilkan pesan ke Layar.
Program ini biasanya disebut program Hello World.
Siap&amp;hellip;?
Sebelum Memulai, Pahami Dulu Konsepnya Pemrograman java sebenarnya sangat sederhana.
Kita hanya melakukan hal ini:
 Tulis kode: Menulis kode dengan Netbeans maupun teks editor yang lain. Kompilasi: Mengubah kode menjadi bytecode. Eksekusi: Menjalankan program    Sekarang, Mari Kita Mulai&amp;hellip; Pertama kita harus membuat proyek dulu di Netbeans.</description>
    </item>
    
  </channel>
</rss>