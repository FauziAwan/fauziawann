<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tutorial on Petani Kode</title>
    <link>http://petanikode.com/seri/tutorial/index.xml</link>
    <description>Recent content in Tutorial on Petani Kode</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>id-id</language>
    <copyright>Copyright (c) 2017, Petani Kode; all rights reserved.</copyright>
    <atom:link href="http://petanikode.com/seri/tutorial/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Berkenalan dengan Vue.js</title>
      <link>http://petanikode.com/2017/02/berkenalan-dengan-vue.js/</link>
      <pubDate>Sun, 05 Feb 2017 19:25:26 +0800</pubDate>
      
      <guid>http://petanikode.com/2017/02/berkenalan-dengan-vue.js/</guid>
      <description>

&lt;p&gt;Hari ini saya baru berkenalan dengan Vue.js. Saya sudah mendengar tentang
Vue.js dari beberapa teman dan forum. Tapi, saya belum pernah mulai mencobanya.&lt;/p&gt;

&lt;p&gt;Awalnya saya ingin membuat sebuah alat untuk kebutuhan saya sendiri, yaitu alat
yang bisa membuat tag &lt;code&gt;amp-img&lt;/code&gt; secara otmatis melalui url gambar. Karena masih
banyak artikel di blog ini yang belum disungting dan belum valid AMP.&lt;/p&gt;

&lt;p&gt;Pembuatan tag &lt;code&gt;amp-img&lt;/code&gt; secara manual terasa sangat melelahkan, karena saya harus
menyesuiakan nilai atribut &lt;code&gt;width&lt;/code&gt; dan &lt;code&gt;height&lt;/code&gt; dengan ukuran gambarnya. Saya
kemudian berpikir untuk membuat alatnya agar bisa otomatis.&lt;/p&gt;

&lt;p&gt;Mungkin saya bisa menggunakan &lt;a href=&#34;http://petanikode.com/topik/jquer&#34;&gt;JQuery&lt;/a&gt; atau &lt;a href=&#34;http://petanikode.com/topik/javascript&#34;&gt;Javascript&lt;/a&gt; murni.
Namun, sepertinya JQuery sudah mulai ketingalan zaman dan kalau menggunakan js murni nanti
kodenya mungkin akan banyak. Kemudian saya ingin menggunakan &lt;a href=&#34;angularjs&#34;&gt;Angularjs&lt;/a&gt;,
tapi saya belum mendalami Angular. Akhirnya saya mencoba Vuejs.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
width=&#34;720&#34;
height=&#34;380&#34;
alt=&#34;vuejs-petanikode.png&#34;
src=&#34;https://2.bp.blogspot.com/-rEB8YCwAYss/WJcjDEfbCaI/AAAAAAAADw4/1etYO0NlG4s_KerO7cACm0fGYJuiXHt6QCPcB/s1600/vuejs-petanikode.png&#34;
layout=&#34;responsive&#34;&gt;
&lt;/amp-img&gt;&lt;/p&gt;

&lt;h2 id=&#34;instalasi&#34;&gt;Instalasi&lt;/h2&gt;

&lt;p&gt;Penggunaan Vuejs seperti JQuery, kita tinggal mengimpor skrip vuejs-nya ke dalam HTML.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;https://cdnjs.cloudflare.com/ajax/libs/vue/2.1.10/vue.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;logika-program&#34;&gt;Logika Program&lt;/h2&gt;

&lt;p&gt;Sebelum mulai menggunakan Vuejs, saya memikirkan dulu apa yang akan dilakukan program ini.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Paste URL&lt;/li&gt;
&lt;li&gt;Ambil lebar dan tinggi dari URL&lt;/li&gt;
&lt;li&gt;Ambil nama file gambar untuk teks alternatif&lt;/li&gt;
&lt;li&gt;Buat tag &lt;code&gt;amp-img&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Itu saja, tinggal Googling dan bikin kodenya. :smile:&lt;/p&gt;

&lt;h2 id=&#34;declarative-rendering-vuejs&#34;&gt;Declarative Rendering Vuejs&lt;/h2&gt;

&lt;p&gt;Berdasarkan panduan yang diberikan di dokumentasi Vuejs, saya diberikan contoh
kode berikut.&lt;/p&gt;

&lt;p&gt;html:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div id=&amp;quot;app&amp;quot;&amp;gt;
  {{ message }}
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;javascript:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var app = new Vue({
  el: &#39;#app&#39;,
  data: {
    message: &#39;Hello Vue!&#39;
  }
})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Kode di atas akan menghasilkan output &lt;code&gt;Hello Vue!&lt;/code&gt;. Terilhat lebih mudah dari
Angular. Hmm, mungkin nanti saya akan mulai suka dan jatuh cinta dengan Vuejs. :heart_eyes:&lt;/p&gt;

&lt;h2 id=&#34;vue-model&#34;&gt;Vue Model&lt;/h2&gt;

&lt;p&gt;Setelah itu, saya berkenalan dengan Vue Model. Karena sebelumnya saya mencari di
Google tentang &lt;em&gt;event onchange&lt;/em&gt; di Vue, malah dikasi Vue Model. &lt;em&gt;Event onchange&lt;/em&gt;
saya butuhkan agar nanti ketika paste url, langsung dibuat tag &lt;code&gt;amp-img&lt;/code&gt;-nya.&lt;/p&gt;

&lt;p&gt;Untuk membuat model Vue dari komponen form seperti input, kita tinggal buat atribut
&lt;code&gt;v-model&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;input v-model=&amp;quot;src&amp;quot; type=&amp;quot;text&amp;quot; placeholder=&amp;quot;http://example.com/image.jpg&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nama model yang saya buat di atas adala &lt;code&gt;src&lt;/code&gt;. Model ini untuk menampung url gambar.
Kemudian untuk mengambil nilai dari model tersebut caranya seperti ini.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;textarea rows=&amp;quot;8&amp;quot;&amp;gt;
&amp;amp;lt;amp-img
width=&amp;quot;&amp;quot;
height=&amp;quot;&amp;quot;
alt=&amp;quot;&amp;quot;
src=&amp;quot;{{ src }}&amp;quot;
layout=&amp;quot;&amp;quot;&amp;amp;gt;
&amp;amp;lt;/amp-img&amp;amp;gt;&amp;lt;/textarea&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Apapun yang kita ketik pada elemen model akan langsung di-render.&lt;/p&gt;

&lt;h2 id=&#34;vue-method&#34;&gt;Vue Method&lt;/h2&gt;

&lt;p&gt;Selanjutnya, karena saya ingin mengambil nilai tinggi dan lebar dari gambar.
Saya membutuhkan sebuah fungsi. Karena mungkin di Vue belum ada fungsi tersebut.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;var app = new Vue({
  el: &#39;#app&#39;,
  data: {
    width: &#39;&#39;,
    height: &#39;&#39;,
    layout: &#39;responsive&#39;,
    alt: &#39;&#39;,
    src: &#39;&#39;
  },
  methods: {
    getImageData: function () {
        var img = new Image();
        img.onload = function(){
            // ambil ukuran gambar
            app.width = this.width
            app.height = this.height
        };
        img.src = this.src;
        console.log(this.src);

        var index = this.src.lastIndexOf(&amp;quot;/&amp;quot;) + 1;
        var filename = this.src.substr(index);
        this.alt = unescape(filename);
        console.log(filename);
    }
  }
})
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pada kode di atas, saya membuat sebuah fungsi bernama &lt;code&gt;getImageData()&lt;/code&gt;. Isi
dari fungsi tersebut untuk mengambil tinggi, lebar, dan nama file gambar.
Fungsi ini saya dapatkan dari &lt;a href=&#34;http://stackoverflow.com/a/11442850/2658551&#34;&gt;Stack Overflow&lt;/a&gt;.
Lalu fungsi ini saya panggil pada &lt;em&gt;event keyup&lt;/em&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;input v-on:keyup=&amp;quot;getImageData()&amp;quot; v-model=&amp;quot;src&amp;quot; type=&amp;quot;text&amp;quot; placeholder=&amp;quot;http://example.com/image.jpg&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;selesai&#34;&gt;Selesai&lt;/h2&gt;

&lt;p&gt;Semua yang saya butuhkan sudah tercapai. Programnya bisa berjalan sesuai harapan.
Apakah itu saja? Ya benar cuma itu saja. Sebanarnya banyak error yang saya dapatkan,
tapi saya tidak akan ceritakan di sini hehehe :smile:.&lt;/p&gt;

&lt;p&gt;&lt;amp-twitter width=486 height=657
    layout=&#34;responsive&#34;
    data-tweetid=&#34;828231245591048198&#34;&gt;
&lt;/amp-twitter&gt;&lt;/p&gt;

&lt;p&gt;Dengan penuh percaya diri, saya pun merilisnya ke publik.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Hasilnya: &lt;a href=&#34;http://petanikode.com/amp-tools/amp-img.html&#34;&gt;http://petanikode.com/amp-tools/amp-img.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Kode sumber: &lt;a href=&#34;https://github.com/petanikode/amp-tools&#34;&gt;https://github.com/petanikode/amp-tools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Artikel ini bukan tutorial yang dapat anda ikuti. Melaikan hanya untuk berbagi
pengalaman saja. Terima kasih sudah membaca.&lt;/p&gt;

&lt;p&gt;Baca juga: &lt;a href=&#34;http://petanikode.com/2017/01/saya-tidak-bisa-bahasa-pemrograman-go-terpaksa-ini-yang-saya-lakukan/&#34;&gt;Saya tidak Bisa Bahasa Pemrograman Go, Terpaksa ini yang Saya Lakukan&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Referensi: &lt;a href=&#34;https://vuejs.org/v2/guide/&#34;&gt;vuejs.org&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cara Upload File ke Server FTP ala Git</title>
      <link>http://petanikode.com/2017/01/cara-upload-file-ke-server-ftp-ala-git/</link>
      <pubDate>Tue, 31 Jan 2017 12:09:55 +0800</pubDate>
      
      <guid>http://petanikode.com/2017/01/cara-upload-file-ke-server-ftp-ala-git/</guid>
      <description>

&lt;p&gt;Ketika kita akan men-deploy atau &lt;em&gt;hosting&lt;/em&gt; sebuah web di server &lt;em&gt;shared hosting&lt;/em&gt;,
kita akan diberikan fasilitas FTP untuk upload file. Kita bisa menggunakan
&lt;em&gt;FTP Client&lt;/em&gt; seperti FileZilla untuk upload file. Namun, bagaimana kalau nanti
ada perubahan? Tentu kita akan mencari file yang diubah dan di-upload lagi.
Hal ini mungkin terasa sedikit melelahkan.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
width=&#34;720&#34;
height=&#34;380&#34;
alt=&#34;Git FTP&#34;
src=&#34;https://1.bp.blogspot.com/-jeWvQeAn-TQ/WJGe6gyu6vI/AAAAAAAADwM/yJ-X3DG9T5sLyIow4kyD-cHt_nCOYP_qgCPcB/s1600/upload-file-ftp-ala-git-petanikode.png&#34;
layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Sedangkan, kalau kita menggunakan Git. Kita hanya perlu melakukan &lt;em&gt;push&lt;/em&gt; untuk
mengupload perubahan ke server atau repository &lt;em&gt;remote&lt;/em&gt;. Akan tetapi, server yang
kita gunakan tidak mendukung Git.&lt;/p&gt;

&lt;p&gt;Sebuah alat bernama &lt;code&gt;git-ftp&lt;/code&gt; memungkinkan kita untuk meng-upload file ke server
FTP seperti cara Git. Kita tidak akan repot mencari file yang sudah diubah untuk
diupload lagi dan menindih yang sudah ada di server. Karena &lt;code&gt;git-ftp&lt;/code&gt; akan melakukan
sinkronisasi berdasarkan perubahan yang dicatat oleh Git.&lt;/p&gt;

&lt;h2 id=&#34;instalasi-git-ftp&#34;&gt;Instalasi git-ftp&lt;/h2&gt;

&lt;p&gt;Instalasi &lt;code&gt;git-ftp&lt;/code&gt; di Ubuntu dapat dilakukan dengan perintah:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo apt install git-ftp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Instalasi di sistem operasi lain, silahkan baca &lt;a href=&#34;https://github.com/git-ftp/git-ftp/blob/develop/INSTALL.md&#34;&gt;di sini&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;konfigurasi-awal&#34;&gt;Konfigurasi Awal&lt;/h2&gt;

&lt;p&gt;Masuk ke direktori proyeknya. Pastikan sudah menggunakan Git di sana. Kemudian
tambahkan konfigurasi &lt;code&gt;git-ftp&lt;/code&gt; dengan perintah berikut.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git config git-ftp.url ftp.example.net
git config git-ftp.user ftp-user
git config git-ftp.password rah4sia
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sebagai contoh, saya menggunakan hosting &lt;a href=&#34;http://api.idhostinger.com/redir/18671649&#34;&gt;gratis dari idhostinger&lt;/a&gt;
dan membuat akun FTP sebagai berikut.&lt;/p&gt;

&lt;p&gt;&lt;amp-img
width=&#34;924&#34;
height=&#34;255&#34;
alt=&#34;Akun FTP di IDhostinger&#34;
src=&#34;https://4.bp.blogspot.com/-3WZZA8H29bY/WI_rPPRQvJI/AAAAAAAADvs/YpKGbgQs6b0d1zZTwnJYOm9okOq4FlCyQCPcB/s1600/Akun%2BFTP%2Bdi%2Bihostinger.png&#34;
layout=&#34;responsive&#34;&gt;&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Misalkan saya ingin upload ke direktori &lt;code&gt;project1&lt;/code&gt;, Maka konfigurasi
&lt;code&gt;git-ftp&lt;/code&gt;-nya seagai berikut.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git config git-ftp.url ftp.petanikode.hol.es/project1
git config git-ftp.user u898309845.petanikode
git config git-ftp.password SangatRah4sia
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;upload-pertama&#34;&gt;Upload Pertama&lt;/h2&gt;

&lt;p&gt;Setelah kita melakukan konfigurasi &lt;code&gt;git-ftp&lt;/code&gt;, selanjutnya kita bisa upload semua
file dengan perintah:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git ftp init
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Proses ini akan memakan waktu cukup lama apabila terdapat banyak file yang akan
di-upload. Perintah ini akan meng-upload semua file, kecuali yang terdaftar dalam
&lt;code&gt;.gitignore&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;upload-perubahan&#34;&gt;Upload Perubahan&lt;/h2&gt;

&lt;p&gt;Jika ada perubahan, kita harus mealkukan &lt;code&gt;commit&lt;/code&gt; terlebih dahulu.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git add .
git commit -m &amp;quot;ini perubahan yang dilakukan&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Setelah itu, kita bisa upload lagi perubahannya dengan perintah.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git ftp push
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Maka &lt;code&gt;git-ftp&lt;/code&gt; akan melakukan upload file-file yang sudah diubah dan menindih
yang sudah ada di server.&lt;/p&gt;

&lt;p&gt;Begitulah cara upload file seperti cara &lt;a href=&#34;http://petanikode.com/topik/git&#34;&gt;Git&lt;/a&gt;. Semoga bermanfaat.&lt;/p&gt;

&lt;p&gt;Referensi: &lt;a href=&#34;https://git-ftp.github.io/&#34;&gt;git-ftp.github.io&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cara Hosting Hugo di Github</title>
      <link>http://petanikode.com/2017/01/cara-hosting-hugo-di-github/</link>
      <pubDate>Mon, 30 Jan 2017 20:14:28 +0800</pubDate>
      
      <guid>http://petanikode.com/2017/01/cara-hosting-hugo-di-github/</guid>
      <description>

&lt;p&gt;Hosting/deploy Hugo di Github tidaklah sulit, karena sebenarnya kita hanya perlu
mengunggah file yang ada di direktori &lt;code&gt;public&lt;/code&gt; saja. Ada empat cara hosting
Hugo di Github yang diberikan pada dokumentasi, diantaranya:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Hosting ke direktori &lt;code&gt;doc&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Hosting ke cabang &lt;code&gt;gh-pages&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Hosting ke halaman personal/organisasi&lt;/li&gt;
&lt;li&gt;Hosting Github dengan Continuous Integration (CI)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Kita akan mencoba cara yang nomer 3, karena menurut saya cukup gampang. Kita
membutuhkan dua repositori untuk melakukan cara ini.&lt;/p&gt;

&lt;h2 id=&#34;1-membuat-repositori&#34;&gt;1. Membuat Repositori&lt;/h2&gt;

&lt;p&gt;Buatlah dua repositori di Github dengan nama seperti berikut ini.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;kontent-web-hugo&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;username.github.io&lt;/code&gt; atau &lt;code&gt;organisasi.github.io&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Pertama, repositori &lt;code&gt;kontent-web-hugo&lt;/code&gt; fungsinya untuk menyimpan konten dari Web.
Sementara repositori &lt;code&gt;username.github.io&lt;/code&gt; untuk menyimpan file yang ada di &lt;code&gt;public&lt;/code&gt;
atau hasil &lt;em&gt;render&lt;/em&gt; dari Hugo. Nama repositori anda tidak harus &lt;code&gt;kontent-web-hugo&lt;/code&gt;,
Anda bisa menggunakan nama selain itu.&lt;/p&gt;

&lt;h2 id=&#34;2-persiapkan-repositori-lokal&#34;&gt;2. Persiapkan Repositori Lokal&lt;/h2&gt;

&lt;p&gt;Buatlah repositori baru di dalam proyek hugo. Lakukan inisialisasi git.
Silahkan ikuti perintah berikut ini.&lt;/p&gt;

&lt;p&gt;masuk ke direktori Hugo:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd kontent-web-hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Inisialisasi Git:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git init
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hapus direktori &lt;code&gt;public&lt;/code&gt;, tenang nanti kita bisa buat lagi dengan perntah &lt;code&gt;hugo&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;rm -rf public
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tambahkan repositori &lt;em&gt;remote&lt;/em&gt; (github):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git remote add origin https://github.com/{username}/{nama-repo}.git
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;3-upload-ke-github&#34;&gt;3. Upload ke Github&lt;/h2&gt;

&lt;p&gt;Repositori lokal sudah dipersiapkan, sekarang kita upload dulu ke github.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git add .
git commit -m &amp;quot;commit pertama&amp;quot;
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;4-membuat-submodul&#34;&gt;4. Membuat Submodul&lt;/h2&gt;

&lt;p&gt;Submodul ini merupakan repositori anak dari repositori &lt;code&gt;kontent-web-hugo&lt;/code&gt;.
Repositori ini akan menggunakan repositori &lt;code&gt;username.github.io&lt;/code&gt; sebagai
repositori remote-nya.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git submodule add -b master https://github.com/{username}/{username}.github.io.git public
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;5-membuat-skrip-deploy-sh&#34;&gt;5. Membuat Skrip &lt;code&gt;deploy.sh&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;Sebenarnya kita bisa langsung unggah semua file yang ada di direktori &lt;code&gt;public&lt;/code&gt;
dengan perintah&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cd public
git add .
git commit -m &amp;quot;tes Deploy hugo&amp;quot;
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Agar kita tidak mengetik perintah di atas terus-menerus setiap mau deploy, maka
kita memerlukan skrip. Untungnya Hugo sudah menyediakannya. Silahkan ditambahkan
skrip ini di direktori Hugo-nya.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;#!/bin/bash

echo -e &amp;quot;\033[0;32mDeploying updates to GitHub...\033[0m&amp;quot;

# Build the project.
hugo # if using a theme, replace by `hugo -t &amp;lt;yourtheme&amp;gt;`

# Go To Public folder
cd public
# Add changes to git.
git add -A

# Commit changes.
msg=&amp;quot;rebuilding site `date`&amp;quot;
if [ $# -eq 1 ]
  then msg=&amp;quot;$1&amp;quot;
fi
git commit -m &amp;quot;$msg&amp;quot;

# Push source and build repos.
git push origin master

# Come Back
cd ..
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Berikan hak akses eksekusi untuk skrip ini.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;chmod +x deploy.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Nah, kita bisa melakukan deploy dengan skrip tersebut. Setiap kali kita ingin
meng-update ke Github, kita cukup menjalankan skrip itu saja. Contohnya:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;./deploy.sh &amp;quot;tes deploy web hugo ke github&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tuggulah beberapa saat, website kita akan segera mengudara di &lt;code&gt;username.github.io&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Cara ini sudah saya coba di blog saya,&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Repositori konten &lt;a href=&#34;https://github.com/ardianta/ardianta-pargo&#34;&gt;https://github.com/ardianta/ardianta-pargo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Repositori hasil render &lt;a href=&#34;https://github.com/ardianta/ardianta.github.io&#34;&gt;https://github.com/ardianta/ardianta.github.io&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Sebenarnya kita tidak harus membuat repositori &lt;code&gt;kontent-web-hugo&lt;/code&gt;, karena webnya
sudah bisa langsung di-hosting di &lt;code&gt;username.github.io&lt;/code&gt;. Tapi untuk jaga-jaga
kalau suatu saat nanti repositori lokalnya hilang, maka kita bisa ambil dari sana lagi.&lt;/p&gt;

&lt;p&gt;Referensi: &lt;a href=&#34;https://gohugo.io/tutorials/github-pages-blog/&#34;&gt;https://gohugo.io/tutorials/github-pages-blog/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cara Impor Artikel Blogger ke Hugo Kurang dari 15 Menit</title>
      <link>http://petanikode.com/2017/01/cara-impor-artikel-blogger-ke-hugo-kurang-dari-15-menit/</link>
      <pubDate>Fri, 13 Jan 2017 21:08:45 +0800</pubDate>
      
      <guid>http://petanikode.com/2017/01/cara-impor-artikel-blogger-ke-hugo-kurang-dari-15-menit/</guid>
      <description>

&lt;p&gt;Dalam rangka migrasi Petani Kode ke Hugo, saya harus melakukan impor artikel dari Blogger ke Hugo. Untungnya Hugo sudah menyediakan skrip untuk impor konten dari blogger ke Hugo. Proses impor ini memakan waktu cukup cepat. Saya kira, tidak sampai 15 menit. Benar sekali, mungkin anda bisa melakukannya lebih cepat.&lt;/p&gt;

&lt;p&gt;Saya asumsikan, kita telah menginstal &lt;a href=&#34;https://golang.org&#34;&gt;Go (Golang)&lt;/a&gt; dan &lt;a href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt;. Kemudian lakukan langkah-langkah berikut ini.&lt;/p&gt;

&lt;h2 id=&#34;1-ekspor-blog&#34;&gt;1. Ekspor Blog&lt;/h2&gt;

&lt;p&gt;Pertama, kita perlu mengekspor dulu konten yang ada di blogger. Masuk ke &lt;em&gt;Settings&amp;gt;Other&lt;/em&gt; kemudian klik &lt;em&gt;Back up Content&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;amp-img
    src=&#34;https://lh3.googleusercontent.com/8hFKhTL6Mxfi6L9ht8Zy1vGhnbrw-yX12l91QfUShBV9DJrqGfYYDjZgUB0-MKmwvL4OukfMqYBUyi4j7xh7aFPmpgMiRX8mIrNRTiPi1_uNr8dl-v7v-w0IL4ZhSs3kmjB8Moe6DykxLHtME2Ei6qj5_W0xL9BBHht7gErt5vSTaf2Q_sTwtc9eAhoiVkBRgrwFnRp8GwX1gDz9CVI_KT32DhFRMdyWKT-zeFJbIlH4UMbatDm_lGt_S7OtI22z0QbWEH7v1ZoLshqfXLBKrPjlBVneAOdmmV9E4Lbydx1AxHvNQjIGyoZOQLPOTRWQKXApYyTWMdgtdfZv0NqiX9IgQ-ld1lrC2DYTphdIWPvDv7QDcSok3prUz54Wep0AT98m9Y0UCaFIT1qnqIJa8J05JUEfHzsl-nXA43fBmk5J1Kt7JFP7ODlGQkzbSPazkEcxpkVxBVzB6KWQqqaysVad1A14cu-Caa86vP1HMIDxjXTl4RX54l15gIxfa6KpUY34ZCDR9Q8eoIyEuaTTlk70n48MYAvNCFNNUm95Uk1ZOrECYm9AB-xr2aLoCB-DDt2E335GkMzWLy6TOLFQfZhzJDtbIkgSr5pEKdB0C9VQKG8TPEG2=w796-h286-no&#34;
    width=&#34;796&#34;
    height=&#34;268&#34;
    layout=&#34;responsive&#34;
    alt=&#34;Ekspor kontent blog&#34;&gt;&lt;/amp-img&gt;&lt;/p&gt;

&lt;p&gt;Kita akan mendapatkan file &lt;code&gt;.xml&lt;/code&gt;, nah file ini nanti yang akan kita ekstrak isinya menjadi format &lt;em&gt;markdown&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&#34;2-download-skrip&#34;&gt;2. Download skrip&lt;/h2&gt;

&lt;p&gt;Selanjutnya kita membutuhkan skrip untuk melakukan ekstrak terhadap file &lt;code&gt;.xml&lt;/code&gt; tadi. Silahkan klon skripnya di &lt;a href=&#34;https://github.com/natefinch/blogimport&#34;&gt;github&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/natefinch/blogimport
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;3-impor-konten&#34;&gt;3. Impor Konten&lt;/h2&gt;

&lt;p&gt;Setelah kita mendapatkan skripnya, sekarang kita harus mengekstrak isi dari file &lt;code&gt;.xml&lt;/code&gt; menjadi file &lt;em&gt;markdown&lt;/em&gt;. Pertama, masuk dulu ke direktori skripnya.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd blogimpor
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Setelah itu buat direktori baru sebagai tempat menampung hasil ekstraksi.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir artikel
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Jalankan skrip:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;go run main.go ~/Downloads/blog-2017-01-13.xml artikel
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Setelah itu, coba periksa direktori artikel.
&lt;amp-img
    src=&#34;https://lh3.googleusercontent.com/I36HhwnAxaNYEouTOg7BpGwcbnhX-Gxjab8gCSGUj69Q2Kif1TyPiQbyLuHQ9zLzaoHy6pYS8lZivKFKWkBW69Gh5oNrrl797rBt3LN26t2nqtxXdqH5E95jFxGOUkAE7ule2FuxVEdqQTp3Uc9dEu8O1CldVHZ-5PdthwNCgux7t8R7yEEhvBVOyPZOCoYJLp6agg6Ckmq2sF8lP8P5C3_qxWXo9IcuDURRmn6qnpd0oRTdRtR9NGiR65-8nyQ-cEMbnGvPXer7HG2Nb65ramTqtZ27ycrJA-u8PqK79ZTryEsYj2gBOwRh5U3Yn3xbQkqc41ZnnUJ0qpQFy_M-54BEzHdU43cIgtsHaIRw7GYERk81xor3htxrOc-pF-1JNcq8IcbjWzYHSeDx17zlkiB9kedDhsBoluIjmTPHEWdgoYfsngylDRH8Eg_in4lE05XE9lUIe1S_sbHTik_1VdRp29SFujsfliQYRLfNDGhrHSomljnS8Vf_oM0P8aVvy27Y5ONkmNa-YYLGuYrDSBGonJ53VYVHVXN5gr900nnl7cVMmApjKL25SIlgsbGmX_RKZxKzAExmpOn7q2dsoKc4wR0gzpDFgXRmAEG-lypoeD68ouGj=w854-h457-no&#34;
    width=&#34;854&#34;
    height=&#34;457&#34;
    layout=&#34;responsive&#34;
    alt=&#34;Ekspor kontent blog&#34;&gt;&lt;/amp-img&gt;
Selanjutnya, kita bisa pindahkan semua file &lt;em&gt;markdown&lt;/em&gt; ini ke direktori &lt;em&gt;content&lt;/em&gt; di Hugo.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>